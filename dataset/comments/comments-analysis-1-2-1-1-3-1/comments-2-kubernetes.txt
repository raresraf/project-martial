{
    "1": {
        "comment": "Copyright 2014 The Kubernetes Authors All rights reserved ",
        "similar_with": [
            1
        ]
    },
    "2": {
        "comment": "Copyright 2014 The Kubernetes Authors All rights reserved Licensed under the Apache License Version 20 the License ",
        "similar_with": [
            2
        ]
    },
    "3": {
        "comment": "Licensed under the Apache License Version 20 the License ",
        "similar_with": [
            3
        ]
    },
    "4": {
        "comment": "Licensed under the Apache License Version 20 the License you may not use this file except in compliance with the License ",
        "similar_with": [
            4
        ]
    },
    "5": {
        "comment": "you may not use this file except in compliance with the License ",
        "similar_with": [
            5
        ]
    },
    "6": {
        "comment": "you may not use this file except in compliance with the License You may obtain a copy of the License at ",
        "similar_with": [
            6
        ]
    },
    "7": {
        "comment": "You may obtain a copy of the License at ",
        "similar_with": [
            7
        ]
    },
    "8": {
        "comment": "You may obtain a copy of the License at httpwwwapacheorglicensesLICENSE20 ",
        "similar_with": [
            8
        ]
    },
    "9": {
        "comment": "httpwwwapacheorglicensesLICENSE20 ",
        "similar_with": [
            9
        ]
    },
    "10": {
        "comment": "httpwwwapacheorglicensesLICENSE20 Unless required by applicable law or agreed to in writing software ",
        "similar_with": [
            10
        ]
    },
    "11": {
        "comment": "Unless required by applicable law or agreed to in writing software ",
        "similar_with": [
            11
        ]
    },
    "12": {
        "comment": "Unless required by applicable law or agreed to in writing software distributed under the License is distributed on an AS IS BASIS ",
        "similar_with": [
            12
        ]
    },
    "13": {
        "comment": "distributed under the License is distributed on an AS IS BASIS ",
        "similar_with": [
            13
        ]
    },
    "14": {
        "comment": "distributed under the License is distributed on an AS IS BASIS WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND either express or implied ",
        "similar_with": [
            14
        ]
    },
    "15": {
        "comment": "WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND either express or implied ",
        "similar_with": [
            15
        ]
    },
    "16": {
        "comment": "WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND either express or implied See the License for the specific language governing permissions and ",
        "similar_with": [
            16
        ]
    },
    "17": {
        "comment": "See the License for the specific language governing permissions and ",
        "similar_with": [
            17
        ]
    },
    "18": {
        "comment": "See the License for the specific language governing permissions and limitations under the License ",
        "similar_with": [
            18
        ]
    },
    "19": {
        "comment": "limitations under the License ",
        "similar_with": [
            19
        ]
    },
    "20": {
        "comment": "limitations under the License reflect ",
        "similar_with": [
            20
        ]
    },
    "21": {
        "comment": "reflect ",
        "similar_with": [
            21
        ]
    },
    "22": {
        "comment": "reflect See the below test scale is the negative of an exponent ",
        "similar_with": [
            22
        ]
    },
    "23": {
        "comment": "See the below test scale is the negative of an exponent ",
        "similar_with": [
            23
        ]
    },
    "24": {
        "comment": "See the below test scale is the negative of an exponent TestQuantityParseZero ensures that when a 0 quantity is passed its string value is 0 ",
        "similar_with": [
            24
        ]
    },
    "25": {
        "comment": "TestQuantityParseZero ensures that when a 0 quantity is passed its string value is 0 ",
        "similar_with": [
            25
        ]
    },
    "26": {
        "comment": "TestQuantityParseZero ensures that when a 0 quantity is passed its string value is 0 TestQuantityAddZeroPreservesSuffix verifies that a suffix is preserved ",
        "similar_with": [
            26
        ]
    },
    "27": {
        "comment": "TestQuantityAddZeroPreservesSuffix verifies that a suffix is preserved ",
        "similar_with": [
            27
        ]
    },
    "28": {
        "comment": "TestQuantityAddZeroPreservesSuffix verifies that a suffix is preserved independent of the order of operations when adding a zero and nonzero val ",
        "similar_with": [
            28
        ]
    },
    "29": {
        "comment": "independent of the order of operations when adding a zero and nonzero val ",
        "similar_with": [
            29
        ]
    },
    "30": {
        "comment": "independent of the order of operations when adding a zero and nonzero val ensure nonzero  zero  nonzero suffix preserved ",
        "similar_with": [
            30
        ]
    },
    "31": {
        "comment": "ensure nonzero  zero  nonzero suffix preserved ",
        "similar_with": [
            31
        ]
    },
    "32": {
        "comment": "ensure nonzero  zero  nonzero suffix preserved ensure zero  nonzero  nonzero suffix preserved ",
        "similar_with": [
            32
        ]
    },
    "33": {
        "comment": "ensure zero  nonzero  nonzero suffix preserved ",
        "similar_with": [
            33
        ]
    },
    "34": {
        "comment": "ensure zero  nonzero  nonzero suffix preserved ensure we preserved the input value ",
        "similar_with": [
            34
        ]
    },
    "35": {
        "comment": "ensure we preserved the input value ",
        "similar_with": [
            35
        ]
    },
    "36": {
        "comment": "ensure we preserved the input value TestQuantitySubZeroPreservesSuffix verifies that a suffix is preserved ",
        "similar_with": [
            36
        ]
    },
    "37": {
        "comment": "TestQuantitySubZeroPreservesSuffix verifies that a suffix is preserved ",
        "similar_with": [
            37
        ]
    },
    "38": {
        "comment": "TestQuantitySubZeroPreservesSuffix verifies that a suffix is preserved independent of the order of operations when subtracting a zero and nonzero val ",
        "similar_with": [
            38
        ]
    },
    "39": {
        "comment": "independent of the order of operations when subtracting a zero and nonzero val ",
        "similar_with": [
            39
        ]
    },
    "40": {
        "comment": "independent of the order of operations when subtracting a zero and nonzero val ensure nonzero  zero  nonzero suffix preserved ",
        "similar_with": [
            40
        ]
    },
    "41": {
        "comment": "ensure nonzero  zero  nonzero suffix preserved ",
        "similar_with": [
            41
        ]
    },
    "42": {
        "comment": "ensure nonzero  zero  nonzero suffix preserved ensure we preserved the input value ",
        "similar_with": [
            42
        ]
    },
    "43": {
        "comment": "ensure we preserved the input value ",
        "similar_with": [
            43
        ]
    },
    "44": {
        "comment": "ensure we preserved the input value ensure zero  nonzero  nonzero suffix preserved ",
        "similar_with": [
            44
        ]
    },
    "45": {
        "comment": "ensure zero  nonzero  nonzero suffix preserved ",
        "similar_with": [
            45
        ]
    },
    "46": {
        "comment": "ensure zero  nonzero  nonzero suffix preserved Verifies that you get 0 as canonical value if internal value is 0 and not 0suffix ",
        "similar_with": [
            46
        ]
    },
    "47": {
        "comment": "Verifies that you get 0 as canonical value if internal value is 0 and not 0suffix ",
        "similar_with": [
            47
        ]
    },
    "48": {
        "comment": "Verifies that you get 0 as canonical value if internal value is 0 and not 0suffix Binary suffixes ",
        "similar_with": [
            48
        ]
    },
    "49": {
        "comment": "Binary suffixes ",
        "similar_with": [
            49
        ]
    },
    "50": {
        "comment": "Binary suffixes Decimal suffixes ",
        "similar_with": [
            50
        ]
    },
    "51": {
        "comment": "Decimal suffixes ",
        "similar_with": [
            51
        ]
    },
    "52": {
        "comment": "Decimal suffixes Decimal exponents ",
        "similar_with": [
            52
        ]
    },
    "53": {
        "comment": "Decimal exponents ",
        "similar_with": [
            53
        ]
    },
    "54": {
        "comment": "Decimal exponents Nonstandard but still parsable ",
        "similar_with": [
            54
        ]
    },
    "55": {
        "comment": "Nonstandard but still parsable ",
        "similar_with": [
            55
        ]
    },
    "56": {
        "comment": "Nonstandard but still parsable Things that look like floating point ",
        "similar_with": [
            56
        ]
    },
    "57": {
        "comment": "Things that look like floating point ",
        "similar_with": [
            57
        ]
    },
    "58": {
        "comment": "Things that look like floating point Things that saturateround ",
        "similar_with": [
            58
        ]
    },
    "59": {
        "comment": "Things that saturateround ",
        "similar_with": [
            59
        ]
    },
    "60": {
        "comment": "Things that saturateround Well accept fractional binary stuff too ",
        "similar_with": [
            60
        ]
    },
    "61": {
        "comment": "Well accept fractional binary stuff too ",
        "similar_with": [
            61
        ]
    },
    "62": {
        "comment": "Well accept fractional binary stuff too Things written by trolls ",
        "similar_with": [
            62
        ]
    },
    "63": {
        "comment": "Things written by trolls ",
        "similar_with": [
            63
        ]
    },
    "64": {
        "comment": "Things written by trolls rounds up changes format ",
        "similar_with": [
            64
        ]
    },
    "65": {
        "comment": "rounds up changes format ",
        "similar_with": [
            65
        ]
    },
    "66": {
        "comment": "rounds up changes format Try the negative version of everything ",
        "similar_with": [
            66
        ]
    },
    "67": {
        "comment": "Try the negative version of everything ",
        "similar_with": [
            67
        ]
    },
    "68": {
        "comment": "Try the negative version of everything Try everything with an explicit  ",
        "similar_with": [
            68
        ]
    },
    "69": {
        "comment": "Try everything with an explicit  ",
        "similar_with": [
            69
        ]
    },
    "70": {
        "comment": "Try everything with an explicit  Avoid modifying the values in the table ",
        "similar_with": [
            70
        ]
    },
    "71": {
        "comment": "Avoid modifying the values in the table ",
        "similar_with": [
            71
        ]
    },
    "72": {
        "comment": "Avoid modifying the values in the table Dont expect it to print 0 ever ",
        "similar_with": [
            72
        ]
    },
    "73": {
        "comment": "Dont expect it to print 0 ever ",
        "similar_with": [
            73
        ]
    },
    "74": {
        "comment": "Dont expect it to print 0 ever Be sure to test cases like 1Mi ",
        "similar_with": [
            74
        ]
    },
    "75": {
        "comment": "Be sure to test cases like 1Mi ",
        "similar_with": [
            75
        ]
    },
    "76": {
        "comment": "Be sure to test cases like 1Mi Be sure to test cases like 1M ",
        "similar_with": [
            76
        ]
    },
    "77": {
        "comment": "Be sure to test cases like 1M ",
        "similar_with": [
            77
        ]
    },
    "78": {
        "comment": "Be sure to test cases like 1M Format changes ",
        "similar_with": [
            78
        ]
    },
    "79": {
        "comment": "Format changes ",
        "similar_with": [
            79
        ]
    },
    "80": {
        "comment": "Format changes Format changes ",
        "similar_with": [
            80
        ]
    },
    "81": {
        "comment": "Format changes ",
        "similar_with": [
            81
        ]
    },
    "82": {
        "comment": "Format changes ensure value is same ",
        "similar_with": [
            82
        ]
    },
    "83": {
        "comment": "ensure value is same ",
        "similar_with": [
            83
        ]
    },
    "84": {
        "comment": "ensure value is same ensure format is updated ",
        "similar_with": [
            84
        ]
    },
    "85": {
        "comment": "ensure format is updated ",
        "similar_with": [
            85
        ]
    },
    "86": {
        "comment": "Copyright 2015 The Kubernetes Authors All rights reserved ",
        "similar_with": [
            86
        ]
    },
    "87": {
        "comment": "Copyright 2015 The Kubernetes Authors All rights reserved Licensed under the Apache License Version 20 the License ",
        "similar_with": [
            87
        ]
    },
    "88": {
        "comment": "Licensed under the Apache License Version 20 the License ",
        "similar_with": [
            88
        ]
    },
    "89": {
        "comment": "Licensed under the Apache License Version 20 the License you may not use this file except in compliance with the License ",
        "similar_with": [
            89
        ]
    },
    "90": {
        "comment": "you may not use this file except in compliance with the License ",
        "similar_with": [
            90
        ]
    },
    "91": {
        "comment": "you may not use this file except in compliance with the License You may obtain a copy of the License at ",
        "similar_with": [
            91
        ]
    },
    "92": {
        "comment": "You may obtain a copy of the License at ",
        "similar_with": [
            92
        ]
    },
    "93": {
        "comment": "You may obtain a copy of the License at httpwwwapacheorglicensesLICENSE20 ",
        "similar_with": [
            93
        ]
    },
    "94": {
        "comment": "httpwwwapacheorglicensesLICENSE20 ",
        "similar_with": [
            94
        ]
    },
    "95": {
        "comment": "httpwwwapacheorglicensesLICENSE20 Unless required by applicable law or agreed to in writing software ",
        "similar_with": [
            95
        ]
    },
    "96": {
        "comment": "Unless required by applicable law or agreed to in writing software ",
        "similar_with": [
            96
        ]
    },
    "97": {
        "comment": "Unless required by applicable law or agreed to in writing software distributed under the License is distributed on an AS IS BASIS ",
        "similar_with": [
            97
        ]
    },
    "98": {
        "comment": "distributed under the License is distributed on an AS IS BASIS ",
        "similar_with": [
            98
        ]
    },
    "99": {
        "comment": "distributed under the License is distributed on an AS IS BASIS WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND either express or implied ",
        "similar_with": [
            99
        ]
    },
    "100": {
        "comment": "WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND either express or implied ",
        "similar_with": [
            100
        ]
    },
    "101": {
        "comment": "WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND either express or implied See the License for the specific language governing permissions and ",
        "similar_with": [
            101
        ]
    },
    "102": {
        "comment": "See the License for the specific language governing permissions and ",
        "similar_with": [
            102
        ]
    },
    "103": {
        "comment": "See the License for the specific language governing permissions and limitations under the License ",
        "similar_with": [
            103
        ]
    },
    "104": {
        "comment": "limitations under the License ",
        "similar_with": [
            104
        ]
    },
    "105": {
        "comment": "limitations under the License remain scale ",
        "similar_with": [
            105
        ]
    },
    "106": {
        "comment": "remain scale ",
        "similar_with": [
            106
        ]
    },
    "107": {
        "comment": "remain scale scale down ",
        "similar_with": [
            107
        ]
    },
    "108": {
        "comment": "scale down ",
        "similar_with": [
            108
        ]
    },
    "109": {
        "comment": "scale down always round up ",
        "similar_with": [
            109
        ]
    },
    "110": {
        "comment": "always round up ",
        "similar_with": [
            110
        ]
    },
    "111": {
        "comment": "always round up large scaled value does not lose precision ",
        "similar_with": [
            111
        ]
    },
    "112": {
        "comment": "large scaled value does not lose precision ",
        "similar_with": [
            112
        ]
    },
    "113": {
        "comment": "large scaled value does not lose precision large intermidiate result ",
        "similar_with": [
            113
        ]
    },
    "114": {
        "comment": "large intermidiate result ",
        "similar_with": [
            114
        ]
    },
    "115": {
        "comment": "large intermidiate result scale up ",
        "similar_with": [
            115
        ]
    },
    "116": {
        "comment": "scale up ",
        "similar_with": [
            116
        ]
    },
    "117": {
        "comment": "build proto ",
        "similar_with": [
            117
        ]
    },
    "118": {
        "comment": "build proto Copyright 2015 The Kubernetes Authors All rights reserved ",
        "similar_with": [
            118
        ]
    },
    "119": {
        "comment": "Copyright 2015 The Kubernetes Authors All rights reserved ",
        "similar_with": [
            119
        ]
    },
    "120": {
        "comment": "Copyright 2015 The Kubernetes Authors All rights reserved Licensed under the Apache License Version 20 the License ",
        "similar_with": [
            120
        ]
    },
    "121": {
        "comment": "Licensed under the Apache License Version 20 the License ",
        "similar_with": [
            121
        ]
    },
    "122": {
        "comment": "Licensed under the Apache License Version 20 the License you may not use this file except in compliance with the License ",
        "similar_with": [
            122
        ]
    },
    "123": {
        "comment": "you may not use this file except in compliance with the License ",
        "similar_with": [
            123
        ]
    },
    "124": {
        "comment": "you may not use this file except in compliance with the License You may obtain a copy of the License at ",
        "similar_with": [
            124
        ]
    },
    "125": {
        "comment": "You may obtain a copy of the License at ",
        "similar_with": [
            125
        ]
    },
    "126": {
        "comment": "You may obtain a copy of the License at httpwwwapacheorglicensesLICENSE20 ",
        "similar_with": [
            126
        ]
    },
    "127": {
        "comment": "httpwwwapacheorglicensesLICENSE20 ",
        "similar_with": [
            127
        ]
    },
    "128": {
        "comment": "httpwwwapacheorglicensesLICENSE20 Unless required by applicable law or agreed to in writing software ",
        "similar_with": [
            128
        ]
    },
    "129": {
        "comment": "Unless required by applicable law or agreed to in writing software ",
        "similar_with": [
            129
        ]
    },
    "130": {
        "comment": "Unless required by applicable law or agreed to in writing software distributed under the License is distributed on an AS IS BASIS ",
        "similar_with": [
            130
        ]
    },
    "131": {
        "comment": "distributed under the License is distributed on an AS IS BASIS ",
        "similar_with": [
            131
        ]
    },
    "132": {
        "comment": "distributed under the License is distributed on an AS IS BASIS WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND either express or implied ",
        "similar_with": [
            132
        ]
    },
    "133": {
        "comment": "WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND either express or implied ",
        "similar_with": [
            133
        ]
    },
    "134": {
        "comment": "WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND either express or implied See the License for the specific language governing permissions and ",
        "similar_with": [
            134
        ]
    },
    "135": {
        "comment": "See the License for the specific language governing permissions and ",
        "similar_with": [
            135
        ]
    },
    "136": {
        "comment": "See the License for the specific language governing permissions and limitations under the License ",
        "similar_with": [
            136
        ]
    },
    "137": {
        "comment": "limitations under the License ",
        "similar_with": [
            137
        ]
    },
    "138": {
        "comment": "limitations under the License QuantityProto is a struct that is equivalent to Quantity but intended for ",
        "similar_with": [
            138
        ]
    },
    "139": {
        "comment": "QuantityProto is a struct that is equivalent to Quantity but intended for ",
        "similar_with": [
            139
        ]
    },
    "140": {
        "comment": "QuantityProto is a struct that is equivalent to Quantity but intended for protobuf marshallingunmarshalling It is generated into a serialization ",
        "similar_with": [
            140
        ]
    },
    "141": {
        "comment": "protobuf marshallingunmarshalling It is generated into a serialization ",
        "similar_with": [
            141
        ]
    },
    "142": {
        "comment": "protobuf marshallingunmarshalling It is generated into a serialization that matches Quantity Do not use in Go structs ",
        "similar_with": [
            142
        ]
    },
    "143": {
        "comment": "that matches Quantity Do not use in Go structs ",
        "similar_with": [
            143
        ]
    },
    "144": {
        "comment": "that matches Quantity Do not use in Go structs protobuftrue ",
        "similar_with": [
            144
        ]
    },
    "145": {
        "comment": "protobuftrue ",
        "similar_with": [
            145
        ]
    },
    "146": {
        "comment": "protobuftrue The format of the quantity ",
        "similar_with": [
            146
        ]
    },
    "147": {
        "comment": "The format of the quantity ",
        "similar_with": [
            147
        ]
    },
    "148": {
        "comment": "The format of the quantity The scale dimension of the value ",
        "similar_with": [
            148
        ]
    },
    "149": {
        "comment": "The scale dimension of the value ",
        "similar_with": [
            149
        ]
    },
    "150": {
        "comment": "The scale dimension of the value Bigint is serialized as a raw bytes array ",
        "similar_with": [
            150
        ]
    },
    "151": {
        "comment": "Bigint is serialized as a raw bytes array ",
        "similar_with": [
            151
        ]
    },
    "152": {
        "comment": "Bigint is serialized as a raw bytes array ProtoTime returns the Time as a new ProtoTime value ",
        "similar_with": [
            152
        ]
    },
    "153": {
        "comment": "ProtoTime returns the Time as a new ProtoTime value ",
        "similar_with": [
            153
        ]
    },
    "154": {
        "comment": "ProtoTime returns the Time as a new ProtoTime value Size implements the protobuf marshalling interface ",
        "similar_with": [
            154
        ]
    },
    "155": {
        "comment": "Size implements the protobuf marshalling interface ",
        "similar_with": [
            155
        ]
    },
    "156": {
        "comment": "Size implements the protobuf marshalling interface Reset implements the protobuf marshalling interface ",
        "similar_with": [
            156
        ]
    },
    "157": {
        "comment": "Reset implements the protobuf marshalling interface ",
        "similar_with": [
            157
        ]
    },
    "158": {
        "comment": "Reset implements the protobuf marshalling interface Marshal implements the protobuf marshalling interface ",
        "similar_with": [
            158
        ]
    },
    "159": {
        "comment": "Marshal implements the protobuf marshalling interface ",
        "similar_with": [
            159
        ]
    },
    "160": {
        "comment": "Marshal implements the protobuf marshalling interface MarshalTo implements the protobuf marshalling interface ",
        "similar_with": [
            160
        ]
    },
    "161": {
        "comment": "MarshalTo implements the protobuf marshalling interface ",
        "similar_with": [
            161
        ]
    },
    "162": {
        "comment": "Copyright 2015 The Kubernetes Authors All rights reserved ",
        "similar_with": [
            162
        ]
    },
    "163": {
        "comment": "Copyright 2015 The Kubernetes Authors All rights reserved Licensed under the Apache License Version 20 the License ",
        "similar_with": [
            163
        ]
    },
    "164": {
        "comment": "Licensed under the Apache License Version 20 the License ",
        "similar_with": [
            164
        ]
    },
    "165": {
        "comment": "Licensed under the Apache License Version 20 the License you may not use this file except in compliance with the License ",
        "similar_with": [
            165
        ]
    },
    "166": {
        "comment": "you may not use this file except in compliance with the License ",
        "similar_with": [
            166
        ]
    },
    "167": {
        "comment": "you may not use this file except in compliance with the License You may obtain a copy of the License at ",
        "similar_with": [
            167
        ]
    },
    "168": {
        "comment": "You may obtain a copy of the License at ",
        "similar_with": [
            168
        ]
    },
    "169": {
        "comment": "You may obtain a copy of the License at httpwwwapacheorglicensesLICENSE20 ",
        "similar_with": [
            169
        ]
    },
    "170": {
        "comment": "httpwwwapacheorglicensesLICENSE20 ",
        "similar_with": [
            170
        ]
    },
    "171": {
        "comment": "httpwwwapacheorglicensesLICENSE20 Unless required by applicable law or agreed to in writing software ",
        "similar_with": [
            171
        ]
    },
    "172": {
        "comment": "Unless required by applicable law or agreed to in writing software ",
        "similar_with": [
            172
        ]
    },
    "173": {
        "comment": "Unless required by applicable law or agreed to in writing software distributed under the License is distributed on an AS IS BASIS ",
        "similar_with": [
            173
        ]
    },
    "174": {
        "comment": "distributed under the License is distributed on an AS IS BASIS ",
        "similar_with": [
            174
        ]
    },
    "175": {
        "comment": "distributed under the License is distributed on an AS IS BASIS WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND either express or implied ",
        "similar_with": [
            175
        ]
    },
    "176": {
        "comment": "WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND either express or implied ",
        "similar_with": [
            176
        ]
    },
    "177": {
        "comment": "WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND either express or implied See the License for the specific language governing permissions and ",
        "similar_with": [
            177
        ]
    },
    "178": {
        "comment": "See the License for the specific language governing permissions and ",
        "similar_with": [
            178
        ]
    },
    "179": {
        "comment": "See the License for the specific language governing permissions and limitations under the License ",
        "similar_with": [
            179
        ]
    },
    "180": {
        "comment": "limitations under the License ",
        "similar_with": [
            180
        ]
    },
    "181": {
        "comment": "limitations under the License A sync pool to reduce allocation ",
        "similar_with": [
            181
        ]
    },
    "182": {
        "comment": "A sync pool to reduce allocation ",
        "similar_with": [
            182
        ]
    },
    "183": {
        "comment": "A sync pool to reduce allocation scaledValue scales given unscaled value from scale to new Scale and returns ",
        "similar_with": [
            183
        ]
    },
    "184": {
        "comment": "scaledValue scales given unscaled value from scale to new Scale and returns ",
        "similar_with": [
            184
        ]
    },
    "185": {
        "comment": "scaledValue scales given unscaled value from scale to new Scale and returns an int64 It ALWAYS rounds up the result when scale down The final result might ",
        "similar_with": [
            185
        ]
    },
    "186": {
        "comment": "an int64 It ALWAYS rounds up the result when scale down The final result might ",
        "similar_with": [
            186
        ]
    },
    "187": {
        "comment": "an int64 It ALWAYS rounds up the result when scale down The final result might overflow ",
        "similar_with": [
            187
        ]
    },
    "188": {
        "comment": "overflow ",
        "similar_with": [
            188
        ]
    },
    "189": {
        "comment": "overflow scale newScale represents the scale of the unscaled decimal ",
        "similar_with": [
            189
        ]
    },
    "190": {
        "comment": "scale newScale represents the scale of the unscaled decimal ",
        "similar_with": [
            190
        ]
    },
    "191": {
        "comment": "scale newScale represents the scale of the unscaled decimal The mathematical value of the decimal is unscaled  10scale ",
        "similar_with": [
            191
        ]
    },
    "192": {
        "comment": "The mathematical value of the decimal is unscaled  10scale ",
        "similar_with": [
            192
        ]
    },
    "193": {
        "comment": "The mathematical value of the decimal is unscaled  10scale Handle scale up ",
        "similar_with": [
            193
        ]
    },
    "194": {
        "comment": "Handle scale up ",
        "similar_with": [
            194
        ]
    },
    "195": {
        "comment": "Handle scale up This is an easy case we do not need to care about rounding and overflow ",
        "similar_with": [
            195
        ]
    },
    "196": {
        "comment": "This is an easy case we do not need to care about rounding and overflow ",
        "similar_with": [
            196
        ]
    },
    "197": {
        "comment": "This is an easy case we do not need to care about rounding and overflow If any intermediate operation causes overflow the result will overflow ",
        "similar_with": [
            197
        ]
    },
    "198": {
        "comment": "If any intermediate operation causes overflow the result will overflow ",
        "similar_with": [
            198
        ]
    },
    "199": {
        "comment": "If any intermediate operation causes overflow the result will overflow Handle scale down ",
        "similar_with": [
            199
        ]
    },
    "200": {
        "comment": "Handle scale down ",
        "similar_with": [
            200
        ]
    },
    "201": {
        "comment": "Handle scale down We have to be careful about the intermediate operations ",
        "similar_with": [
            201
        ]
    },
    "202": {
        "comment": "We have to be careful about the intermediate operations ",
        "similar_with": [
            202
        ]
    },
    "203": {
        "comment": "We have to be careful about the intermediate operations fast path when unscaled  maxInt64 and exp10dif  maxInt64 ",
        "similar_with": [
            203
        ]
    },
    "204": {
        "comment": "fast path when unscaled  maxInt64 and exp10dif  maxInt64 ",
        "similar_with": [
            204
        ]
    },
    "205": {
        "comment": "fast path when unscaled  maxInt64 and exp10dif  maxInt64 We should only convert back to int64 when getting the result ",
        "similar_with": [
            205
        ]
    },
    "206": {
        "comment": "We should only convert back to int64 when getting the result ",
        "similar_with": [
            206
        ]
    },
    "207": {
        "comment": "We should only convert back to int64 when getting the result divisor  10dif ",
        "similar_with": [
            207
        ]
    },
    "208": {
        "comment": "divisor  10dif ",
        "similar_with": [
            208
        ]
    },
    "209": {
        "comment": "divisor  10dif TODO create loop up table if exp costs too much ",
        "similar_with": [
            209
        ]
    },
    "210": {
        "comment": "TODO create loop up table if exp costs too much ",
        "similar_with": [
            210
        ]
    },
    "211": {
        "comment": "TODO create loop up table if exp costs too much reuse exp ",
        "similar_with": [
            211
        ]
    },
    "212": {
        "comment": "reuse exp ",
        "similar_with": [
            212
        ]
    },
    "213": {
        "comment": "reuse exp result  unscaled  divisor ",
        "similar_with": [
            213
        ]
    },
    "214": {
        "comment": "result  unscaled  divisor ",
        "similar_with": [
            214
        ]
    },
    "215": {
        "comment": "result  unscaled  divisor remainder  unscaled  divisor ",
        "similar_with": [
            215
        ]
    },
    "216": {
        "comment": "remainder  unscaled  divisor ",
        "similar_with": [
            216
        ]
    },
    "217": {
        "comment": "Copyright 2014 The Kubernetes Authors All rights reserved ",
        "similar_with": [
            217
        ]
    },
    "218": {
        "comment": "Copyright 2014 The Kubernetes Authors All rights reserved Licensed under the Apache License Version 20 the License ",
        "similar_with": [
            218
        ]
    },
    "219": {
        "comment": "Licensed under the Apache License Version 20 the License ",
        "similar_with": [
            219
        ]
    },
    "220": {
        "comment": "Licensed under the Apache License Version 20 the License you may not use this file except in compliance with the License ",
        "similar_with": [
            220
        ]
    },
    "221": {
        "comment": "you may not use this file except in compliance with the License ",
        "similar_with": [
            221
        ]
    },
    "222": {
        "comment": "you may not use this file except in compliance with the License You may obtain a copy of the License at ",
        "similar_with": [
            222
        ]
    },
    "223": {
        "comment": "You may obtain a copy of the License at ",
        "similar_with": [
            223
        ]
    },
    "224": {
        "comment": "You may obtain a copy of the License at httpwwwapacheorglicensesLICENSE20 ",
        "similar_with": [
            224
        ]
    },
    "225": {
        "comment": "httpwwwapacheorglicensesLICENSE20 ",
        "similar_with": [
            225
        ]
    },
    "226": {
        "comment": "httpwwwapacheorglicensesLICENSE20 Unless required by applicable law or agreed to in writing software ",
        "similar_with": [
            226
        ]
    },
    "227": {
        "comment": "Unless required by applicable law or agreed to in writing software ",
        "similar_with": [
            227
        ]
    },
    "228": {
        "comment": "Unless required by applicable law or agreed to in writing software distributed under the License is distributed on an AS IS BASIS ",
        "similar_with": [
            228
        ]
    },
    "229": {
        "comment": "distributed under the License is distributed on an AS IS BASIS ",
        "similar_with": [
            229
        ]
    },
    "230": {
        "comment": "distributed under the License is distributed on an AS IS BASIS WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND either express or implied ",
        "similar_with": [
            230
        ]
    },
    "231": {
        "comment": "WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND either express or implied ",
        "similar_with": [
            231
        ]
    },
    "232": {
        "comment": "WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND either express or implied See the License for the specific language governing permissions and ",
        "similar_with": [
            232
        ]
    },
    "233": {
        "comment": "See the License for the specific language governing permissions and ",
        "similar_with": [
            233
        ]
    },
    "234": {
        "comment": "See the License for the specific language governing permissions and limitations under the License ",
        "similar_with": [
            234
        ]
    },
    "235": {
        "comment": "limitations under the License ",
        "similar_with": [
            235
        ]
    },
    "236": {
        "comment": "limitations under the License Output ",
        "similar_with": [
            236
        ]
    },
    "237": {
        "comment": "Output ",
        "similar_with": [
            237
        ]
    },
    "238": {
        "comment": "Output memorySize  5Gi ",
        "similar_with": [
            238
        ]
    },
    "239": {
        "comment": "memorySize  5Gi ",
        "similar_with": [
            239
        ]
    },
    "240": {
        "comment": "memorySize  5Gi diskSize  5G ",
        "similar_with": [
            240
        ]
    },
    "241": {
        "comment": "diskSize  5G ",
        "similar_with": [
            241
        ]
    },
    "242": {
        "comment": "diskSize  5G cores  5300m ",
        "similar_with": [
            242
        ]
    },
    "243": {
        "comment": "cores  5300m ",
        "similar_with": [
            243
        ]
    },
    "244": {
        "comment": "cores  5300m Output ",
        "similar_with": [
            244
        ]
    },
    "245": {
        "comment": "Output ",
        "similar_with": [
            245
        ]
    },
    "246": {
        "comment": "Output memorySize  5368709120 BinarySI ",
        "similar_with": [
            246
        ]
    },
    "247": {
        "comment": "memorySize  5368709120 BinarySI ",
        "similar_with": [
            247
        ]
    },
    "248": {
        "comment": "memorySize  5368709120 BinarySI diskSize  5000000000 DecimalSI ",
        "similar_with": [
            248
        ]
    },
    "249": {
        "comment": "diskSize  5000000000 DecimalSI ",
        "similar_with": [
            249
        ]
    },
    "250": {
        "comment": "diskSize  5000000000 DecimalSI milliCores  5300 DecimalSI ",
        "similar_with": [
            250
        ]
    },
    "251": {
        "comment": "milliCores  5300 DecimalSI ",
        "similar_with": [
            251
        ]
    },
    "252": {
        "comment": "milliCores  5300 DecimalSI milliCores  5400 DecimalSI ",
        "similar_with": [
            252
        ]
    },
    "253": {
        "comment": "milliCores  5400 DecimalSI ",
        "similar_with": [
            253
        ]
    },
    "254": {
        "comment": "Copyright 2014 The Kubernetes Authors All rights reserved ",
        "similar_with": [
            254
        ]
    },
    "255": {
        "comment": "Copyright 2014 The Kubernetes Authors All rights reserved Licensed under the Apache License Version 20 the License ",
        "similar_with": [
            255
        ]
    },
    "256": {
        "comment": "Licensed under the Apache License Version 20 the License ",
        "similar_with": [
            256
        ]
    },
    "257": {
        "comment": "Licensed under the Apache License Version 20 the License you may not use this file except in compliance with the License ",
        "similar_with": [
            257
        ]
    },
    "258": {
        "comment": "you may not use this file except in compliance with the License ",
        "similar_with": [
            258
        ]
    },
    "259": {
        "comment": "you may not use this file except in compliance with the License You may obtain a copy of the License at ",
        "similar_with": [
            259
        ]
    },
    "260": {
        "comment": "You may obtain a copy of the License at ",
        "similar_with": [
            260
        ]
    },
    "261": {
        "comment": "You may obtain a copy of the License at httpwwwapacheorglicensesLICENSE20 ",
        "similar_with": [
            261
        ]
    },
    "262": {
        "comment": "httpwwwapacheorglicensesLICENSE20 ",
        "similar_with": [
            262
        ]
    },
    "263": {
        "comment": "httpwwwapacheorglicensesLICENSE20 Unless required by applicable law or agreed to in writing software ",
        "similar_with": [
            263
        ]
    },
    "264": {
        "comment": "Unless required by applicable law or agreed to in writing software ",
        "similar_with": [
            264
        ]
    },
    "265": {
        "comment": "Unless required by applicable law or agreed to in writing software distributed under the License is distributed on an AS IS BASIS ",
        "similar_with": [
            265
        ]
    },
    "266": {
        "comment": "distributed under the License is distributed on an AS IS BASIS ",
        "similar_with": [
            266
        ]
    },
    "267": {
        "comment": "distributed under the License is distributed on an AS IS BASIS WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND either express or implied ",
        "similar_with": [
            267
        ]
    },
    "268": {
        "comment": "WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND either express or implied ",
        "similar_with": [
            268
        ]
    },
    "269": {
        "comment": "WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND either express or implied See the License for the specific language governing permissions and ",
        "similar_with": [
            269
        ]
    },
    "270": {
        "comment": "See the License for the specific language governing permissions and ",
        "similar_with": [
            270
        ]
    },
    "271": {
        "comment": "See the License for the specific language governing permissions and limitations under the License ",
        "similar_with": [
            271
        ]
    },
    "272": {
        "comment": "limitations under the License ",
        "similar_with": [
            272
        ]
    },
    "273": {
        "comment": "limitations under the License suffixer can interpret and construct suffixes ",
        "similar_with": [
            273
        ]
    },
    "274": {
        "comment": "suffixer can interpret and construct suffixes ",
        "similar_with": [
            274
        ]
    },
    "275": {
        "comment": "suffixer can interpret and construct suffixes quantitySuffixer handles suffixes for all three formats that quantity ",
        "similar_with": [
            275
        ]
    },
    "276": {
        "comment": "quantitySuffixer handles suffixes for all three formats that quantity ",
        "similar_with": [
            276
        ]
    },
    "277": {
        "comment": "quantitySuffixer handles suffixes for all three formats that quantity can handle ",
        "similar_with": [
            277
        ]
    },
    "278": {
        "comment": "can handle ",
        "similar_with": [
            278
        ]
    },
    "279": {
        "comment": "can handle Dont emit an error when trying to produce ",
        "similar_with": [
            279
        ]
    },
    "280": {
        "comment": "Dont emit an error when trying to produce ",
        "similar_with": [
            280
        ]
    },
    "281": {
        "comment": "Dont emit an error when trying to produce a suffix for 20 ",
        "similar_with": [
            281
        ]
    },
    "282": {
        "comment": "a suffix for 20 ",
        "similar_with": [
            282
        ]
    },
    "283": {
        "comment": "a suffix for 20 Try lookup tables first ",
        "similar_with": [
            283
        ]
    },
    "284": {
        "comment": "Try lookup tables first ",
        "similar_with": [
            284
        ]
    },
    "285": {
        "comment": "Copyright 2014 The Kubernetes Authors All rights reserved ",
        "similar_with": [
            285
        ]
    },
    "286": {
        "comment": "Copyright 2014 The Kubernetes Authors All rights reserved Licensed under the Apache License Version 20 the License ",
        "similar_with": [
            286
        ]
    },
    "287": {
        "comment": "Licensed under the Apache License Version 20 the License ",
        "similar_with": [
            287
        ]
    },
    "288": {
        "comment": "Licensed under the Apache License Version 20 the License you may not use this file except in compliance with the License ",
        "similar_with": [
            288
        ]
    },
    "289": {
        "comment": "you may not use this file except in compliance with the License ",
        "similar_with": [
            289
        ]
    },
    "290": {
        "comment": "you may not use this file except in compliance with the License You may obtain a copy of the License at ",
        "similar_with": [
            290
        ]
    },
    "291": {
        "comment": "You may obtain a copy of the License at ",
        "similar_with": [
            291
        ]
    },
    "292": {
        "comment": "You may obtain a copy of the License at httpwwwapacheorglicensesLICENSE20 ",
        "similar_with": [
            292
        ]
    },
    "293": {
        "comment": "httpwwwapacheorglicensesLICENSE20 ",
        "similar_with": [
            293
        ]
    },
    "294": {
        "comment": "httpwwwapacheorglicensesLICENSE20 Unless required by applicable law or agreed to in writing software ",
        "similar_with": [
            294
        ]
    },
    "295": {
        "comment": "Unless required by applicable law or agreed to in writing software ",
        "similar_with": [
            295
        ]
    },
    "296": {
        "comment": "Unless required by applicable law or agreed to in writing software distributed under the License is distributed on an AS IS BASIS ",
        "similar_with": [
            296
        ]
    },
    "297": {
        "comment": "distributed under the License is distributed on an AS IS BASIS ",
        "similar_with": [
            297
        ]
    },
    "298": {
        "comment": "distributed under the License is distributed on an AS IS BASIS WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND either express or implied ",
        "similar_with": [
            298
        ]
    },
    "299": {
        "comment": "WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND either express or implied ",
        "similar_with": [
            299
        ]
    },
    "300": {
        "comment": "WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND either express or implied See the License for the specific language governing permissions and ",
        "similar_with": [
            300
        ]
    },
    "301": {
        "comment": "See the License for the specific language governing permissions and ",
        "similar_with": [
            301
        ]
    },
    "302": {
        "comment": "See the License for the specific language governing permissions and limitations under the License ",
        "similar_with": [
            302
        ]
    },
    "303": {
        "comment": "limitations under the License ",
        "similar_with": [
            303
        ]
    },
    "304": {
        "comment": "limitations under the License Quantity is a fixedpoint representation of a number ",
        "similar_with": [
            304
        ]
    },
    "305": {
        "comment": "Quantity is a fixedpoint representation of a number ",
        "similar_with": [
            305
        ]
    },
    "306": {
        "comment": "Quantity is a fixedpoint representation of a number It provides convenient marshalingunmarshaling in JSON and YAML ",
        "similar_with": [
            306
        ]
    },
    "307": {
        "comment": "It provides convenient marshalingunmarshaling in JSON and YAML ",
        "similar_with": [
            307
        ]
    },
    "308": {
        "comment": "It provides convenient marshalingunmarshaling in JSON and YAML in addition to String and Int64 accessors ",
        "similar_with": [
            308
        ]
    },
    "309": {
        "comment": "in addition to String and Int64 accessors ",
        "similar_with": [
            309
        ]
    },
    "310": {
        "comment": "in addition to String and Int64 accessors The serialization format is ",
        "similar_with": [
            310
        ]
    },
    "311": {
        "comment": "The serialization format is ",
        "similar_with": [
            311
        ]
    },
    "312": {
        "comment": "The serialization format is quantity         signedNumbersuffix ",
        "similar_with": [
            312
        ]
    },
    "313": {
        "comment": "quantity         signedNumbersuffix ",
        "similar_with": [
            313
        ]
    },
    "314": {
        "comment": "quantity         signedNumbersuffix Note that suffix may be empty from the  case in decimalSI ",
        "similar_with": [
            314
        ]
    },
    "315": {
        "comment": "Note that suffix may be empty from the  case in decimalSI ",
        "similar_with": [
            315
        ]
    },
    "316": {
        "comment": "Note that suffix may be empty from the  case in decimalSI digit            0  1    9 ",
        "similar_with": [
            316
        ]
    },
    "317": {
        "comment": "digit            0  1    9 ",
        "similar_with": [
            317
        ]
    },
    "318": {
        "comment": "digit            0  1    9 digits           digit  digitdigits ",
        "similar_with": [
            318
        ]
    },
    "319": {
        "comment": "digits           digit  digitdigits ",
        "similar_with": [
            319
        ]
    },
    "320": {
        "comment": "digits           digit  digitdigits number           digits  digitsdigits  digits  digits ",
        "similar_with": [
            320
        ]
    },
    "321": {
        "comment": "number           digits  digitsdigits  digits  digits ",
        "similar_with": [
            321
        ]
    },
    "322": {
        "comment": "number           digits  digitsdigits  digits  digits sign                ",
        "similar_with": [
            322
        ]
    },
    "323": {
        "comment": "sign                ",
        "similar_with": [
            323
        ]
    },
    "324": {
        "comment": "sign                signedNumber     number  signnumber ",
        "similar_with": [
            324
        ]
    },
    "325": {
        "comment": "signedNumber     number  signnumber ",
        "similar_with": [
            325
        ]
    },
    "326": {
        "comment": "signedNumber     number  signnumber suffix           binarySI  decimalExponent  decimalSI ",
        "similar_with": [
            326
        ]
    },
    "327": {
        "comment": "suffix           binarySI  decimalExponent  decimalSI ",
        "similar_with": [
            327
        ]
    },
    "328": {
        "comment": "suffix           binarySI  decimalExponent  decimalSI binarySI         Ki  Mi  Gi  Ti  Pi  Ei ",
        "similar_with": [
            328
        ]
    },
    "329": {
        "comment": "binarySI         Ki  Mi  Gi  Ti  Pi  Ei ",
        "similar_with": [
            329
        ]
    },
    "330": {
        "comment": "binarySI         Ki  Mi  Gi  Ti  Pi  Ei International System of units See httpphysicsnistgovcuuUnitsbinaryhtml ",
        "similar_with": [
            330
        ]
    },
    "331": {
        "comment": "International System of units See httpphysicsnistgovcuuUnitsbinaryhtml ",
        "similar_with": [
            331
        ]
    },
    "332": {
        "comment": "International System of units See httpphysicsnistgovcuuUnitsbinaryhtml decimalSI        m    k  M  G  T  P  E ",
        "similar_with": [
            332
        ]
    },
    "333": {
        "comment": "decimalSI        m    k  M  G  T  P  E ",
        "similar_with": [
            333
        ]
    },
    "334": {
        "comment": "decimalSI        m    k  M  G  T  P  E Note that 1024  1Ki but 1000  1k I didnt choose the capitalization ",
        "similar_with": [
            334
        ]
    },
    "335": {
        "comment": "Note that 1024  1Ki but 1000  1k I didnt choose the capitalization ",
        "similar_with": [
            335
        ]
    },
    "336": {
        "comment": "Note that 1024  1Ki but 1000  1k I didnt choose the capitalization decimalExponent  e signedNumber  E signedNumber ",
        "similar_with": [
            336
        ]
    },
    "337": {
        "comment": "decimalExponent  e signedNumber  E signedNumber ",
        "similar_with": [
            337
        ]
    },
    "338": {
        "comment": "decimalExponent  e signedNumber  E signedNumber No matter which of the three exponent forms is used no quantity may represent ",
        "similar_with": [
            338
        ]
    },
    "339": {
        "comment": "No matter which of the three exponent forms is used no quantity may represent ",
        "similar_with": [
            339
        ]
    },
    "340": {
        "comment": "No matter which of the three exponent forms is used no quantity may represent a number greater than 2631 in magnitude nor may it have more than 3 decimal ",
        "similar_with": [
            340
        ]
    },
    "341": {
        "comment": "a number greater than 2631 in magnitude nor may it have more than 3 decimal ",
        "similar_with": [
            341
        ]
    },
    "342": {
        "comment": "a number greater than 2631 in magnitude nor may it have more than 3 decimal places Numbers larger or more precise will be capped or rounded up ",
        "similar_with": [
            342
        ]
    },
    "343": {
        "comment": "places Numbers larger or more precise will be capped or rounded up ",
        "similar_with": [
            343
        ]
    },
    "344": {
        "comment": "places Numbers larger or more precise will be capped or rounded up Eg 01m will rounded up to 1m ",
        "similar_with": [
            344
        ]
    },
    "345": {
        "comment": "Eg 01m will rounded up to 1m ",
        "similar_with": [
            345
        ]
    },
    "346": {
        "comment": "Eg 01m will rounded up to 1m This may be extended in the future if we require larger or smaller quantities ",
        "similar_with": [
            346
        ]
    },
    "347": {
        "comment": "This may be extended in the future if we require larger or smaller quantities ",
        "similar_with": [
            347
        ]
    },
    "348": {
        "comment": "This may be extended in the future if we require larger or smaller quantities When a Quantity is parsed from a string it will remember the type of suffix ",
        "similar_with": [
            348
        ]
    },
    "349": {
        "comment": "When a Quantity is parsed from a string it will remember the type of suffix ",
        "similar_with": [
            349
        ]
    },
    "350": {
        "comment": "When a Quantity is parsed from a string it will remember the type of suffix it had and will use the same type again when it is serialized ",
        "similar_with": [
            350
        ]
    },
    "351": {
        "comment": "it had and will use the same type again when it is serialized ",
        "similar_with": [
            351
        ]
    },
    "352": {
        "comment": "it had and will use the same type again when it is serialized Before serializing Quantity will be put in canonical form ",
        "similar_with": [
            352
        ]
    },
    "353": {
        "comment": "Before serializing Quantity will be put in canonical form ",
        "similar_with": [
            353
        ]
    },
    "354": {
        "comment": "Before serializing Quantity will be put in canonical form This means that Exponentsuffix will be adjusted up or down with a ",
        "similar_with": [
            354
        ]
    },
    "355": {
        "comment": "This means that Exponentsuffix will be adjusted up or down with a ",
        "similar_with": [
            355
        ]
    },
    "356": {
        "comment": "This means that Exponentsuffix will be adjusted up or down with a corresponding increase or decrease in Mantissa such that ",
        "similar_with": [
            356
        ]
    },
    "357": {
        "comment": "corresponding increase or decrease in Mantissa such that ",
        "similar_with": [
            357
        ]
    },
    "358": {
        "comment": "corresponding increase or decrease in Mantissa such that a No precision is lost ",
        "similar_with": [
            358
        ]
    },
    "359": {
        "comment": "a No precision is lost ",
        "similar_with": [
            359
        ]
    },
    "360": {
        "comment": "a No precision is lost b No fractional digits will be emitted ",
        "similar_with": [
            360
        ]
    },
    "361": {
        "comment": "b No fractional digits will be emitted ",
        "similar_with": [
            361
        ]
    },
    "362": {
        "comment": "b No fractional digits will be emitted c The exponent or suffix is as large as possible ",
        "similar_with": [
            362
        ]
    },
    "363": {
        "comment": "c The exponent or suffix is as large as possible ",
        "similar_with": [
            363
        ]
    },
    "364": {
        "comment": "c The exponent or suffix is as large as possible The sign will be omitted unless the number is negative ",
        "similar_with": [
            364
        ]
    },
    "365": {
        "comment": "The sign will be omitted unless the number is negative ",
        "similar_with": [
            365
        ]
    },
    "366": {
        "comment": "The sign will be omitted unless the number is negative Examples ",
        "similar_with": [
            366
        ]
    },
    "367": {
        "comment": "Examples ",
        "similar_with": [
            367
        ]
    },
    "368": {
        "comment": "Examples 15 will be serialized as 1500m ",
        "similar_with": [
            368
        ]
    },
    "369": {
        "comment": "15 will be serialized as 1500m ",
        "similar_with": [
            369
        ]
    },
    "370": {
        "comment": "15 will be serialized as 1500m 15Gi will be serialized as 1536Mi ",
        "similar_with": [
            370
        ]
    },
    "371": {
        "comment": "15Gi will be serialized as 1536Mi ",
        "similar_with": [
            371
        ]
    },
    "372": {
        "comment": "15Gi will be serialized as 1536Mi NOTE We reserve the right to amend this canonical format perhaps to ",
        "similar_with": [
            372
        ]
    },
    "373": {
        "comment": "NOTE We reserve the right to amend this canonical format perhaps to ",
        "similar_with": [
            373
        ]
    },
    "374": {
        "comment": "NOTE We reserve the right to amend this canonical format perhaps to allow 15 to be canonical ",
        "similar_with": [
            374
        ]
    },
    "375": {
        "comment": "allow 15 to be canonical ",
        "similar_with": [
            375
        ]
    },
    "376": {
        "comment": "allow 15 to be canonical TODO Remove above disclaimer after all bikeshedding about format is over ",
        "similar_with": [
            376
        ]
    },
    "377": {
        "comment": "TODO Remove above disclaimer after all bikeshedding about format is over ",
        "similar_with": [
            377
        ]
    },
    "378": {
        "comment": "TODO Remove above disclaimer after all bikeshedding about format is over or after March 2015 ",
        "similar_with": [
            378
        ]
    },
    "379": {
        "comment": "or after March 2015 ",
        "similar_with": [
            379
        ]
    },
    "380": {
        "comment": "or after March 2015 Note that the quantity will NEVER be internally represented by a ",
        "similar_with": [
            380
        ]
    },
    "381": {
        "comment": "Note that the quantity will NEVER be internally represented by a ",
        "similar_with": [
            381
        ]
    },
    "382": {
        "comment": "Note that the quantity will NEVER be internally represented by a floating point number That is the whole point of this exercise ",
        "similar_with": [
            382
        ]
    },
    "383": {
        "comment": "floating point number That is the whole point of this exercise ",
        "similar_with": [
            383
        ]
    },
    "384": {
        "comment": "floating point number That is the whole point of this exercise Noncanonical values will still parse as long as they are well formed ",
        "similar_with": [
            384
        ]
    },
    "385": {
        "comment": "Noncanonical values will still parse as long as they are well formed ",
        "similar_with": [
            385
        ]
    },
    "386": {
        "comment": "Noncanonical values will still parse as long as they are well formed but will be reemitted in their canonical form So always use canonical ",
        "similar_with": [
            386
        ]
    },
    "387": {
        "comment": "but will be reemitted in their canonical form So always use canonical ",
        "similar_with": [
            387
        ]
    },
    "388": {
        "comment": "but will be reemitted in their canonical form So always use canonical form or dont diff ",
        "similar_with": [
            388
        ]
    },
    "389": {
        "comment": "form or dont diff ",
        "similar_with": [
            389
        ]
    },
    "390": {
        "comment": "form or dont diff This format is intended to make it difficult to use these numbers without ",
        "similar_with": [
            390
        ]
    },
    "391": {
        "comment": "This format is intended to make it difficult to use these numbers without ",
        "similar_with": [
            391
        ]
    },
    "392": {
        "comment": "This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will ",
        "similar_with": [
            392
        ]
    },
    "393": {
        "comment": "writing some sort of special handling code in the hopes that that will ",
        "similar_with": [
            393
        ]
    },
    "394": {
        "comment": "writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation ",
        "similar_with": [
            394
        ]
    },
    "395": {
        "comment": "cause implementors to also use a fixed point implementation ",
        "similar_with": [
            395
        ]
    },
    "396": {
        "comment": "cause implementors to also use a fixed point implementation protobuftrue ",
        "similar_with": [
            396
        ]
    },
    "397": {
        "comment": "protobuftrue ",
        "similar_with": [
            397
        ]
    },
    "398": {
        "comment": "protobuftrue protobufembedQuantityProto ",
        "similar_with": [
            398
        ]
    },
    "399": {
        "comment": "protobufembedQuantityProto ",
        "similar_with": [
            399
        ]
    },
    "400": {
        "comment": "protobufembedQuantityProto protobufoptionsmarshalfalse ",
        "similar_with": [
            400
        ]
    },
    "401": {
        "comment": "protobufoptionsmarshalfalse ",
        "similar_with": [
            401
        ]
    },
    "402": {
        "comment": "protobufoptionsmarshalfalse protobufoptionsgogoprotogoproto_stringerfalse ",
        "similar_with": [
            402
        ]
    },
    "403": {
        "comment": "protobufoptionsgogoprotogoproto_stringerfalse ",
        "similar_with": [
            403
        ]
    },
    "404": {
        "comment": "protobufoptionsgogoprotogoproto_stringerfalse Amount is public so you can manipulate it if the accessor ",
        "similar_with": [
            404
        ]
    },
    "405": {
        "comment": "Amount is public so you can manipulate it if the accessor ",
        "similar_with": [
            405
        ]
    },
    "406": {
        "comment": "Amount is public so you can manipulate it if the accessor functions are not sufficient ",
        "similar_with": [
            406
        ]
    },
    "407": {
        "comment": "functions are not sufficient ",
        "similar_with": [
            407
        ]
    },
    "408": {
        "comment": "functions are not sufficient Change Format at will See the comment for Canonicalize for ",
        "similar_with": [
            408
        ]
    },
    "409": {
        "comment": "Change Format at will See the comment for Canonicalize for ",
        "similar_with": [
            409
        ]
    },
    "410": {
        "comment": "Change Format at will See the comment for Canonicalize for more details ",
        "similar_with": [
            410
        ]
    },
    "411": {
        "comment": "more details ",
        "similar_with": [
            411
        ]
    },
    "412": {
        "comment": "more details Format lists the three possible formattings of a quantity ",
        "similar_with": [
            412
        ]
    },
    "413": {
        "comment": "Format lists the three possible formattings of a quantity ",
        "similar_with": [
            413
        ]
    },
    "414": {
        "comment": "Format lists the three possible formattings of a quantity eg 12e6 ",
        "similar_with": [
            414
        ]
    },
    "415": {
        "comment": "eg 12e6 ",
        "similar_with": [
            415
        ]
    },
    "416": {
        "comment": "eg 12e6 eg 12Mi 12  220 ",
        "similar_with": [
            416
        ]
    },
    "417": {
        "comment": "eg 12Mi 12  220 ",
        "similar_with": [
            417
        ]
    },
    "418": {
        "comment": "eg 12Mi 12  220 eg 12M  12  106 ",
        "similar_with": [
            418
        ]
    },
    "419": {
        "comment": "eg 12M  12  106 ",
        "similar_with": [
            419
        ]
    },
    "420": {
        "comment": "eg 12M  12  106 MustParse turns the given string into a quantity or panics for tests ",
        "similar_with": [
            420
        ]
    },
    "421": {
        "comment": "MustParse turns the given string into a quantity or panics for tests ",
        "similar_with": [
            421
        ]
    },
    "422": {
        "comment": "MustParse turns the given string into a quantity or panics for tests or others cases where you know the string is valid ",
        "similar_with": [
            422
        ]
    },
    "423": {
        "comment": "or others cases where you know the string is valid ",
        "similar_with": [
            423
        ]
    },
    "424": {
        "comment": "or others cases where you know the string is valid Scale is used for getting and setting the base10 scaled value ",
        "similar_with": [
            424
        ]
    },
    "425": {
        "comment": "Scale is used for getting and setting the base10 scaled value ",
        "similar_with": [
            425
        ]
    },
    "426": {
        "comment": "Scale is used for getting and setting the base10 scaled value Base2 scales are omitted for mathematical simplicity ",
        "similar_with": [
            426
        ]
    },
    "427": {
        "comment": "Base2 scales are omitted for mathematical simplicity ",
        "similar_with": [
            427
        ]
    },
    "428": {
        "comment": "Base2 scales are omitted for mathematical simplicity See QuantityScaledValue for more details ",
        "similar_with": [
            428
        ]
    },
    "429": {
        "comment": "See QuantityScaledValue for more details ",
        "similar_with": [
            429
        ]
    },
    "430": {
        "comment": "See QuantityScaledValue for more details splitREString is used to separate a number from its suffix as such ",
        "similar_with": [
            430
        ]
    },
    "431": {
        "comment": "splitREString is used to separate a number from its suffix as such ",
        "similar_with": [
            431
        ]
    },
    "432": {
        "comment": "splitREString is used to separate a number from its suffix as such this is overly permissive but thats OK it will be checked later ",
        "similar_with": [
            432
        ]
    },
    "433": {
        "comment": "this is overly permissive but thats OK it will be checked later ",
        "similar_with": [
            433
        ]
    },
    "434": {
        "comment": "this is overly permissive but thats OK it will be checked later splitRE is used to get the various parts of a number ",
        "similar_with": [
            434
        ]
    },
    "435": {
        "comment": "splitRE is used to get the various parts of a number ",
        "similar_with": [
            435
        ]
    },
    "436": {
        "comment": "splitRE is used to get the various parts of a number Errors that could happen while parsing a string ",
        "similar_with": [
            436
        ]
    },
    "437": {
        "comment": "Errors that could happen while parsing a string ",
        "similar_with": [
            437
        ]
    },
    "438": {
        "comment": "Errors that could happen while parsing a string Commonly needed bigInt values treat as read only ",
        "similar_with": [
            438
        ]
    },
    "439": {
        "comment": "Commonly needed bigInt values treat as read only ",
        "similar_with": [
            439
        ]
    },
    "440": {
        "comment": "Commonly needed bigInt values treat as read only Commonly needed infDec values treat as read only ",
        "similar_with": [
            440
        ]
    },
    "441": {
        "comment": "Commonly needed infDec values treat as read only ",
        "similar_with": [
            441
        ]
    },
    "442": {
        "comment": "Commonly needed infDec values treat as read only Largest in magnitude number allowed ",
        "similar_with": [
            442
        ]
    },
    "443": {
        "comment": "Largest in magnitude number allowed ",
        "similar_with": [
            443
        ]
    },
    "444": {
        "comment": "Largest in magnitude number allowed  max int64 ",
        "similar_with": [
            444
        ]
    },
    "445": {
        "comment": " max int64 ",
        "similar_with": [
            445
        ]
    },
    "446": {
        "comment": " max int64 The maximum value we can represent milliunits for ",
        "similar_with": [
            446
        ]
    },
    "447": {
        "comment": "The maximum value we can represent milliunits for ",
        "similar_with": [
            447
        ]
    },
    "448": {
        "comment": "The maximum value we can represent milliunits for Compare with the return value of QuantityValue to ",
        "similar_with": [
            448
        ]
    },
    "449": {
        "comment": "Compare with the return value of QuantityValue to ",
        "similar_with": [
            449
        ]
    },
    "450": {
        "comment": "Compare with the return value of QuantityValue to see if its safe to use QuantityMilliValue ",
        "similar_with": [
            450
        ]
    },
    "451": {
        "comment": "see if its safe to use QuantityMilliValue ",
        "similar_with": [
            451
        ]
    },
    "452": {
        "comment": "see if its safe to use QuantityMilliValue ParseQuantity turns str into a Quantity or returns an error ",
        "similar_with": [
            452
        ]
    },
    "453": {
        "comment": "ParseQuantity turns str into a Quantity or returns an error ",
        "similar_with": [
            453
        ]
    },
    "454": {
        "comment": "ParseQuantity turns str into a Quantity or returns an error regexp returns are entire match followed by an entry for each  section ",
        "similar_with": [
            454
        ]
    },
    "455": {
        "comment": "regexp returns are entire match followed by an entry for each  section ",
        "similar_with": [
            455
        ]
    },
    "456": {
        "comment": "regexp returns are entire match followed by an entry for each  section So that no one but us has to think about suffixes remove it ",
        "similar_with": [
            456
        ]
    },
    "457": {
        "comment": "So that no one but us has to think about suffixes remove it ",
        "similar_with": [
            457
        ]
    },
    "458": {
        "comment": "So that no one but us has to think about suffixes remove it numericSuffix  2  exponent ",
        "similar_with": [
            458
        ]
    },
    "459": {
        "comment": "numericSuffix  2  exponent ",
        "similar_with": [
            459
        ]
    },
    "460": {
        "comment": "numericSuffix  2  exponent Cap at minmax bounds ",
        "similar_with": [
            460
        ]
    },
    "461": {
        "comment": "Cap at minmax bounds ",
        "similar_with": [
            461
        ]
    },
    "462": {
        "comment": "Cap at minmax bounds This rounds nonzero values up to the minimum representable value under the theory that ",
        "similar_with": [
            462
        ]
    },
    "463": {
        "comment": "This rounds nonzero values up to the minimum representable value under the theory that ",
        "similar_with": [
            463
        ]
    },
    "464": {
        "comment": "This rounds nonzero values up to the minimum representable value under the theory that if you want some resources you should get some resources even if you asked for way too small ",
        "similar_with": [
            464
        ]
    },
    "465": {
        "comment": "if you want some resources you should get some resources even if you asked for way too small ",
        "similar_with": [
            465
        ]
    },
    "466": {
        "comment": "if you want some resources you should get some resources even if you asked for way too small of an amount  Arguably this should be infRoundHalfUp normal rounding but that would have ",
        "similar_with": [
            466
        ]
    },
    "467": {
        "comment": "of an amount  Arguably this should be infRoundHalfUp normal rounding but that would have ",
        "similar_with": [
            467
        ]
    },
    "468": {
        "comment": "of an amount  Arguably this should be infRoundHalfUp normal rounding but that would have the side effect of rounding values  5n to zero ",
        "similar_with": [
            468
        ]
    },
    "469": {
        "comment": "the side effect of rounding values  5n to zero ",
        "similar_with": [
            469
        ]
    },
    "470": {
        "comment": "the side effect of rounding values  5n to zero The max is just a simple cap ",
        "similar_with": [
            470
        ]
    },
    "471": {
        "comment": "The max is just a simple cap ",
        "similar_with": [
            471
        ]
    },
    "472": {
        "comment": "The max is just a simple cap This avoids rounding and hopefully confusion too ",
        "similar_with": [
            472
        ]
    },
    "473": {
        "comment": "This avoids rounding and hopefully confusion too ",
        "similar_with": [
            473
        ]
    },
    "474": {
        "comment": "This avoids rounding and hopefully confusion too removeFactors divides in a loop the return values have the property that ",
        "similar_with": [
            474
        ]
    },
    "475": {
        "comment": "removeFactors divides in a loop the return values have the property that ",
        "similar_with": [
            475
        ]
    },
    "476": {
        "comment": "removeFactors divides in a loop the return values have the property that d  result  factor  times ",
        "similar_with": [
            476
        ]
    },
    "477": {
        "comment": "d  result  factor  times ",
        "similar_with": [
            477
        ]
    },
    "478": {
        "comment": "d  result  factor  times d may be modified in place ",
        "similar_with": [
            478
        ]
    },
    "479": {
        "comment": "d may be modified in place ",
        "similar_with": [
            479
        ]
    },
    "480": {
        "comment": "d may be modified in place If d  0 then the return values will be 0 0 ",
        "similar_with": [
            480
        ]
    },
    "481": {
        "comment": "If d  0 then the return values will be 0 0 ",
        "similar_with": [
            481
        ]
    },
    "482": {
        "comment": "If d  0 then the return values will be 0 0 Canonicalize returns the canonical form of q and its suffix see comment on Quantity ",
        "similar_with": [
            482
        ]
    },
    "483": {
        "comment": "Canonicalize returns the canonical form of q and its suffix see comment on Quantity ",
        "similar_with": [
            483
        ]
    },
    "484": {
        "comment": "Canonicalize returns the canonical form of q and its suffix see comment on Quantity Note about BinarySI ",
        "similar_with": [
            484
        ]
    },
    "485": {
        "comment": "Note about BinarySI ",
        "similar_with": [
            485
        ]
    },
    "486": {
        "comment": "Note about BinarySI If qFormat is set to BinarySI and qAmount represents a nonzero value between ",
        "similar_with": [
            486
        ]
    },
    "487": {
        "comment": "If qFormat is set to BinarySI and qAmount represents a nonzero value between ",
        "similar_with": [
            487
        ]
    },
    "488": {
        "comment": "If qFormat is set to BinarySI and qAmount represents a nonzero value between 1 and 1 it will be emitted as if qFormat were DecimalSI ",
        "similar_with": [
            488
        ]
    },
    "489": {
        "comment": "1 and 1 it will be emitted as if qFormat were DecimalSI ",
        "similar_with": [
            489
        ]
    },
    "490": {
        "comment": "1 and 1 it will be emitted as if qFormat were DecimalSI Otherwise if qFormat is set to BinarySI frational parts of qAmount will be ",
        "similar_with": [
            490
        ]
    },
    "491": {
        "comment": "Otherwise if qFormat is set to BinarySI frational parts of qAmount will be ",
        "similar_with": [
            491
        ]
    },
    "492": {
        "comment": "Otherwise if qFormat is set to BinarySI frational parts of qAmount will be rounded up 11i becomes 2i ",
        "similar_with": [
            492
        ]
    },
    "493": {
        "comment": "rounded up 11i becomes 2i ",
        "similar_with": [
            493
        ]
    },
    "494": {
        "comment": "rounded up 11i becomes 2i zero is zero always ",
        "similar_with": [
            494
        ]
    },
    "495": {
        "comment": "zero is zero always ",
        "similar_with": [
            495
        ]
    },
    "496": {
        "comment": "zero is zero always This avoids rounding and hopefully confusion too ",
        "similar_with": [
            496
        ]
    },
    "497": {
        "comment": "This avoids rounding and hopefully confusion too ",
        "similar_with": [
            497
        ]
    },
    "498": {
        "comment": "This avoids rounding and hopefully confusion too Dont lose precision show as DecimalSI ",
        "similar_with": [
            498
        ]
    },
    "499": {
        "comment": "Dont lose precision show as DecimalSI ",
        "similar_with": [
            499
        ]
    },
    "500": {
        "comment": "Dont lose precision show as DecimalSI TODO If BinarySI formatting is requested but would cause rounding upgrade to ",
        "similar_with": [
            500
        ]
    },
    "501": {
        "comment": "TODO If BinarySI formatting is requested but would cause rounding upgrade to ",
        "similar_with": [
            501
        ]
    },
    "502": {
        "comment": "TODO If BinarySI formatting is requested but would cause rounding upgrade to one of the other formats ",
        "similar_with": [
            502
        ]
    },
    "503": {
        "comment": "one of the other formats ",
        "similar_with": [
            503
        ]
    },
    "504": {
        "comment": "one of the other formats move all factors of 10 into the exponent for easy reasoning ",
        "similar_with": [
            504
        ]
    },
    "505": {
        "comment": "move all factors of 10 into the exponent for easy reasoning ",
        "similar_with": [
            505
        ]
    },
    "506": {
        "comment": "move all factors of 10 into the exponent for easy reasoning make sure exponent is a multiple of 3 ",
        "similar_with": [
            506
        ]
    },
    "507": {
        "comment": "make sure exponent is a multiple of 3 ",
        "similar_with": [
            507
        ]
    },
    "508": {
        "comment": "make sure exponent is a multiple of 3 String formats the Quantity as a string ",
        "similar_with": [
            508
        ]
    },
    "509": {
        "comment": "String formats the Quantity as a string ",
        "similar_with": [
            509
        ]
    },
    "510": {
        "comment": "String formats the Quantity as a string Cmp compares q and y and returns ",
        "similar_with": [
            510
        ]
    },
    "511": {
        "comment": "Cmp compares q and y and returns ",
        "similar_with": [
            511
        ]
    },
    "512": {
        "comment": "Cmp compares q and y and returns 1 if q   y ",
        "similar_with": [
            512
        ]
    },
    "513": {
        "comment": "1 if q   y ",
        "similar_with": [
            513
        ]
    },
    "514": {
        "comment": "1 if q   y 0 if q  y ",
        "similar_with": [
            514
        ]
    },
    "515": {
        "comment": "0 if q  y ",
        "similar_with": [
            515
        ]
    },
    "516": {
        "comment": "0 if q  y 1 if q   y ",
        "similar_with": [
            516
        ]
    },
    "517": {
        "comment": "1 if q   y ",
        "similar_with": [
            517
        ]
    },
    "518": {
        "comment": "1 if q   y Adding 0 do nothing ",
        "similar_with": [
            518
        ]
    },
    "519": {
        "comment": "Adding 0 do nothing ",
        "similar_with": [
            519
        ]
    },
    "520": {
        "comment": "Adding 0 do nothing we want to preserve the format of the nonzero value ",
        "similar_with": [
            520
        ]
    },
    "521": {
        "comment": "we want to preserve the format of the nonzero value ",
        "similar_with": [
            521
        ]
    },
    "522": {
        "comment": "we want to preserve the format of the nonzero value Subtracting 0 do nothing ",
        "similar_with": [
            522
        ]
    },
    "523": {
        "comment": "Subtracting 0 do nothing ",
        "similar_with": [
            523
        ]
    },
    "524": {
        "comment": "Subtracting 0 do nothing we want to preserve the format of the nonzero value ",
        "similar_with": [
            524
        ]
    },
    "525": {
        "comment": "we want to preserve the format of the nonzero value ",
        "similar_with": [
            525
        ]
    },
    "526": {
        "comment": "we want to preserve the format of the nonzero value Neg sets q to the negative value of y ",
        "similar_with": [
            526
        ]
    },
    "527": {
        "comment": "Neg sets q to the negative value of y ",
        "similar_with": [
            527
        ]
    },
    "528": {
        "comment": "Neg sets q to the negative value of y It updates the format of q to match y ",
        "similar_with": [
            528
        ]
    },
    "529": {
        "comment": "It updates the format of q to match y ",
        "similar_with": [
            529
        ]
    },
    "530": {
        "comment": "It updates the format of q to match y MarshalJSON implements the jsonMarshaller interface ",
        "similar_with": [
            530
        ]
    },
    "531": {
        "comment": "MarshalJSON implements the jsonMarshaller interface ",
        "similar_with": [
            531
        ]
    },
    "532": {
        "comment": "MarshalJSON implements the jsonMarshaller interface UnmarshalJSON implements the jsonUnmarshaller interface ",
        "similar_with": [
            532
        ]
    },
    "533": {
        "comment": "UnmarshalJSON implements the jsonUnmarshaller interface ",
        "similar_with": [
            533
        ]
    },
    "534": {
        "comment": "UnmarshalJSON implements the jsonUnmarshaller interface This copy is safe because parsed will not be referred to again ",
        "similar_with": [
            534
        ]
    },
    "535": {
        "comment": "This copy is safe because parsed will not be referred to again ",
        "similar_with": [
            535
        ]
    },
    "536": {
        "comment": "This copy is safe because parsed will not be referred to again NewQuantity returns a new Quantity representing the given ",
        "similar_with": [
            536
        ]
    },
    "537": {
        "comment": "NewQuantity returns a new Quantity representing the given ",
        "similar_with": [
            537
        ]
    },
    "538": {
        "comment": "NewQuantity returns a new Quantity representing the given value in the given format ",
        "similar_with": [
            538
        ]
    },
    "539": {
        "comment": "value in the given format ",
        "similar_with": [
            539
        ]
    },
    "540": {
        "comment": "value in the given format NewMilliQuantity returns a new Quantity representing the given ",
        "similar_with": [
            540
        ]
    },
    "541": {
        "comment": "NewMilliQuantity returns a new Quantity representing the given ",
        "similar_with": [
            541
        ]
    },
    "542": {
        "comment": "NewMilliQuantity returns a new Quantity representing the given value  11000 in the given format Note that BinarySI formatting ",
        "similar_with": [
            542
        ]
    },
    "543": {
        "comment": "value  11000 in the given format Note that BinarySI formatting ",
        "similar_with": [
            543
        ]
    },
    "544": {
        "comment": "value  11000 in the given format Note that BinarySI formatting will round fractional values and will be changed to DecimalSI for ",
        "similar_with": [
            544
        ]
    },
    "545": {
        "comment": "will round fractional values and will be changed to DecimalSI for ",
        "similar_with": [
            545
        ]
    },
    "546": {
        "comment": "will round fractional values and will be changed to DecimalSI for values x where 1  x  1  x  0 ",
        "similar_with": [
            546
        ]
    },
    "547": {
        "comment": "values x where 1  x  1  x  0 ",
        "similar_with": [
            547
        ]
    },
    "548": {
        "comment": "values x where 1  x  1  x  0 NewScaledQuantity returns a new Quantity representing the given ",
        "similar_with": [
            548
        ]
    },
    "549": {
        "comment": "NewScaledQuantity returns a new Quantity representing the given ",
        "similar_with": [
            549
        ]
    },
    "550": {
        "comment": "NewScaledQuantity returns a new Quantity representing the given value  10scale in DecimalSI format ",
        "similar_with": [
            550
        ]
    },
    "551": {
        "comment": "value  10scale in DecimalSI format ",
        "similar_with": [
            551
        ]
    },
    "552": {
        "comment": "value  10scale in DecimalSI format Value returns the value of q any fractional part will be lost ",
        "similar_with": [
            552
        ]
    },
    "553": {
        "comment": "Value returns the value of q any fractional part will be lost ",
        "similar_with": [
            553
        ]
    },
    "554": {
        "comment": "Value returns the value of q any fractional part will be lost MilliValue returns the value of ceilq  1000 this could overflow an int64 ",
        "similar_with": [
            554
        ]
    },
    "555": {
        "comment": "MilliValue returns the value of ceilq  1000 this could overflow an int64 ",
        "similar_with": [
            555
        ]
    },
    "556": {
        "comment": "MilliValue returns the value of ceilq  1000 this could overflow an int64 if thats a concern call Value first to verify the number is small enough ",
        "similar_with": [
            556
        ]
    },
    "557": {
        "comment": "if thats a concern call Value first to verify the number is small enough ",
        "similar_with": [
            557
        ]
    },
    "558": {
        "comment": "if thats a concern call Value first to verify the number is small enough ScaledValue returns the value of ceilq  10scale this could overflow an int64 ",
        "similar_with": [
            558
        ]
    },
    "559": {
        "comment": "ScaledValue returns the value of ceilq  10scale this could overflow an int64 ",
        "similar_with": [
            559
        ]
    },
    "560": {
        "comment": "ScaledValue returns the value of ceilq  10scale this could overflow an int64 To detect overflow call Value first and verify the expected magnitude ",
        "similar_with": [
            560
        ]
    },
    "561": {
        "comment": "To detect overflow call Value first and verify the expected magnitude ",
        "similar_with": [
            561
        ]
    },
    "562": {
        "comment": "To detect overflow call Value first and verify the expected magnitude Set sets qs value to be value ",
        "similar_with": [
            562
        ]
    },
    "563": {
        "comment": "Set sets qs value to be value ",
        "similar_with": [
            563
        ]
    },
    "564": {
        "comment": "Set sets qs value to be value SetMilli sets qs value to be value  11000 ",
        "similar_with": [
            564
        ]
    },
    "565": {
        "comment": "SetMilli sets qs value to be value  11000 ",
        "similar_with": [
            565
        ]
    },
    "566": {
        "comment": "SetMilli sets qs value to be value  11000 SetScaled sets qs value to be value  10scale ",
        "similar_with": [
            566
        ]
    },
    "567": {
        "comment": "SetScaled sets qs value to be value  10scale ",
        "similar_with": [
            567
        ]
    },
    "568": {
        "comment": "SetScaled sets qs value to be value  10scale Copy is a convenience function that makes a deep copy for you Nondeep ",
        "similar_with": [
            568
        ]
    },
    "569": {
        "comment": "Copy is a convenience function that makes a deep copy for you Nondeep ",
        "similar_with": [
            569
        ]
    },
    "570": {
        "comment": "Copy is a convenience function that makes a deep copy for you Nondeep copies of quantities share pointers and you will regret that ",
        "similar_with": [
            570
        ]
    },
    "571": {
        "comment": "copies of quantities share pointers and you will regret that ",
        "similar_with": [
            571
        ]
    },
    "572": {
        "comment": "copies of quantities share pointers and you will regret that qFlag is a helper type for the Flag function ",
        "similar_with": [
            572
        ]
    },
    "573": {
        "comment": "qFlag is a helper type for the Flag function ",
        "similar_with": [
            573
        ]
    },
    "574": {
        "comment": "qFlag is a helper type for the Flag function Sets the value of the internal Quantity used by flag  pflag ",
        "similar_with": [
            574
        ]
    },
    "575": {
        "comment": "Sets the value of the internal Quantity used by flag  pflag ",
        "similar_with": [
            575
        ]
    },
    "576": {
        "comment": "Sets the value of the internal Quantity used by flag  pflag This copy is OK because q will not be referenced again ",
        "similar_with": [
            576
        ]
    },
    "577": {
        "comment": "This copy is OK because q will not be referenced again ",
        "similar_with": [
            577
        ]
    },
    "578": {
        "comment": "This copy is OK because q will not be referenced again Converts the value of the internal Quantity to a string used by flag  pflag ",
        "similar_with": [
            578
        ]
    },
    "579": {
        "comment": "Converts the value of the internal Quantity to a string used by flag  pflag ",
        "similar_with": [
            579
        ]
    },
    "580": {
        "comment": "Converts the value of the internal Quantity to a string used by flag  pflag States the type of flag this is Quantity used by pflag ",
        "similar_with": [
            580
        ]
    },
    "581": {
        "comment": "States the type of flag this is Quantity used by pflag ",
        "similar_with": [
            581
        ]
    },
    "582": {
        "comment": "States the type of flag this is Quantity used by pflag QuantityFlag is a helper that makes a quantity flag using standard flag package ",
        "similar_with": [
            582
        ]
    },
    "583": {
        "comment": "QuantityFlag is a helper that makes a quantity flag using standard flag package ",
        "similar_with": [
            583
        ]
    },
    "584": {
        "comment": "QuantityFlag is a helper that makes a quantity flag using standard flag package Will panic if defaultValue is not a valid quantity ",
        "similar_with": [
            584
        ]
    },
    "585": {
        "comment": "Will panic if defaultValue is not a valid quantity ",
        "similar_with": [
            585
        ]
    },
    "586": {
        "comment": "Will panic if defaultValue is not a valid quantity NewQuantityFlagValue returns an object that can be used to back a flag ",
        "similar_with": [
            586
        ]
    },
    "587": {
        "comment": "NewQuantityFlagValue returns an object that can be used to back a flag ",
        "similar_with": [
            587
        ]
    },
    "588": {
        "comment": "NewQuantityFlagValue returns an object that can be used to back a flag pointing at the given Quantity variable ",
        "similar_with": [
            588
        ]
    },
    "589": {
        "comment": "pointing at the given Quantity variable ",
        "similar_with": [
            589
        ]
    },
    "590": {
        "comment": "pointing at the given Quantity variable infScale adapts a Scale value to an infScale value ",
        "similar_with": [
            590
        ]
    },
    "591": {
        "comment": "infScale adapts a Scale value to an infScale value ",
        "similar_with": [
            591
        ]
    },
    "592": {
        "comment": "infScale adapts a Scale value to an infScale value infScale is upsidedown ",
        "similar_with": [
            592
        ]
    },
    "593": {
        "comment": "infScale is upsidedown ",
        "similar_with": [
            593
        ]
    },
    "594": {
        "comment": "Copyright 2014 The Kubernetes Authors All rights reserved ",
        "similar_with": [
            594
        ]
    },
    "595": {
        "comment": "Copyright 2014 The Kubernetes Authors All rights reserved Licensed under the Apache License Version 20 the License ",
        "similar_with": [
            595
        ]
    },
    "596": {
        "comment": "Licensed under the Apache License Version 20 the License ",
        "similar_with": [
            596
        ]
    },
    "597": {
        "comment": "Licensed under the Apache License Version 20 the License you may not use this file except in compliance with the License ",
        "similar_with": [
            597
        ]
    },
    "598": {
        "comment": "you may not use this file except in compliance with the License ",
        "similar_with": [
            598
        ]
    },
    "599": {
        "comment": "you may not use this file except in compliance with the License You may obtain a copy of the License at ",
        "similar_with": [
            599
        ]
    },
    "600": {
        "comment": "You may obtain a copy of the License at ",
        "similar_with": [
            600
        ]
    },
    "601": {
        "comment": "You may obtain a copy of the License at httpwwwapacheorglicensesLICENSE20 ",
        "similar_with": [
            601
        ]
    },
    "602": {
        "comment": "httpwwwapacheorglicensesLICENSE20 ",
        "similar_with": [
            602
        ]
    },
    "603": {
        "comment": "httpwwwapacheorglicensesLICENSE20 Unless required by applicable law or agreed to in writing software ",
        "similar_with": [
            603
        ]
    },
    "604": {
        "comment": "Unless required by applicable law or agreed to in writing software ",
        "similar_with": [
            604
        ]
    },
    "605": {
        "comment": "Unless required by applicable law or agreed to in writing software distributed under the License is distributed on an AS IS BASIS ",
        "similar_with": [
            605
        ]
    },
    "606": {
        "comment": "distributed under the License is distributed on an AS IS BASIS ",
        "similar_with": [
            606
        ]
    },
    "607": {
        "comment": "distributed under the License is distributed on an AS IS BASIS WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND either express or implied ",
        "similar_with": [
            607
        ]
    },
    "608": {
        "comment": "WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND either express or implied ",
        "similar_with": [
            608
        ]
    },
    "609": {
        "comment": "WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND either express or implied See the License for the specific language governing permissions and ",
        "similar_with": [
            609
        ]
    },
    "610": {
        "comment": "See the License for the specific language governing permissions and ",
        "similar_with": [
            610
        ]
    },
    "611": {
        "comment": "See the License for the specific language governing permissions and limitations under the License ",
        "similar_with": [
            611
        ]
    },
    "612": {
        "comment": "limitations under the License ",
        "similar_with": [
            612
        ]
    },
    "613": {
        "comment": "limitations under the License Scale is used for getting and setting the base10 scaled value ",
        "similar_with": [
            613
        ]
    },
    "614": {
        "comment": "Scale is used for getting and setting the base10 scaled value ",
        "similar_with": [
            614
        ]
    },
    "615": {
        "comment": "Scale is used for getting and setting the base10 scaled value Base2 scales are omitted for mathematical simplicity ",
        "similar_with": [
            615
        ]
    },
    "616": {
        "comment": "Base2 scales are omitted for mathematical simplicity ",
        "similar_with": [
            616
        ]
    },
    "617": {
        "comment": "Base2 scales are omitted for mathematical simplicity See QuantityScaledValue for more details ",
        "similar_with": [
            617
        ]
    },
    "618": {
        "comment": "See QuantityScaledValue for more details ",
        "similar_with": [
            618
        ]
    },
    "619": {
        "comment": "See QuantityScaledValue for more details infScale adapts a Scale value to an infScale value ",
        "similar_with": [
            619
        ]
    },
    "620": {
        "comment": "infScale adapts a Scale value to an infScale value ",
        "similar_with": [
            620
        ]
    },
    "621": {
        "comment": "infScale adapts a Scale value to an infScale value infScale is upsidedown ",
        "similar_with": [
            621
        ]
    },
    "622": {
        "comment": "infScale is upsidedown ",
        "similar_with": [
            622
        ]
    },
    "623": {
        "comment": "infScale is upsidedown Used by quantity strings  treat as read only ",
        "similar_with": [
            623
        ]
    },
    "624": {
        "comment": "Used by quantity strings  treat as read only ",
        "similar_with": [
            624
        ]
    },
    "625": {
        "comment": "Used by quantity strings  treat as read only int64Amount represents a fixed precision numerator and arbitrary scale exponent It is faster ",
        "similar_with": [
            625
        ]
    },
    "626": {
        "comment": "int64Amount represents a fixed precision numerator and arbitrary scale exponent It is faster ",
        "similar_with": [
            626
        ]
    },
    "627": {
        "comment": "int64Amount represents a fixed precision numerator and arbitrary scale exponent It is faster than operations on infDec for values that can be represented as int64 ",
        "similar_with": [
            627
        ]
    },
    "628": {
        "comment": "than operations on infDec for values that can be represented as int64 ",
        "similar_with": [
            628
        ]
    },
    "629": {
        "comment": "than operations on infDec for values that can be represented as int64 Sign returns 0 if the value is zero 1 if it is less than 0 or 1 if it is greater than 0 ",
        "similar_with": [
            629
        ]
    },
    "630": {
        "comment": "Sign returns 0 if the value is zero 1 if it is less than 0 or 1 if it is greater than 0 ",
        "similar_with": [
            630
        ]
    },
    "631": {
        "comment": "Sign returns 0 if the value is zero 1 if it is less than 0 or 1 if it is greater than 0 AsInt64 returns the current amount as an int64 at scale 0 or false if the value cannot be ",
        "similar_with": [
            631
        ]
    },
    "632": {
        "comment": "AsInt64 returns the current amount as an int64 at scale 0 or false if the value cannot be ",
        "similar_with": [
            632
        ]
    },
    "633": {
        "comment": "AsInt64 returns the current amount as an int64 at scale 0 or false if the value cannot be represented in an int64 OR would result in a loss of precision This method is intended as ",
        "similar_with": [
            633
        ]
    },
    "634": {
        "comment": "represented in an int64 OR would result in a loss of precision This method is intended as ",
        "similar_with": [
            634
        ]
    },
    "635": {
        "comment": "represented in an int64 OR would result in a loss of precision This method is intended as an optimization to avoid calling AsDec ",
        "similar_with": [
            635
        ]
    },
    "636": {
        "comment": "an optimization to avoid calling AsDec ",
        "similar_with": [
            636
        ]
    },
    "637": {
        "comment": "an optimization to avoid calling AsDec TODO attempt to reduce factors although it is assumed that factors are reduced prior ",
        "similar_with": [
            637
        ]
    },
    "638": {
        "comment": "TODO attempt to reduce factors although it is assumed that factors are reduced prior ",
        "similar_with": [
            638
        ]
    },
    "639": {
        "comment": "TODO attempt to reduce factors although it is assumed that factors are reduced prior to the int64Amount being created ",
        "similar_with": [
            639
        ]
    },
    "640": {
        "comment": "to the int64Amount being created ",
        "similar_with": [
            640
        ]
    },
    "641": {
        "comment": "to the int64Amount being created AsScaledInt64 returns an int64 representing the value of this amount at the specified scale ",
        "similar_with": [
            641
        ]
    },
    "642": {
        "comment": "AsScaledInt64 returns an int64 representing the value of this amount at the specified scale ",
        "similar_with": [
            642
        ]
    },
    "643": {
        "comment": "AsScaledInt64 returns an int64 representing the value of this amount at the specified scale rounding up or false if that would result in overflow 1e20AsScaledInt641 would result ",
        "similar_with": [
            643
        ]
    },
    "644": {
        "comment": "rounding up or false if that would result in overflow 1e20AsScaledInt641 would result ",
        "similar_with": [
            644
        ]
    },
    "645": {
        "comment": "rounding up or false if that would result in overflow 1e20AsScaledInt641 would result in overflow because 1e19 is not representable as an int64 Note that setting a scale larger ",
        "similar_with": [
            645
        ]
    },
    "646": {
        "comment": "in overflow because 1e19 is not representable as an int64 Note that setting a scale larger ",
        "similar_with": [
            646
        ]
    },
    "647": {
        "comment": "in overflow because 1e19 is not representable as an int64 Note that setting a scale larger than the current value may result in loss of precision  ie 1e6AsScaledInt640 would ",
        "similar_with": [
            647
        ]
    },
    "648": {
        "comment": "than the current value may result in loss of precision  ie 1e6AsScaledInt640 would ",
        "similar_with": [
            648
        ]
    },
    "649": {
        "comment": "than the current value may result in loss of precision  ie 1e6AsScaledInt640 would return 1 because 0000001 is rounded up to 1 ",
        "similar_with": [
            649
        ]
    },
    "650": {
        "comment": "return 1 because 0000001 is rounded up to 1 ",
        "similar_with": [
            650
        ]
    },
    "651": {
        "comment": "return 1 because 0000001 is rounded up to 1 AsDec returns an infDec representation of this value ",
        "similar_with": [
            651
        ]
    },
    "652": {
        "comment": "AsDec returns an infDec representation of this value ",
        "similar_with": [
            652
        ]
    },
    "653": {
        "comment": "AsDec returns an infDec representation of this value Cmp returns 0 if a and b are equal 1 if a is greater than b or 1 if a is less than b ",
        "similar_with": [
            653
        ]
    },
    "654": {
        "comment": "Cmp returns 0 if a and b are equal 1 if a is greater than b or 1 if a is less than b ",
        "similar_with": [
            654
        ]
    },
    "655": {
        "comment": "Cmp returns 0 if a and b are equal 1 if a is greater than b or 1 if a is less than b compare only the unscaled portion ",
        "similar_with": [
            655
        ]
    },
    "656": {
        "comment": "compare only the unscaled portion ",
        "similar_with": [
            656
        ]
    },
    "657": {
        "comment": "compare only the unscaled portion Add adds two int64Amounts together matching scales It will return false and not mutate ",
        "similar_with": [
            657
        ]
    },
    "658": {
        "comment": "Add adds two int64Amounts together matching scales It will return false and not mutate ",
        "similar_with": [
            658
        ]
    },
    "659": {
        "comment": "Add adds two int64Amounts together matching scales It will return false and not mutate a if overflow or underflow would result ",
        "similar_with": [
            659
        ]
    },
    "660": {
        "comment": "a if overflow or underflow would result ",
        "similar_with": [
            660
        ]
    },
    "661": {
        "comment": "a if overflow or underflow would result Sub removes the value of b from the current amount or returns false if underflow would result ",
        "similar_with": [
            661
        ]
    },
    "662": {
        "comment": "Sub removes the value of b from the current amount or returns false if underflow would result ",
        "similar_with": [
            662
        ]
    },
    "663": {
        "comment": "Sub removes the value of b from the current amount or returns false if underflow would result AsScale adjusts this amount to set a minimum scale rounding up and returns true iff no precision ",
        "similar_with": [
            663
        ]
    },
    "664": {
        "comment": "AsScale adjusts this amount to set a minimum scale rounding up and returns true iff no precision ",
        "similar_with": [
            664
        ]
    },
    "665": {
        "comment": "AsScale adjusts this amount to set a minimum scale rounding up and returns true iff no precision was lost 11e5AsScale5 would return 11e5 but 11e5AsScale6 would return 1e6 ",
        "similar_with": [
            665
        ]
    },
    "666": {
        "comment": "was lost 11e5AsScale5 would return 11e5 but 11e5AsScale6 would return 1e6 ",
        "similar_with": [
            666
        ]
    },
    "667": {
        "comment": "was lost 11e5AsScale5 would return 11e5 but 11e5AsScale6 would return 1e6 AsCanonicalBytes accepts a buffer to write the base10 string value of this field to and returns ",
        "similar_with": [
            667
        ]
    },
    "668": {
        "comment": "AsCanonicalBytes accepts a buffer to write the base10 string value of this field to and returns ",
        "similar_with": [
            668
        ]
    },
    "669": {
        "comment": "AsCanonicalBytes accepts a buffer to write the base10 string value of this field to and returns either that buffer or a larger buffer and the current exponent of the value The value is adjusted ",
        "similar_with": [
            669
        ]
    },
    "670": {
        "comment": "either that buffer or a larger buffer and the current exponent of the value The value is adjusted ",
        "similar_with": [
            670
        ]
    },
    "671": {
        "comment": "either that buffer or a larger buffer and the current exponent of the value The value is adjusted until the exponent is a multiple of 3  ie 11e5 would return 110 3 ",
        "similar_with": [
            671
        ]
    },
    "672": {
        "comment": "until the exponent is a multiple of 3  ie 11e5 would return 110 3 ",
        "similar_with": [
            672
        ]
    },
    "673": {
        "comment": "until the exponent is a multiple of 3  ie 11e5 would return 110 3 make sure exponent is a multiple of 3 ",
        "similar_with": [
            673
        ]
    },
    "674": {
        "comment": "make sure exponent is a multiple of 3 ",
        "similar_with": [
            674
        ]
    },
    "675": {
        "comment": "make sure exponent is a multiple of 3 AsCanonicalBase1024Bytes accepts a buffer to write the base1024 string value of this field to and returns ",
        "similar_with": [
            675
        ]
    },
    "676": {
        "comment": "AsCanonicalBase1024Bytes accepts a buffer to write the base1024 string value of this field to and returns ",
        "similar_with": [
            676
        ]
    },
    "677": {
        "comment": "AsCanonicalBase1024Bytes accepts a buffer to write the base1024 string value of this field to and returns either that buffer or a larger buffer and the current exponent of the value 2048 is 2  1024  1 and would ",
        "similar_with": [
            677
        ]
    },
    "678": {
        "comment": "either that buffer or a larger buffer and the current exponent of the value 2048 is 2  1024  1 and would ",
        "similar_with": [
            678
        ]
    },
    "679": {
        "comment": "either that buffer or a larger buffer and the current exponent of the value 2048 is 2  1024  1 and would return byte2048 1 ",
        "similar_with": [
            679
        ]
    },
    "680": {
        "comment": "return byte2048 1 ",
        "similar_with": [
            680
        ]
    },
    "681": {
        "comment": "return byte2048 1 infDecAmount implements common operations over an infDec that are specific to the quantity ",
        "similar_with": [
            681
        ]
    },
    "682": {
        "comment": "infDecAmount implements common operations over an infDec that are specific to the quantity ",
        "similar_with": [
            682
        ]
    },
    "683": {
        "comment": "infDecAmount implements common operations over an infDec that are specific to the quantity representation ",
        "similar_with": [
            683
        ]
    },
    "684": {
        "comment": "representation ",
        "similar_with": [
            684
        ]
    },
    "685": {
        "comment": "representation AsScale adjusts this amount to set a minimum scale rounding up and returns true iff no precision ",
        "similar_with": [
            685
        ]
    },
    "686": {
        "comment": "AsScale adjusts this amount to set a minimum scale rounding up and returns true iff no precision ",
        "similar_with": [
            686
        ]
    },
    "687": {
        "comment": "AsScale adjusts this amount to set a minimum scale rounding up and returns true iff no precision was lost 11e5AsScale5 would return 11e5 but 11e5AsScale6 would return 1e6 ",
        "similar_with": [
            687
        ]
    },
    "688": {
        "comment": "was lost 11e5AsScale5 would return 11e5 but 11e5AsScale6 would return 1e6 ",
        "similar_with": [
            688
        ]
    },
    "689": {
        "comment": "was lost 11e5AsScale5 would return 11e5 but 11e5AsScale6 would return 1e6 AsCanonicalBytes accepts a buffer to write the base10 string value of this field to and returns ",
        "similar_with": [
            689
        ]
    },
    "690": {
        "comment": "AsCanonicalBytes accepts a buffer to write the base10 string value of this field to and returns ",
        "similar_with": [
            690
        ]
    },
    "691": {
        "comment": "AsCanonicalBytes accepts a buffer to write the base10 string value of this field to and returns either that buffer or a larger buffer and the current exponent of the value The value is adjusted ",
        "similar_with": [
            691
        ]
    },
    "692": {
        "comment": "either that buffer or a larger buffer and the current exponent of the value The value is adjusted ",
        "similar_with": [
            692
        ]
    },
    "693": {
        "comment": "either that buffer or a larger buffer and the current exponent of the value The value is adjusted until the exponent is a multiple of 3  ie 11e5 would return 110 3 ",
        "similar_with": [
            693
        ]
    },
    "694": {
        "comment": "until the exponent is a multiple of 3  ie 11e5 would return 110 3 ",
        "similar_with": [
            694
        ]
    },
    "695": {
        "comment": "until the exponent is a multiple of 3  ie 11e5 would return 110 3 move all factors of 10 into the exponent for easy reasoning ",
        "similar_with": [
            695
        ]
    },
    "696": {
        "comment": "move all factors of 10 into the exponent for easy reasoning ",
        "similar_with": [
            696
        ]
    },
    "697": {
        "comment": "move all factors of 10 into the exponent for easy reasoning make sure exponent is a multiple of 3 ",
        "similar_with": [
            697
        ]
    },
    "698": {
        "comment": "make sure exponent is a multiple of 3 ",
        "similar_with": [
            698
        ]
    },
    "699": {
        "comment": "make sure exponent is a multiple of 3 AsCanonicalBase1024Bytes accepts a buffer to write the base1024 string value of this field to and returns ",
        "similar_with": [
            699
        ]
    },
    "700": {
        "comment": "AsCanonicalBase1024Bytes accepts a buffer to write the base1024 string value of this field to and returns ",
        "similar_with": [
            700
        ]
    },
    "701": {
        "comment": "AsCanonicalBase1024Bytes accepts a buffer to write the base1024 string value of this field to and returns either that buffer or a larger buffer and the current exponent of the value 2048 is 2  1024  1 and would ",
        "similar_with": [
            701
        ]
    },
    "702": {
        "comment": "either that buffer or a larger buffer and the current exponent of the value 2048 is 2  1024  1 and would ",
        "similar_with": [
            702
        ]
    },
    "703": {
        "comment": "either that buffer or a larger buffer and the current exponent of the value 2048 is 2  1024  1 and would return byte2048 1 ",
        "similar_with": [
            703
        ]
    },
    "704": {
        "comment": "return byte2048 1 ",
        "similar_with": [
            704
        ]
    },
    "705": {
        "comment": "Copyright 2014 The Kubernetes Authors All rights reserved ",
        "similar_with": [
            705
        ]
    },
    "706": {
        "comment": "Copyright 2014 The Kubernetes Authors All rights reserved Licensed under the Apache License Version 20 the License ",
        "similar_with": [
            706
        ]
    },
    "707": {
        "comment": "Licensed under the Apache License Version 20 the License ",
        "similar_with": [
            707
        ]
    },
    "708": {
        "comment": "Licensed under the Apache License Version 20 the License you may not use this file except in compliance with the License ",
        "similar_with": [
            708
        ]
    },
    "709": {
        "comment": "you may not use this file except in compliance with the License ",
        "similar_with": [
            709
        ]
    },
    "710": {
        "comment": "you may not use this file except in compliance with the License You may obtain a copy of the License at ",
        "similar_with": [
            710
        ]
    },
    "711": {
        "comment": "You may obtain a copy of the License at ",
        "similar_with": [
            711
        ]
    },
    "712": {
        "comment": "You may obtain a copy of the License at httpwwwapacheorglicensesLICENSE20 ",
        "similar_with": [
            712
        ]
    },
    "713": {
        "comment": "httpwwwapacheorglicensesLICENSE20 ",
        "similar_with": [
            713
        ]
    },
    "714": {
        "comment": "httpwwwapacheorglicensesLICENSE20 Unless required by applicable law or agreed to in writing software ",
        "similar_with": [
            714
        ]
    },
    "715": {
        "comment": "Unless required by applicable law or agreed to in writing software ",
        "similar_with": [
            715
        ]
    },
    "716": {
        "comment": "Unless required by applicable law or agreed to in writing software distributed under the License is distributed on an AS IS BASIS ",
        "similar_with": [
            716
        ]
    },
    "717": {
        "comment": "distributed under the License is distributed on an AS IS BASIS ",
        "similar_with": [
            717
        ]
    },
    "718": {
        "comment": "distributed under the License is distributed on an AS IS BASIS WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND either express or implied ",
        "similar_with": [
            718
        ]
    },
    "719": {
        "comment": "WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND either express or implied ",
        "similar_with": [
            719
        ]
    },
    "720": {
        "comment": "WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND either express or implied See the License for the specific language governing permissions and ",
        "similar_with": [
            720
        ]
    },
    "721": {
        "comment": "See the License for the specific language governing permissions and ",
        "similar_with": [
            721
        ]
    },
    "722": {
        "comment": "See the License for the specific language governing permissions and limitations under the License ",
        "similar_with": [
            722
        ]
    },
    "723": {
        "comment": "limitations under the License ",
        "similar_with": [
            723
        ]
    },
    "724": {
        "comment": "limitations under the License See the below test scale is the negative of an exponent ",
        "similar_with": [
            724
        ]
    },
    "725": {
        "comment": "See the below test scale is the negative of an exponent ",
        "similar_with": [
            725
        ]
    },
    "726": {
        "comment": "See the below test scale is the negative of an exponent See the below test scale is the negative of an exponent ",
        "similar_with": [
            726
        ]
    },
    "727": {
        "comment": "See the below test scale is the negative of an exponent ",
        "similar_with": [
            727
        ]
    },
    "728": {
        "comment": "See the below test scale is the negative of an exponent TestQuantityParseZero ensures that when a 0 quantity is passed its string value is 0 ",
        "similar_with": [
            728
        ]
    },
    "729": {
        "comment": "TestQuantityParseZero ensures that when a 0 quantity is passed its string value is 0 ",
        "similar_with": [
            729
        ]
    },
    "730": {
        "comment": "TestQuantityParseZero ensures that when a 0 quantity is passed its string value is 0 TestQuantityAddZeroPreservesSuffix verifies that a suffix is preserved ",
        "similar_with": [
            730
        ]
    },
    "731": {
        "comment": "TestQuantityAddZeroPreservesSuffix verifies that a suffix is preserved ",
        "similar_with": [
            731
        ]
    },
    "732": {
        "comment": "TestQuantityAddZeroPreservesSuffix verifies that a suffix is preserved independent of the order of operations when adding a zero and nonzero val ",
        "similar_with": [
            732
        ]
    },
    "733": {
        "comment": "independent of the order of operations when adding a zero and nonzero val ",
        "similar_with": [
            733
        ]
    },
    "734": {
        "comment": "independent of the order of operations when adding a zero and nonzero val ensure nonzero  zero  nonzero suffix preserved ",
        "similar_with": [
            734
        ]
    },
    "735": {
        "comment": "ensure nonzero  zero  nonzero suffix preserved ",
        "similar_with": [
            735
        ]
    },
    "736": {
        "comment": "ensure nonzero  zero  nonzero suffix preserved ensure zero  nonzero  nonzero suffix preserved ",
        "similar_with": [
            736
        ]
    },
    "737": {
        "comment": "ensure zero  nonzero  nonzero suffix preserved ",
        "similar_with": [
            737
        ]
    },
    "738": {
        "comment": "ensure zero  nonzero  nonzero suffix preserved TestQuantitySubZeroPreservesSuffix verifies that a suffix is preserved ",
        "similar_with": [
            738
        ]
    },
    "739": {
        "comment": "TestQuantitySubZeroPreservesSuffix verifies that a suffix is preserved ",
        "similar_with": [
            739
        ]
    },
    "740": {
        "comment": "TestQuantitySubZeroPreservesSuffix verifies that a suffix is preserved independent of the order of operations when subtracting a zero and nonzero val ",
        "similar_with": [
            740
        ]
    },
    "741": {
        "comment": "independent of the order of operations when subtracting a zero and nonzero val ",
        "similar_with": [
            741
        ]
    },
    "742": {
        "comment": "independent of the order of operations when subtracting a zero and nonzero val ensure nonzero  zero  nonzero suffix preserved ",
        "similar_with": [
            742
        ]
    },
    "743": {
        "comment": "ensure nonzero  zero  nonzero suffix preserved ",
        "similar_with": [
            743
        ]
    },
    "744": {
        "comment": "ensure nonzero  zero  nonzero suffix preserved ensure we preserved the input value ",
        "similar_with": [
            744
        ]
    },
    "745": {
        "comment": "ensure we preserved the input value ",
        "similar_with": [
            745
        ]
    },
    "746": {
        "comment": "ensure we preserved the input value ensure zero  nonzero  nonzero suffix preserved ",
        "similar_with": [
            746
        ]
    },
    "747": {
        "comment": "ensure zero  nonzero  nonzero suffix preserved ",
        "similar_with": [
            747
        ]
    },
    "748": {
        "comment": "ensure zero  nonzero  nonzero suffix preserved Verifies that you get 0 as canonical value if internal value is 0 and not 0suffix ",
        "similar_with": [
            748
        ]
    },
    "749": {
        "comment": "Verifies that you get 0 as canonical value if internal value is 0 and not 0suffix ",
        "similar_with": [
            749
        ]
    },
    "750": {
        "comment": "Verifies that you get 0 as canonical value if internal value is 0 and not 0suffix Quantity less numbers are allowed ",
        "similar_with": [
            750
        ]
    },
    "751": {
        "comment": "Quantity less numbers are allowed ",
        "similar_with": [
            751
        ]
    },
    "752": {
        "comment": "Quantity less numbers are allowed Binary suffixes ",
        "similar_with": [
            752
        ]
    },
    "753": {
        "comment": "Binary suffixes ",
        "similar_with": [
            753
        ]
    },
    "754": {
        "comment": "Binary suffixes Decimal suffixes ",
        "similar_with": [
            754
        ]
    },
    "755": {
        "comment": "Decimal suffixes ",
        "similar_with": [
            755
        ]
    },
    "756": {
        "comment": "Decimal suffixes Decimal exponents ",
        "similar_with": [
            756
        ]
    },
    "757": {
        "comment": "Decimal exponents ",
        "similar_with": [
            757
        ]
    },
    "758": {
        "comment": "Decimal exponents Nonstandard but still parsable ",
        "similar_with": [
            758
        ]
    },
    "759": {
        "comment": "Nonstandard but still parsable ",
        "similar_with": [
            759
        ]
    },
    "760": {
        "comment": "Nonstandard but still parsable Things that look like floating point ",
        "similar_with": [
            760
        ]
    },
    "761": {
        "comment": "Things that look like floating point ",
        "similar_with": [
            761
        ]
    },
    "762": {
        "comment": "Things that look like floating point Things that saturateround ",
        "similar_with": [
            762
        ]
    },
    "763": {
        "comment": "Things that saturateround ",
        "similar_with": [
            763
        ]
    },
    "764": {
        "comment": "Things that saturateround Well accept fractional binary stuff too ",
        "similar_with": [
            764
        ]
    },
    "765": {
        "comment": "Well accept fractional binary stuff too ",
        "similar_with": [
            765
        ]
    },
    "766": {
        "comment": "Well accept fractional binary stuff too Things written by trolls ",
        "similar_with": [
            766
        ]
    },
    "767": {
        "comment": "Things written by trolls ",
        "similar_with": [
            767
        ]
    },
    "768": {
        "comment": "Things written by trolls rounds up changes format ",
        "similar_with": [
            768
        ]
    },
    "769": {
        "comment": "rounds up changes format ",
        "similar_with": [
            769
        ]
    },
    "770": {
        "comment": "rounds up changes format verify that we can decompose the input and get the same result by building up from the base ",
        "similar_with": [
            770
        ]
    },
    "771": {
        "comment": "verify that we can decompose the input and get the same result by building up from the base ",
        "similar_with": [
            771
        ]
    },
    "772": {
        "comment": "verify that we can decompose the input and get the same result by building up from the base Try the negative version of everything ",
        "similar_with": [
            772
        ]
    },
    "773": {
        "comment": "Try the negative version of everything ",
        "similar_with": [
            773
        ]
    },
    "774": {
        "comment": "Try the negative version of everything Try everything with an explicit  ",
        "similar_with": [
            774
        ]
    },
    "775": {
        "comment": "Try everything with an explicit  ",
        "similar_with": [
            775
        ]
    },
    "776": {
        "comment": "Try everything with an explicit  trailing whitespace is forbidden ",
        "similar_with": [
            776
        ]
    },
    "777": {
        "comment": "trailing whitespace is forbidden ",
        "similar_with": [
            777
        ]
    },
    "778": {
        "comment": "trailing whitespace is forbidden Avoid modifying the values in the table ",
        "similar_with": [
            778
        ]
    },
    "779": {
        "comment": "Avoid modifying the values in the table ",
        "similar_with": [
            779
        ]
    },
    "780": {
        "comment": "Avoid modifying the values in the table Dont expect it to print 0 ever ",
        "similar_with": [
            780
        ]
    },
    "781": {
        "comment": "Dont expect it to print 0 ever ",
        "similar_with": [
            781
        ]
    },
    "782": {
        "comment": "Dont expect it to print 0 ever Be sure to test cases like 1Mi ",
        "similar_with": [
            782
        ]
    },
    "783": {
        "comment": "Be sure to test cases like 1Mi ",
        "similar_with": [
            783
        ]
    },
    "784": {
        "comment": "Be sure to test cases like 1Mi Be sure to test cases like 1M ",
        "similar_with": [
            784
        ]
    },
    "785": {
        "comment": "Be sure to test cases like 1M ",
        "similar_with": [
            785
        ]
    },
    "786": {
        "comment": "Be sure to test cases like 1M Format changes ",
        "similar_with": [
            786
        ]
    },
    "787": {
        "comment": "Format changes ",
        "similar_with": [
            787
        ]
    },
    "788": {
        "comment": "Format changes Format changes ",
        "similar_with": [
            788
        ]
    },
    "789": {
        "comment": "Format changes ",
        "similar_with": [
            789
        ]
    },
    "790": {
        "comment": "Format changes ensure value is same ",
        "similar_with": [
            790
        ]
    },
    "791": {
        "comment": "ensure value is same ",
        "similar_with": [
            791
        ]
    },
    "792": {
        "comment": "Copyright 2015 The Kubernetes Authors All rights reserved ",
        "similar_with": [
            792
        ]
    },
    "793": {
        "comment": "Copyright 2015 The Kubernetes Authors All rights reserved Licensed under the Apache License Version 20 the License ",
        "similar_with": [
            793
        ]
    },
    "794": {
        "comment": "Licensed under the Apache License Version 20 the License ",
        "similar_with": [
            794
        ]
    },
    "795": {
        "comment": "Licensed under the Apache License Version 20 the License you may not use this file except in compliance with the License ",
        "similar_with": [
            795
        ]
    },
    "796": {
        "comment": "you may not use this file except in compliance with the License ",
        "similar_with": [
            796
        ]
    },
    "797": {
        "comment": "you may not use this file except in compliance with the License You may obtain a copy of the License at ",
        "similar_with": [
            797
        ]
    },
    "798": {
        "comment": "You may obtain a copy of the License at ",
        "similar_with": [
            798
        ]
    },
    "799": {
        "comment": "You may obtain a copy of the License at httpwwwapacheorglicensesLICENSE20 ",
        "similar_with": [
            799
        ]
    },
    "800": {
        "comment": "httpwwwapacheorglicensesLICENSE20 ",
        "similar_with": [
            800
        ]
    },
    "801": {
        "comment": "httpwwwapacheorglicensesLICENSE20 Unless required by applicable law or agreed to in writing software ",
        "similar_with": [
            801
        ]
    },
    "802": {
        "comment": "Unless required by applicable law or agreed to in writing software ",
        "similar_with": [
            802
        ]
    },
    "803": {
        "comment": "Unless required by applicable law or agreed to in writing software distributed under the License is distributed on an AS IS BASIS ",
        "similar_with": [
            803
        ]
    },
    "804": {
        "comment": "distributed under the License is distributed on an AS IS BASIS ",
        "similar_with": [
            804
        ]
    },
    "805": {
        "comment": "distributed under the License is distributed on an AS IS BASIS WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND either express or implied ",
        "similar_with": [
            805
        ]
    },
    "806": {
        "comment": "WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND either express or implied ",
        "similar_with": [
            806
        ]
    },
    "807": {
        "comment": "WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND either express or implied See the License for the specific language governing permissions and ",
        "similar_with": [
            807
        ]
    },
    "808": {
        "comment": "See the License for the specific language governing permissions and ",
        "similar_with": [
            808
        ]
    },
    "809": {
        "comment": "See the License for the specific language governing permissions and limitations under the License ",
        "similar_with": [
            809
        ]
    },
    "810": {
        "comment": "limitations under the License ",
        "similar_with": [
            810
        ]
    },
    "811": {
        "comment": "limitations under the License remain scale ",
        "similar_with": [
            811
        ]
    },
    "812": {
        "comment": "remain scale ",
        "similar_with": [
            812
        ]
    },
    "813": {
        "comment": "remain scale scale down ",
        "similar_with": [
            813
        ]
    },
    "814": {
        "comment": "scale down ",
        "similar_with": [
            814
        ]
    },
    "815": {
        "comment": "scale down always round up ",
        "similar_with": [
            815
        ]
    },
    "816": {
        "comment": "always round up ",
        "similar_with": [
            816
        ]
    },
    "817": {
        "comment": "always round up large scaled value does not lose precision ",
        "similar_with": [
            817
        ]
    },
    "818": {
        "comment": "large scaled value does not lose precision ",
        "similar_with": [
            818
        ]
    },
    "819": {
        "comment": "large scaled value does not lose precision large intermidiate result ",
        "similar_with": [
            819
        ]
    },
    "820": {
        "comment": "large intermidiate result ",
        "similar_with": [
            820
        ]
    },
    "821": {
        "comment": "large intermidiate result scale up ",
        "similar_with": [
            821
        ]
    },
    "822": {
        "comment": "scale up ",
        "similar_with": [
            822
        ]
    },
    "823": {
        "comment": "Copyright 2016 The Kubernetes Authors All rights reserved ",
        "similar_with": [
            823
        ]
    },
    "824": {
        "comment": "Copyright 2016 The Kubernetes Authors All rights reserved Licensed under the Apache License Version 20 the License ",
        "similar_with": [
            824
        ]
    },
    "825": {
        "comment": "Licensed under the Apache License Version 20 the License ",
        "similar_with": [
            825
        ]
    },
    "826": {
        "comment": "Licensed under the Apache License Version 20 the License you may not use this file except in compliance with the License ",
        "similar_with": [
            826
        ]
    },
    "827": {
        "comment": "you may not use this file except in compliance with the License ",
        "similar_with": [
            827
        ]
    },
    "828": {
        "comment": "you may not use this file except in compliance with the License You may obtain a copy of the License at ",
        "similar_with": [
            828
        ]
    },
    "829": {
        "comment": "You may obtain a copy of the License at ",
        "similar_with": [
            829
        ]
    },
    "830": {
        "comment": "You may obtain a copy of the License at httpwwwapacheorglicensesLICENSE20 ",
        "similar_with": [
            830
        ]
    },
    "831": {
        "comment": "httpwwwapacheorglicensesLICENSE20 ",
        "similar_with": [
            831
        ]
    },
    "832": {
        "comment": "httpwwwapacheorglicensesLICENSE20 Unless required by applicable law or agreed to in writing software ",
        "similar_with": [
            832
        ]
    },
    "833": {
        "comment": "Unless required by applicable law or agreed to in writing software ",
        "similar_with": [
            833
        ]
    },
    "834": {
        "comment": "Unless required by applicable law or agreed to in writing software distributed under the License is distributed on an AS IS BASIS ",
        "similar_with": [
            834
        ]
    },
    "835": {
        "comment": "distributed under the License is distributed on an AS IS BASIS ",
        "similar_with": [
            835
        ]
    },
    "836": {
        "comment": "distributed under the License is distributed on an AS IS BASIS WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND either express or implied ",
        "similar_with": [
            836
        ]
    },
    "837": {
        "comment": "WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND either express or implied ",
        "similar_with": [
            837
        ]
    },
    "838": {
        "comment": "WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND either express or implied See the License for the specific language governing permissions and ",
        "similar_with": [
            838
        ]
    },
    "839": {
        "comment": "See the License for the specific language governing permissions and ",
        "similar_with": [
            839
        ]
    },
    "840": {
        "comment": "See the License for the specific language governing permissions and limitations under the License ",
        "similar_with": [
            840
        ]
    },
    "841": {
        "comment": "limitations under the License ",
        "similar_with": [
            841
        ]
    },
    "842": {
        "comment": "limitations under the License Code generated by protocgengogo ",
        "similar_with": [
            842
        ]
    },
    "843": {
        "comment": "Code generated by protocgengogo ",
        "similar_with": [
            843
        ]
    },
    "844": {
        "comment": "Code generated by protocgengogo source k8siokubernetespkgapiresourcegeneratedproto ",
        "similar_with": [
            844
        ]
    },
    "845": {
        "comment": "source k8siokubernetespkgapiresourcegeneratedproto ",
        "similar_with": [
            845
        ]
    },
    "846": {
        "comment": "source k8siokubernetespkgapiresourcegeneratedproto DO NOT EDIT ",
        "similar_with": [
            846
        ]
    },
    "847": {
        "comment": "DO NOT EDIT ",
        "similar_with": [
            847
        ]
    },
    "848": {
        "comment": "DO NOT EDIT Package resource is a generated protocol buffer package ",
        "similar_with": [
            848
        ]
    },
    "849": {
        "comment": "Package resource is a generated protocol buffer package ",
        "similar_with": [
            849
        ]
    },
    "850": {
        "comment": "Package resource is a generated protocol buffer package It is generated from these files ",
        "similar_with": [
            850
        ]
    },
    "851": {
        "comment": "It is generated from these files ",
        "similar_with": [
            851
        ]
    },
    "852": {
        "comment": "It is generated from these files k8siokubernetespkgapiresourcegeneratedproto ",
        "similar_with": [
            852
        ]
    },
    "853": {
        "comment": "k8siokubernetespkgapiresourcegeneratedproto ",
        "similar_with": [
            853
        ]
    },
    "854": {
        "comment": "k8siokubernetespkgapiresourcegeneratedproto It has these toplevel messages ",
        "similar_with": [
            854
        ]
    },
    "855": {
        "comment": "It has these toplevel messages ",
        "similar_with": [
            855
        ]
    },
    "856": {
        "comment": "It has these toplevel messages Quantity ",
        "similar_with": [
            856
        ]
    },
    "857": {
        "comment": "Quantity ",
        "similar_with": [
            857
        ]
    },
    "858": {
        "comment": "Quantity Reference imports to suppress errors if they are not otherwise used ",
        "similar_with": [
            858
        ]
    },
    "859": {
        "comment": "Reference imports to suppress errors if they are not otherwise used ",
        "similar_with": [
            859
        ]
    },
    "860": {
        "comment": "Copyright 2015 The Kubernetes Authors All rights reserved ",
        "similar_with": [
            860
        ]
    },
    "861": {
        "comment": "Copyright 2015 The Kubernetes Authors All rights reserved Licensed under the Apache License Version 20 the License ",
        "similar_with": [
            861
        ]
    },
    "862": {
        "comment": "Licensed under the Apache License Version 20 the License ",
        "similar_with": [
            862
        ]
    },
    "863": {
        "comment": "Licensed under the Apache License Version 20 the License you may not use this file except in compliance with the License ",
        "similar_with": [
            863
        ]
    },
    "864": {
        "comment": "you may not use this file except in compliance with the License ",
        "similar_with": [
            864
        ]
    },
    "865": {
        "comment": "you may not use this file except in compliance with the License You may obtain a copy of the License at ",
        "similar_with": [
            865
        ]
    },
    "866": {
        "comment": "You may obtain a copy of the License at ",
        "similar_with": [
            866
        ]
    },
    "867": {
        "comment": "You may obtain a copy of the License at httpwwwapacheorglicensesLICENSE20 ",
        "similar_with": [
            867
        ]
    },
    "868": {
        "comment": "httpwwwapacheorglicensesLICENSE20 ",
        "similar_with": [
            868
        ]
    },
    "869": {
        "comment": "httpwwwapacheorglicensesLICENSE20 Unless required by applicable law or agreed to in writing software ",
        "similar_with": [
            869
        ]
    },
    "870": {
        "comment": "Unless required by applicable law or agreed to in writing software ",
        "similar_with": [
            870
        ]
    },
    "871": {
        "comment": "Unless required by applicable law or agreed to in writing software distributed under the License is distributed on an AS IS BASIS ",
        "similar_with": [
            871
        ]
    },
    "872": {
        "comment": "distributed under the License is distributed on an AS IS BASIS ",
        "similar_with": [
            872
        ]
    },
    "873": {
        "comment": "distributed under the License is distributed on an AS IS BASIS WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND either express or implied ",
        "similar_with": [
            873
        ]
    },
    "874": {
        "comment": "WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND either express or implied ",
        "similar_with": [
            874
        ]
    },
    "875": {
        "comment": "WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND either express or implied See the License for the specific language governing permissions and ",
        "similar_with": [
            875
        ]
    },
    "876": {
        "comment": "See the License for the specific language governing permissions and ",
        "similar_with": [
            876
        ]
    },
    "877": {
        "comment": "See the License for the specific language governing permissions and limitations under the License ",
        "similar_with": [
            877
        ]
    },
    "878": {
        "comment": "limitations under the License ",
        "similar_with": [
            878
        ]
    },
    "879": {
        "comment": "limitations under the License MarshalTo is a customized version of the generated Protobuf unmarshaler for a struct ",
        "similar_with": [
            879
        ]
    },
    "880": {
        "comment": "MarshalTo is a customized version of the generated Protobuf unmarshaler for a struct ",
        "similar_with": [
            880
        ]
    },
    "881": {
        "comment": "MarshalTo is a customized version of the generated Protobuf unmarshaler for a struct with a single string field ",
        "similar_with": [
            881
        ]
    },
    "882": {
        "comment": "with a single string field ",
        "similar_with": [
            882
        ]
    },
    "883": {
        "comment": "with a single string field BEGIN CUSTOM MARSHAL ",
        "similar_with": [
            883
        ]
    },
    "884": {
        "comment": "BEGIN CUSTOM MARSHAL ",
        "similar_with": [
            884
        ]
    },
    "885": {
        "comment": "BEGIN CUSTOM MARSHAL END CUSTOM MARSHAL ",
        "similar_with": [
            885
        ]
    },
    "886": {
        "comment": "END CUSTOM MARSHAL ",
        "similar_with": [
            886
        ]
    },
    "887": {
        "comment": "END CUSTOM MARSHAL BEGIN CUSTOM SIZE ",
        "similar_with": [
            887
        ]
    },
    "888": {
        "comment": "BEGIN CUSTOM SIZE ",
        "similar_with": [
            888
        ]
    },
    "889": {
        "comment": "BEGIN CUSTOM SIZE END CUSTOM SIZE ",
        "similar_with": [
            889
        ]
    },
    "890": {
        "comment": "END CUSTOM SIZE ",
        "similar_with": [
            890
        ]
    },
    "891": {
        "comment": "END CUSTOM SIZE Unmarshal is a customized version of the generated Protobuf unmarshaler for a struct ",
        "similar_with": [
            891
        ]
    },
    "892": {
        "comment": "Unmarshal is a customized version of the generated Protobuf unmarshaler for a struct ",
        "similar_with": [
            892
        ]
    },
    "893": {
        "comment": "Unmarshal is a customized version of the generated Protobuf unmarshaler for a struct with a single string field ",
        "similar_with": [
            893
        ]
    },
    "894": {
        "comment": "with a single string field ",
        "similar_with": [
            894
        ]
    },
    "895": {
        "comment": "with a single string field BEGIN CUSTOM DECODE ",
        "similar_with": [
            895
        ]
    },
    "896": {
        "comment": "BEGIN CUSTOM DECODE ",
        "similar_with": [
            896
        ]
    },
    "897": {
        "comment": "BEGIN CUSTOM DECODE END CUSTOM DECODE ",
        "similar_with": [
            897
        ]
    },
    "898": {
        "comment": "END CUSTOM DECODE ",
        "similar_with": [
            898
        ]
    },
    "899": {
        "comment": "Copyright 2015 The Kubernetes Authors All rights reserved ",
        "similar_with": [
            899
        ]
    },
    "900": {
        "comment": "Copyright 2015 The Kubernetes Authors All rights reserved Licensed under the Apache License Version 20 the License ",
        "similar_with": [
            900
        ]
    },
    "901": {
        "comment": "Licensed under the Apache License Version 20 the License ",
        "similar_with": [
            901
        ]
    },
    "902": {
        "comment": "Licensed under the Apache License Version 20 the License you may not use this file except in compliance with the License ",
        "similar_with": [
            902
        ]
    },
    "903": {
        "comment": "you may not use this file except in compliance with the License ",
        "similar_with": [
            903
        ]
    },
    "904": {
        "comment": "you may not use this file except in compliance with the License You may obtain a copy of the License at ",
        "similar_with": [
            904
        ]
    },
    "905": {
        "comment": "You may obtain a copy of the License at ",
        "similar_with": [
            905
        ]
    },
    "906": {
        "comment": "You may obtain a copy of the License at httpwwwapacheorglicensesLICENSE20 ",
        "similar_with": [
            906
        ]
    },
    "907": {
        "comment": "httpwwwapacheorglicensesLICENSE20 ",
        "similar_with": [
            907
        ]
    },
    "908": {
        "comment": "httpwwwapacheorglicensesLICENSE20 Unless required by applicable law or agreed to in writing software ",
        "similar_with": [
            908
        ]
    },
    "909": {
        "comment": "Unless required by applicable law or agreed to in writing software ",
        "similar_with": [
            909
        ]
    },
    "910": {
        "comment": "Unless required by applicable law or agreed to in writing software distributed under the License is distributed on an AS IS BASIS ",
        "similar_with": [
            910
        ]
    },
    "911": {
        "comment": "distributed under the License is distributed on an AS IS BASIS ",
        "similar_with": [
            911
        ]
    },
    "912": {
        "comment": "distributed under the License is distributed on an AS IS BASIS WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND either express or implied ",
        "similar_with": [
            912
        ]
    },
    "913": {
        "comment": "WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND either express or implied ",
        "similar_with": [
            913
        ]
    },
    "914": {
        "comment": "WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND either express or implied See the License for the specific language governing permissions and ",
        "similar_with": [
            914
        ]
    },
    "915": {
        "comment": "See the License for the specific language governing permissions and ",
        "similar_with": [
            915
        ]
    },
    "916": {
        "comment": "See the License for the specific language governing permissions and limitations under the License ",
        "similar_with": [
            916
        ]
    },
    "917": {
        "comment": "limitations under the License ",
        "similar_with": [
            917
        ]
    },
    "918": {
        "comment": "limitations under the License A sync pool to reduce allocation ",
        "similar_with": [
            918
        ]
    },
    "919": {
        "comment": "A sync pool to reduce allocation ",
        "similar_with": [
            919
        ]
    },
    "920": {
        "comment": "A sync pool to reduce allocation scaledValue scales given unscaled value from scale to new Scale and returns ",
        "similar_with": [
            920
        ]
    },
    "921": {
        "comment": "scaledValue scales given unscaled value from scale to new Scale and returns ",
        "similar_with": [
            921
        ]
    },
    "922": {
        "comment": "scaledValue scales given unscaled value from scale to new Scale and returns an int64 It ALWAYS rounds up the result when scale down The final result might ",
        "similar_with": [
            922
        ]
    },
    "923": {
        "comment": "an int64 It ALWAYS rounds up the result when scale down The final result might ",
        "similar_with": [
            923
        ]
    },
    "924": {
        "comment": "an int64 It ALWAYS rounds up the result when scale down The final result might overflow ",
        "similar_with": [
            924
        ]
    },
    "925": {
        "comment": "overflow ",
        "similar_with": [
            925
        ]
    },
    "926": {
        "comment": "overflow scale newScale represents the scale of the unscaled decimal ",
        "similar_with": [
            926
        ]
    },
    "927": {
        "comment": "scale newScale represents the scale of the unscaled decimal ",
        "similar_with": [
            927
        ]
    },
    "928": {
        "comment": "scale newScale represents the scale of the unscaled decimal The mathematical value of the decimal is unscaled  10scale ",
        "similar_with": [
            928
        ]
    },
    "929": {
        "comment": "The mathematical value of the decimal is unscaled  10scale ",
        "similar_with": [
            929
        ]
    },
    "930": {
        "comment": "The mathematical value of the decimal is unscaled  10scale Handle scale up ",
        "similar_with": [
            930
        ]
    },
    "931": {
        "comment": "Handle scale up ",
        "similar_with": [
            931
        ]
    },
    "932": {
        "comment": "Handle scale up This is an easy case we do not need to care about rounding and overflow ",
        "similar_with": [
            932
        ]
    },
    "933": {
        "comment": "This is an easy case we do not need to care about rounding and overflow ",
        "similar_with": [
            933
        ]
    },
    "934": {
        "comment": "This is an easy case we do not need to care about rounding and overflow If any intermediate operation causes overflow the result will overflow ",
        "similar_with": [
            934
        ]
    },
    "935": {
        "comment": "If any intermediate operation causes overflow the result will overflow ",
        "similar_with": [
            935
        ]
    },
    "936": {
        "comment": "If any intermediate operation causes overflow the result will overflow Handle scale down ",
        "similar_with": [
            936
        ]
    },
    "937": {
        "comment": "Handle scale down ",
        "similar_with": [
            937
        ]
    },
    "938": {
        "comment": "Handle scale down We have to be careful about the intermediate operations ",
        "similar_with": [
            938
        ]
    },
    "939": {
        "comment": "We have to be careful about the intermediate operations ",
        "similar_with": [
            939
        ]
    },
    "940": {
        "comment": "We have to be careful about the intermediate operations fast path when unscaled  maxInt64 and exp10dif  maxInt64 ",
        "similar_with": [
            940
        ]
    },
    "941": {
        "comment": "fast path when unscaled  maxInt64 and exp10dif  maxInt64 ",
        "similar_with": [
            941
        ]
    },
    "942": {
        "comment": "fast path when unscaled  maxInt64 and exp10dif  maxInt64 We should only convert back to int64 when getting the result ",
        "similar_with": [
            942
        ]
    },
    "943": {
        "comment": "We should only convert back to int64 when getting the result ",
        "similar_with": [
            943
        ]
    },
    "944": {
        "comment": "We should only convert back to int64 when getting the result divisor  10dif ",
        "similar_with": [
            944
        ]
    },
    "945": {
        "comment": "divisor  10dif ",
        "similar_with": [
            945
        ]
    },
    "946": {
        "comment": "divisor  10dif TODO create loop up table if exp costs too much ",
        "similar_with": [
            946
        ]
    },
    "947": {
        "comment": "TODO create loop up table if exp costs too much ",
        "similar_with": [
            947
        ]
    },
    "948": {
        "comment": "TODO create loop up table if exp costs too much reuse exp ",
        "similar_with": [
            948
        ]
    },
    "949": {
        "comment": "reuse exp ",
        "similar_with": [
            949
        ]
    },
    "950": {
        "comment": "reuse exp result  unscaled  divisor ",
        "similar_with": [
            950
        ]
    },
    "951": {
        "comment": "result  unscaled  divisor ",
        "similar_with": [
            951
        ]
    },
    "952": {
        "comment": "result  unscaled  divisor remainder  unscaled  divisor ",
        "similar_with": [
            952
        ]
    },
    "953": {
        "comment": "remainder  unscaled  divisor ",
        "similar_with": [
            953
        ]
    },
    "954": {
        "comment": "Copyright 2014 The Kubernetes Authors All rights reserved ",
        "similar_with": [
            954
        ]
    },
    "955": {
        "comment": "Copyright 2014 The Kubernetes Authors All rights reserved Licensed under the Apache License Version 20 the License ",
        "similar_with": [
            955
        ]
    },
    "956": {
        "comment": "Licensed under the Apache License Version 20 the License ",
        "similar_with": [
            956
        ]
    },
    "957": {
        "comment": "Licensed under the Apache License Version 20 the License you may not use this file except in compliance with the License ",
        "similar_with": [
            957
        ]
    },
    "958": {
        "comment": "you may not use this file except in compliance with the License ",
        "similar_with": [
            958
        ]
    },
    "959": {
        "comment": "you may not use this file except in compliance with the License You may obtain a copy of the License at ",
        "similar_with": [
            959
        ]
    },
    "960": {
        "comment": "You may obtain a copy of the License at ",
        "similar_with": [
            960
        ]
    },
    "961": {
        "comment": "You may obtain a copy of the License at httpwwwapacheorglicensesLICENSE20 ",
        "similar_with": [
            961
        ]
    },
    "962": {
        "comment": "httpwwwapacheorglicensesLICENSE20 ",
        "similar_with": [
            962
        ]
    },
    "963": {
        "comment": "httpwwwapacheorglicensesLICENSE20 Unless required by applicable law or agreed to in writing software ",
        "similar_with": [
            963
        ]
    },
    "964": {
        "comment": "Unless required by applicable law or agreed to in writing software ",
        "similar_with": [
            964
        ]
    },
    "965": {
        "comment": "Unless required by applicable law or agreed to in writing software distributed under the License is distributed on an AS IS BASIS ",
        "similar_with": [
            965
        ]
    },
    "966": {
        "comment": "distributed under the License is distributed on an AS IS BASIS ",
        "similar_with": [
            966
        ]
    },
    "967": {
        "comment": "distributed under the License is distributed on an AS IS BASIS WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND either express or implied ",
        "similar_with": [
            967
        ]
    },
    "968": {
        "comment": "WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND either express or implied ",
        "similar_with": [
            968
        ]
    },
    "969": {
        "comment": "WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND either express or implied See the License for the specific language governing permissions and ",
        "similar_with": [
            969
        ]
    },
    "970": {
        "comment": "See the License for the specific language governing permissions and ",
        "similar_with": [
            970
        ]
    },
    "971": {
        "comment": "See the License for the specific language governing permissions and limitations under the License ",
        "similar_with": [
            971
        ]
    },
    "972": {
        "comment": "limitations under the License ",
        "similar_with": [
            972
        ]
    },
    "973": {
        "comment": "limitations under the License addition is commutative ",
        "similar_with": [
            973
        ]
    },
    "974": {
        "comment": "addition is commutative ",
        "similar_with": [
            974
        ]
    },
    "975": {
        "comment": "Copyright 2016 The Kubernetes Authors All rights reserved ",
        "similar_with": [
            975
        ]
    },
    "976": {
        "comment": "Copyright 2016 The Kubernetes Authors All rights reserved Licensed under the Apache License Version 20 the License ",
        "similar_with": [
            976
        ]
    },
    "977": {
        "comment": "Licensed under the Apache License Version 20 the License ",
        "similar_with": [
            977
        ]
    },
    "978": {
        "comment": "Licensed under the Apache License Version 20 the License you may not use this file except in compliance with the License ",
        "similar_with": [
            978
        ]
    },
    "979": {
        "comment": "you may not use this file except in compliance with the License ",
        "similar_with": [
            979
        ]
    },
    "980": {
        "comment": "you may not use this file except in compliance with the License You may obtain a copy of the License at ",
        "similar_with": [
            980
        ]
    },
    "981": {
        "comment": "You may obtain a copy of the License at ",
        "similar_with": [
            981
        ]
    },
    "982": {
        "comment": "You may obtain a copy of the License at httpwwwapacheorglicensesLICENSE20 ",
        "similar_with": [
            982
        ]
    },
    "983": {
        "comment": "httpwwwapacheorglicensesLICENSE20 ",
        "similar_with": [
            983
        ]
    },
    "984": {
        "comment": "httpwwwapacheorglicensesLICENSE20 Unless required by applicable law or agreed to in writing software ",
        "similar_with": [
            984
        ]
    },
    "985": {
        "comment": "Unless required by applicable law or agreed to in writing software ",
        "similar_with": [
            985
        ]
    },
    "986": {
        "comment": "Unless required by applicable law or agreed to in writing software distributed under the License is distributed on an AS IS BASIS ",
        "similar_with": [
            986
        ]
    },
    "987": {
        "comment": "distributed under the License is distributed on an AS IS BASIS ",
        "similar_with": [
            987
        ]
    },
    "988": {
        "comment": "distributed under the License is distributed on an AS IS BASIS WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND either express or implied ",
        "similar_with": [
            988
        ]
    },
    "989": {
        "comment": "WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND either express or implied ",
        "similar_with": [
            989
        ]
    },
    "990": {
        "comment": "WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND either express or implied See the License for the specific language governing permissions and ",
        "similar_with": [
            990
        ]
    },
    "991": {
        "comment": "See the License for the specific language governing permissions and ",
        "similar_with": [
            991
        ]
    },
    "992": {
        "comment": "See the License for the specific language governing permissions and limitations under the License ",
        "similar_with": [
            992
        ]
    },
    "993": {
        "comment": "limitations under the License ",
        "similar_with": [
            993
        ]
    },
    "994": {
        "comment": "Copyright 2014 The Kubernetes Authors All rights reserved ",
        "similar_with": [
            994
        ]
    },
    "995": {
        "comment": "Copyright 2014 The Kubernetes Authors All rights reserved Licensed under the Apache License Version 20 the License ",
        "similar_with": [
            995
        ]
    },
    "996": {
        "comment": "Licensed under the Apache License Version 20 the License ",
        "similar_with": [
            996
        ]
    },
    "997": {
        "comment": "Licensed under the Apache License Version 20 the License you may not use this file except in compliance with the License ",
        "similar_with": [
            997
        ]
    },
    "998": {
        "comment": "you may not use this file except in compliance with the License ",
        "similar_with": [
            998
        ]
    },
    "999": {
        "comment": "you may not use this file except in compliance with the License You may obtain a copy of the License at ",
        "similar_with": [
            999
        ]
    },
    "1000": {
        "comment": "You may obtain a copy of the License at ",
        "similar_with": [
            1000
        ]
    },
    "1001": {
        "comment": "You may obtain a copy of the License at httpwwwapacheorglicensesLICENSE20 ",
        "similar_with": [
            1001
        ]
    },
    "1002": {
        "comment": "httpwwwapacheorglicensesLICENSE20 ",
        "similar_with": [
            1002
        ]
    },
    "1003": {
        "comment": "httpwwwapacheorglicensesLICENSE20 Unless required by applicable law or agreed to in writing software ",
        "similar_with": [
            1003
        ]
    },
    "1004": {
        "comment": "Unless required by applicable law or agreed to in writing software ",
        "similar_with": [
            1004
        ]
    },
    "1005": {
        "comment": "Unless required by applicable law or agreed to in writing software distributed under the License is distributed on an AS IS BASIS ",
        "similar_with": [
            1005
        ]
    },
    "1006": {
        "comment": "distributed under the License is distributed on an AS IS BASIS ",
        "similar_with": [
            1006
        ]
    },
    "1007": {
        "comment": "distributed under the License is distributed on an AS IS BASIS WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND either express or implied ",
        "similar_with": [
            1007
        ]
    },
    "1008": {
        "comment": "WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND either express or implied ",
        "similar_with": [
            1008
        ]
    },
    "1009": {
        "comment": "WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND either express or implied See the License for the specific language governing permissions and ",
        "similar_with": [
            1009
        ]
    },
    "1010": {
        "comment": "See the License for the specific language governing permissions and ",
        "similar_with": [
            1010
        ]
    },
    "1011": {
        "comment": "See the License for the specific language governing permissions and limitations under the License ",
        "similar_with": [
            1011
        ]
    },
    "1012": {
        "comment": "limitations under the License ",
        "similar_with": [
            1012
        ]
    },
    "1013": {
        "comment": "limitations under the License Output ",
        "similar_with": [
            1013
        ]
    },
    "1014": {
        "comment": "Output ",
        "similar_with": [
            1014
        ]
    },
    "1015": {
        "comment": "Output memorySize  5Gi ",
        "similar_with": [
            1015
        ]
    },
    "1016": {
        "comment": "memorySize  5Gi ",
        "similar_with": [
            1016
        ]
    },
    "1017": {
        "comment": "memorySize  5Gi diskSize  5G ",
        "similar_with": [
            1017
        ]
    },
    "1018": {
        "comment": "diskSize  5G ",
        "similar_with": [
            1018
        ]
    },
    "1019": {
        "comment": "diskSize  5G cores  5300m ",
        "similar_with": [
            1019
        ]
    },
    "1020": {
        "comment": "cores  5300m ",
        "similar_with": [
            1020
        ]
    },
    "1021": {
        "comment": "cores  5300m Output ",
        "similar_with": [
            1021
        ]
    },
    "1022": {
        "comment": "Output ",
        "similar_with": [
            1022
        ]
    },
    "1023": {
        "comment": "Output memorySize  5368709120 BinarySI ",
        "similar_with": [
            1023
        ]
    },
    "1024": {
        "comment": "memorySize  5368709120 BinarySI ",
        "similar_with": [
            1024
        ]
    },
    "1025": {
        "comment": "memorySize  5368709120 BinarySI diskSize  5000000000 DecimalSI ",
        "similar_with": [
            1025
        ]
    },
    "1026": {
        "comment": "diskSize  5000000000 DecimalSI ",
        "similar_with": [
            1026
        ]
    },
    "1027": {
        "comment": "diskSize  5000000000 DecimalSI milliCores  5300 DecimalSI ",
        "similar_with": [
            1027
        ]
    },
    "1028": {
        "comment": "milliCores  5300 DecimalSI ",
        "similar_with": [
            1028
        ]
    },
    "1029": {
        "comment": "milliCores  5300 DecimalSI milliCores  5400 DecimalSI ",
        "similar_with": [
            1029
        ]
    },
    "1030": {
        "comment": "milliCores  5400 DecimalSI ",
        "similar_with": [
            1030
        ]
    },
    "1031": {
        "comment": "Copyright 2014 The Kubernetes Authors All rights reserved ",
        "similar_with": [
            1031
        ]
    },
    "1032": {
        "comment": "Copyright 2014 The Kubernetes Authors All rights reserved Licensed under the Apache License Version 20 the License ",
        "similar_with": [
            1032
        ]
    },
    "1033": {
        "comment": "Licensed under the Apache License Version 20 the License ",
        "similar_with": [
            1033
        ]
    },
    "1034": {
        "comment": "Licensed under the Apache License Version 20 the License you may not use this file except in compliance with the License ",
        "similar_with": [
            1034
        ]
    },
    "1035": {
        "comment": "you may not use this file except in compliance with the License ",
        "similar_with": [
            1035
        ]
    },
    "1036": {
        "comment": "you may not use this file except in compliance with the License You may obtain a copy of the License at ",
        "similar_with": [
            1036
        ]
    },
    "1037": {
        "comment": "You may obtain a copy of the License at ",
        "similar_with": [
            1037
        ]
    },
    "1038": {
        "comment": "You may obtain a copy of the License at httpwwwapacheorglicensesLICENSE20 ",
        "similar_with": [
            1038
        ]
    },
    "1039": {
        "comment": "httpwwwapacheorglicensesLICENSE20 ",
        "similar_with": [
            1039
        ]
    },
    "1040": {
        "comment": "httpwwwapacheorglicensesLICENSE20 Unless required by applicable law or agreed to in writing software ",
        "similar_with": [
            1040
        ]
    },
    "1041": {
        "comment": "Unless required by applicable law or agreed to in writing software ",
        "similar_with": [
            1041
        ]
    },
    "1042": {
        "comment": "Unless required by applicable law or agreed to in writing software distributed under the License is distributed on an AS IS BASIS ",
        "similar_with": [
            1042
        ]
    },
    "1043": {
        "comment": "distributed under the License is distributed on an AS IS BASIS ",
        "similar_with": [
            1043
        ]
    },
    "1044": {
        "comment": "distributed under the License is distributed on an AS IS BASIS WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND either express or implied ",
        "similar_with": [
            1044
        ]
    },
    "1045": {
        "comment": "WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND either express or implied ",
        "similar_with": [
            1045
        ]
    },
    "1046": {
        "comment": "WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND either express or implied See the License for the specific language governing permissions and ",
        "similar_with": [
            1046
        ]
    },
    "1047": {
        "comment": "See the License for the specific language governing permissions and ",
        "similar_with": [
            1047
        ]
    },
    "1048": {
        "comment": "See the License for the specific language governing permissions and limitations under the License ",
        "similar_with": [
            1048
        ]
    },
    "1049": {
        "comment": "limitations under the License ",
        "similar_with": [
            1049
        ]
    },
    "1050": {
        "comment": "limitations under the License addition is commutative ",
        "similar_with": [
            1050
        ]
    },
    "1051": {
        "comment": "addition is commutative ",
        "similar_with": [
            1051
        ]
    },
    "1052": {
        "comment": "addition is commutative multiplication is commutative ",
        "similar_with": [
            1052
        ]
    },
    "1053": {
        "comment": "multiplication is commutative ",
        "similar_with": [
            1053
        ]
    },
    "1054": {
        "comment": "multiplication is commutative negative scale is undefined behavior ",
        "similar_with": [
            1054
        ]
    },
    "1055": {
        "comment": "negative scale is undefined behavior ",
        "similar_with": [
            1055
        ]
    },
    "1056": {
        "comment": "Copyright 2014 The Kubernetes Authors All rights reserved ",
        "similar_with": [
            1056
        ]
    },
    "1057": {
        "comment": "Copyright 2014 The Kubernetes Authors All rights reserved Licensed under the Apache License Version 20 the License ",
        "similar_with": [
            1057
        ]
    },
    "1058": {
        "comment": "Licensed under the Apache License Version 20 the License ",
        "similar_with": [
            1058
        ]
    },
    "1059": {
        "comment": "Licensed under the Apache License Version 20 the License you may not use this file except in compliance with the License ",
        "similar_with": [
            1059
        ]
    },
    "1060": {
        "comment": "you may not use this file except in compliance with the License ",
        "similar_with": [
            1060
        ]
    },
    "1061": {
        "comment": "you may not use this file except in compliance with the License You may obtain a copy of the License at ",
        "similar_with": [
            1061
        ]
    },
    "1062": {
        "comment": "You may obtain a copy of the License at ",
        "similar_with": [
            1062
        ]
    },
    "1063": {
        "comment": "You may obtain a copy of the License at httpwwwapacheorglicensesLICENSE20 ",
        "similar_with": [
            1063
        ]
    },
    "1064": {
        "comment": "httpwwwapacheorglicensesLICENSE20 ",
        "similar_with": [
            1064
        ]
    },
    "1065": {
        "comment": "httpwwwapacheorglicensesLICENSE20 Unless required by applicable law or agreed to in writing software ",
        "similar_with": [
            1065
        ]
    },
    "1066": {
        "comment": "Unless required by applicable law or agreed to in writing software ",
        "similar_with": [
            1066
        ]
    },
    "1067": {
        "comment": "Unless required by applicable law or agreed to in writing software distributed under the License is distributed on an AS IS BASIS ",
        "similar_with": [
            1067
        ]
    },
    "1068": {
        "comment": "distributed under the License is distributed on an AS IS BASIS ",
        "similar_with": [
            1068
        ]
    },
    "1069": {
        "comment": "distributed under the License is distributed on an AS IS BASIS WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND either express or implied ",
        "similar_with": [
            1069
        ]
    },
    "1070": {
        "comment": "WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND either express or implied ",
        "similar_with": [
            1070
        ]
    },
    "1071": {
        "comment": "WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND either express or implied See the License for the specific language governing permissions and ",
        "similar_with": [
            1071
        ]
    },
    "1072": {
        "comment": "See the License for the specific language governing permissions and ",
        "similar_with": [
            1072
        ]
    },
    "1073": {
        "comment": "See the License for the specific language governing permissions and limitations under the License ",
        "similar_with": [
            1073
        ]
    },
    "1074": {
        "comment": "limitations under the License ",
        "similar_with": [
            1074
        ]
    },
    "1075": {
        "comment": "limitations under the License suffixer can interpret and construct suffixes ",
        "similar_with": [
            1075
        ]
    },
    "1076": {
        "comment": "suffixer can interpret and construct suffixes ",
        "similar_with": [
            1076
        ]
    },
    "1077": {
        "comment": "suffixer can interpret and construct suffixes quantitySuffixer handles suffixes for all three formats that quantity ",
        "similar_with": [
            1077
        ]
    },
    "1078": {
        "comment": "quantitySuffixer handles suffixes for all three formats that quantity ",
        "similar_with": [
            1078
        ]
    },
    "1079": {
        "comment": "quantitySuffixer handles suffixes for all three formats that quantity can handle ",
        "similar_with": [
            1079
        ]
    },
    "1080": {
        "comment": "can handle ",
        "similar_with": [
            1080
        ]
    },
    "1081": {
        "comment": "can handle IMPORTANT if you change this section you must change fastLookup ",
        "similar_with": [
            1081
        ]
    },
    "1082": {
        "comment": "IMPORTANT if you change this section you must change fastLookup ",
        "similar_with": [
            1082
        ]
    },
    "1083": {
        "comment": "IMPORTANT if you change this section you must change fastLookup Dont emit an error when trying to produce ",
        "similar_with": [
            1083
        ]
    },
    "1084": {
        "comment": "Dont emit an error when trying to produce ",
        "similar_with": [
            1084
        ]
    },
    "1085": {
        "comment": "Dont emit an error when trying to produce a suffix for 20 ",
        "similar_with": [
            1085
        ]
    },
    "1086": {
        "comment": "a suffix for 20 ",
        "similar_with": [
            1086
        ]
    },
    "1087": {
        "comment": "a suffix for 20 Try lookup tables first ",
        "similar_with": [
            1087
        ]
    },
    "1088": {
        "comment": "Try lookup tables first ",
        "similar_with": [
            1088
        ]
    },
    "1089": {
        "comment": "Copyright 2014 The Kubernetes Authors All rights reserved ",
        "similar_with": [
            1089
        ]
    },
    "1090": {
        "comment": "Copyright 2014 The Kubernetes Authors All rights reserved Licensed under the Apache License Version 20 the License ",
        "similar_with": [
            1090
        ]
    },
    "1091": {
        "comment": "Licensed under the Apache License Version 20 the License ",
        "similar_with": [
            1091
        ]
    },
    "1092": {
        "comment": "Licensed under the Apache License Version 20 the License you may not use this file except in compliance with the License ",
        "similar_with": [
            1092
        ]
    },
    "1093": {
        "comment": "you may not use this file except in compliance with the License ",
        "similar_with": [
            1093
        ]
    },
    "1094": {
        "comment": "you may not use this file except in compliance with the License You may obtain a copy of the License at ",
        "similar_with": [
            1094
        ]
    },
    "1095": {
        "comment": "You may obtain a copy of the License at ",
        "similar_with": [
            1095
        ]
    },
    "1096": {
        "comment": "You may obtain a copy of the License at httpwwwapacheorglicensesLICENSE20 ",
        "similar_with": [
            1096
        ]
    },
    "1097": {
        "comment": "httpwwwapacheorglicensesLICENSE20 ",
        "similar_with": [
            1097
        ]
    },
    "1098": {
        "comment": "httpwwwapacheorglicensesLICENSE20 Unless required by applicable law or agreed to in writing software ",
        "similar_with": [
            1098
        ]
    },
    "1099": {
        "comment": "Unless required by applicable law or agreed to in writing software ",
        "similar_with": [
            1099
        ]
    },
    "1100": {
        "comment": "Unless required by applicable law or agreed to in writing software distributed under the License is distributed on an AS IS BASIS ",
        "similar_with": [
            1100
        ]
    },
    "1101": {
        "comment": "distributed under the License is distributed on an AS IS BASIS ",
        "similar_with": [
            1101
        ]
    },
    "1102": {
        "comment": "distributed under the License is distributed on an AS IS BASIS WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND either express or implied ",
        "similar_with": [
            1102
        ]
    },
    "1103": {
        "comment": "WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND either express or implied ",
        "similar_with": [
            1103
        ]
    },
    "1104": {
        "comment": "WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND either express or implied See the License for the specific language governing permissions and ",
        "similar_with": [
            1104
        ]
    },
    "1105": {
        "comment": "See the License for the specific language governing permissions and ",
        "similar_with": [
            1105
        ]
    },
    "1106": {
        "comment": "See the License for the specific language governing permissions and limitations under the License ",
        "similar_with": [
            1106
        ]
    },
    "1107": {
        "comment": "limitations under the License ",
        "similar_with": [
            1107
        ]
    },
    "1108": {
        "comment": "limitations under the License Quantity is a fixedpoint representation of a number ",
        "similar_with": [
            1108
        ]
    },
    "1109": {
        "comment": "Quantity is a fixedpoint representation of a number ",
        "similar_with": [
            1109
        ]
    },
    "1110": {
        "comment": "Quantity is a fixedpoint representation of a number It provides convenient marshalingunmarshaling in JSON and YAML ",
        "similar_with": [
            1110
        ]
    },
    "1111": {
        "comment": "It provides convenient marshalingunmarshaling in JSON and YAML ",
        "similar_with": [
            1111
        ]
    },
    "1112": {
        "comment": "It provides convenient marshalingunmarshaling in JSON and YAML in addition to String and Int64 accessors ",
        "similar_with": [
            1112
        ]
    },
    "1113": {
        "comment": "in addition to String and Int64 accessors ",
        "similar_with": [
            1113
        ]
    },
    "1114": {
        "comment": "in addition to String and Int64 accessors The serialization format is ",
        "similar_with": [
            1114
        ]
    },
    "1115": {
        "comment": "The serialization format is ",
        "similar_with": [
            1115
        ]
    },
    "1116": {
        "comment": "The serialization format is quantity         signedNumbersuffix ",
        "similar_with": [
            1116
        ]
    },
    "1117": {
        "comment": "quantity         signedNumbersuffix ",
        "similar_with": [
            1117
        ]
    },
    "1118": {
        "comment": "quantity         signedNumbersuffix Note that suffix may be empty from the  case in decimalSI ",
        "similar_with": [
            1118
        ]
    },
    "1119": {
        "comment": "Note that suffix may be empty from the  case in decimalSI ",
        "similar_with": [
            1119
        ]
    },
    "1120": {
        "comment": "Note that suffix may be empty from the  case in decimalSI digit            0  1    9 ",
        "similar_with": [
            1120
        ]
    },
    "1121": {
        "comment": "digit            0  1    9 ",
        "similar_with": [
            1121
        ]
    },
    "1122": {
        "comment": "digit            0  1    9 digits           digit  digitdigits ",
        "similar_with": [
            1122
        ]
    },
    "1123": {
        "comment": "digits           digit  digitdigits ",
        "similar_with": [
            1123
        ]
    },
    "1124": {
        "comment": "digits           digit  digitdigits number           digits  digitsdigits  digits  digits ",
        "similar_with": [
            1124
        ]
    },
    "1125": {
        "comment": "number           digits  digitsdigits  digits  digits ",
        "similar_with": [
            1125
        ]
    },
    "1126": {
        "comment": "number           digits  digitsdigits  digits  digits sign                ",
        "similar_with": [
            1126
        ]
    },
    "1127": {
        "comment": "sign                ",
        "similar_with": [
            1127
        ]
    },
    "1128": {
        "comment": "sign                signedNumber     number  signnumber ",
        "similar_with": [
            1128
        ]
    },
    "1129": {
        "comment": "signedNumber     number  signnumber ",
        "similar_with": [
            1129
        ]
    },
    "1130": {
        "comment": "signedNumber     number  signnumber suffix           binarySI  decimalExponent  decimalSI ",
        "similar_with": [
            1130
        ]
    },
    "1131": {
        "comment": "suffix           binarySI  decimalExponent  decimalSI ",
        "similar_with": [
            1131
        ]
    },
    "1132": {
        "comment": "suffix           binarySI  decimalExponent  decimalSI binarySI         Ki  Mi  Gi  Ti  Pi  Ei ",
        "similar_with": [
            1132
        ]
    },
    "1133": {
        "comment": "binarySI         Ki  Mi  Gi  Ti  Pi  Ei ",
        "similar_with": [
            1133
        ]
    },
    "1134": {
        "comment": "binarySI         Ki  Mi  Gi  Ti  Pi  Ei International System of units See httpphysicsnistgovcuuUnitsbinaryhtml ",
        "similar_with": [
            1134
        ]
    },
    "1135": {
        "comment": "International System of units See httpphysicsnistgovcuuUnitsbinaryhtml ",
        "similar_with": [
            1135
        ]
    },
    "1136": {
        "comment": "International System of units See httpphysicsnistgovcuuUnitsbinaryhtml decimalSI        m    k  M  G  T  P  E ",
        "similar_with": [
            1136
        ]
    },
    "1137": {
        "comment": "decimalSI        m    k  M  G  T  P  E ",
        "similar_with": [
            1137
        ]
    },
    "1138": {
        "comment": "decimalSI        m    k  M  G  T  P  E Note that 1024  1Ki but 1000  1k I didnt choose the capitalization ",
        "similar_with": [
            1138
        ]
    },
    "1139": {
        "comment": "Note that 1024  1Ki but 1000  1k I didnt choose the capitalization ",
        "similar_with": [
            1139
        ]
    },
    "1140": {
        "comment": "Note that 1024  1Ki but 1000  1k I didnt choose the capitalization decimalExponent  e signedNumber  E signedNumber ",
        "similar_with": [
            1140
        ]
    },
    "1141": {
        "comment": "decimalExponent  e signedNumber  E signedNumber ",
        "similar_with": [
            1141
        ]
    },
    "1142": {
        "comment": "decimalExponent  e signedNumber  E signedNumber No matter which of the three exponent forms is used no quantity may represent ",
        "similar_with": [
            1142
        ]
    },
    "1143": {
        "comment": "No matter which of the three exponent forms is used no quantity may represent ",
        "similar_with": [
            1143
        ]
    },
    "1144": {
        "comment": "No matter which of the three exponent forms is used no quantity may represent a number greater than 2631 in magnitude nor may it have more than 3 decimal ",
        "similar_with": [
            1144
        ]
    },
    "1145": {
        "comment": "a number greater than 2631 in magnitude nor may it have more than 3 decimal ",
        "similar_with": [
            1145
        ]
    },
    "1146": {
        "comment": "a number greater than 2631 in magnitude nor may it have more than 3 decimal places Numbers larger or more precise will be capped or rounded up ",
        "similar_with": [
            1146
        ]
    },
    "1147": {
        "comment": "places Numbers larger or more precise will be capped or rounded up ",
        "similar_with": [
            1147
        ]
    },
    "1148": {
        "comment": "places Numbers larger or more precise will be capped or rounded up Eg 01m will rounded up to 1m ",
        "similar_with": [
            1148
        ]
    },
    "1149": {
        "comment": "Eg 01m will rounded up to 1m ",
        "similar_with": [
            1149
        ]
    },
    "1150": {
        "comment": "Eg 01m will rounded up to 1m This may be extended in the future if we require larger or smaller quantities ",
        "similar_with": [
            1150
        ]
    },
    "1151": {
        "comment": "This may be extended in the future if we require larger or smaller quantities ",
        "similar_with": [
            1151
        ]
    },
    "1152": {
        "comment": "This may be extended in the future if we require larger or smaller quantities When a Quantity is parsed from a string it will remember the type of suffix ",
        "similar_with": [
            1152
        ]
    },
    "1153": {
        "comment": "When a Quantity is parsed from a string it will remember the type of suffix ",
        "similar_with": [
            1153
        ]
    },
    "1154": {
        "comment": "When a Quantity is parsed from a string it will remember the type of suffix it had and will use the same type again when it is serialized ",
        "similar_with": [
            1154
        ]
    },
    "1155": {
        "comment": "it had and will use the same type again when it is serialized ",
        "similar_with": [
            1155
        ]
    },
    "1156": {
        "comment": "it had and will use the same type again when it is serialized Before serializing Quantity will be put in canonical form ",
        "similar_with": [
            1156
        ]
    },
    "1157": {
        "comment": "Before serializing Quantity will be put in canonical form ",
        "similar_with": [
            1157
        ]
    },
    "1158": {
        "comment": "Before serializing Quantity will be put in canonical form This means that Exponentsuffix will be adjusted up or down with a ",
        "similar_with": [
            1158
        ]
    },
    "1159": {
        "comment": "This means that Exponentsuffix will be adjusted up or down with a ",
        "similar_with": [
            1159
        ]
    },
    "1160": {
        "comment": "This means that Exponentsuffix will be adjusted up or down with a corresponding increase or decrease in Mantissa such that ",
        "similar_with": [
            1160
        ]
    },
    "1161": {
        "comment": "corresponding increase or decrease in Mantissa such that ",
        "similar_with": [
            1161
        ]
    },
    "1162": {
        "comment": "corresponding increase or decrease in Mantissa such that a No precision is lost ",
        "similar_with": [
            1162
        ]
    },
    "1163": {
        "comment": "a No precision is lost ",
        "similar_with": [
            1163
        ]
    },
    "1164": {
        "comment": "a No precision is lost b No fractional digits will be emitted ",
        "similar_with": [
            1164
        ]
    },
    "1165": {
        "comment": "b No fractional digits will be emitted ",
        "similar_with": [
            1165
        ]
    },
    "1166": {
        "comment": "b No fractional digits will be emitted c The exponent or suffix is as large as possible ",
        "similar_with": [
            1166
        ]
    },
    "1167": {
        "comment": "c The exponent or suffix is as large as possible ",
        "similar_with": [
            1167
        ]
    },
    "1168": {
        "comment": "c The exponent or suffix is as large as possible The sign will be omitted unless the number is negative ",
        "similar_with": [
            1168
        ]
    },
    "1169": {
        "comment": "The sign will be omitted unless the number is negative ",
        "similar_with": [
            1169
        ]
    },
    "1170": {
        "comment": "The sign will be omitted unless the number is negative Examples ",
        "similar_with": [
            1170
        ]
    },
    "1171": {
        "comment": "Examples ",
        "similar_with": [
            1171
        ]
    },
    "1172": {
        "comment": "Examples 15 will be serialized as 1500m ",
        "similar_with": [
            1172
        ]
    },
    "1173": {
        "comment": "15 will be serialized as 1500m ",
        "similar_with": [
            1173
        ]
    },
    "1174": {
        "comment": "15 will be serialized as 1500m 15Gi will be serialized as 1536Mi ",
        "similar_with": [
            1174
        ]
    },
    "1175": {
        "comment": "15Gi will be serialized as 1536Mi ",
        "similar_with": [
            1175
        ]
    },
    "1176": {
        "comment": "15Gi will be serialized as 1536Mi NOTE We reserve the right to amend this canonical format perhaps to ",
        "similar_with": [
            1176
        ]
    },
    "1177": {
        "comment": "NOTE We reserve the right to amend this canonical format perhaps to ",
        "similar_with": [
            1177
        ]
    },
    "1178": {
        "comment": "NOTE We reserve the right to amend this canonical format perhaps to allow 15 to be canonical ",
        "similar_with": [
            1178
        ]
    },
    "1179": {
        "comment": "allow 15 to be canonical ",
        "similar_with": [
            1179
        ]
    },
    "1180": {
        "comment": "allow 15 to be canonical TODO Remove above disclaimer after all bikeshedding about format is over ",
        "similar_with": [
            1180
        ]
    },
    "1181": {
        "comment": "TODO Remove above disclaimer after all bikeshedding about format is over ",
        "similar_with": [
            1181
        ]
    },
    "1182": {
        "comment": "TODO Remove above disclaimer after all bikeshedding about format is over or after March 2015 ",
        "similar_with": [
            1182
        ]
    },
    "1183": {
        "comment": "or after March 2015 ",
        "similar_with": [
            1183
        ]
    },
    "1184": {
        "comment": "or after March 2015 Note that the quantity will NEVER be internally represented by a ",
        "similar_with": [
            1184
        ]
    },
    "1185": {
        "comment": "Note that the quantity will NEVER be internally represented by a ",
        "similar_with": [
            1185
        ]
    },
    "1186": {
        "comment": "Note that the quantity will NEVER be internally represented by a floating point number That is the whole point of this exercise ",
        "similar_with": [
            1186
        ]
    },
    "1187": {
        "comment": "floating point number That is the whole point of this exercise ",
        "similar_with": [
            1187
        ]
    },
    "1188": {
        "comment": "floating point number That is the whole point of this exercise Noncanonical values will still parse as long as they are well formed ",
        "similar_with": [
            1188
        ]
    },
    "1189": {
        "comment": "Noncanonical values will still parse as long as they are well formed ",
        "similar_with": [
            1189
        ]
    },
    "1190": {
        "comment": "Noncanonical values will still parse as long as they are well formed but will be reemitted in their canonical form So always use canonical ",
        "similar_with": [
            1190
        ]
    },
    "1191": {
        "comment": "but will be reemitted in their canonical form So always use canonical ",
        "similar_with": [
            1191
        ]
    },
    "1192": {
        "comment": "but will be reemitted in their canonical form So always use canonical form or dont diff ",
        "similar_with": [
            1192
        ]
    },
    "1193": {
        "comment": "form or dont diff ",
        "similar_with": [
            1193
        ]
    },
    "1194": {
        "comment": "form or dont diff This format is intended to make it difficult to use these numbers without ",
        "similar_with": [
            1194
        ]
    },
    "1195": {
        "comment": "This format is intended to make it difficult to use these numbers without ",
        "similar_with": [
            1195
        ]
    },
    "1196": {
        "comment": "This format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will ",
        "similar_with": [
            1196
        ]
    },
    "1197": {
        "comment": "writing some sort of special handling code in the hopes that that will ",
        "similar_with": [
            1197
        ]
    },
    "1198": {
        "comment": "writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation ",
        "similar_with": [
            1198
        ]
    },
    "1199": {
        "comment": "cause implementors to also use a fixed point implementation ",
        "similar_with": [
            1199
        ]
    },
    "1200": {
        "comment": "cause implementors to also use a fixed point implementation gencopyfalse ",
        "similar_with": [
            1200
        ]
    },
    "1201": {
        "comment": "gencopyfalse ",
        "similar_with": [
            1201
        ]
    },
    "1202": {
        "comment": "gencopyfalse protobuftrue ",
        "similar_with": [
            1202
        ]
    },
    "1203": {
        "comment": "protobuftrue ",
        "similar_with": [
            1203
        ]
    },
    "1204": {
        "comment": "protobuftrue protobufembedstring ",
        "similar_with": [
            1204
        ]
    },
    "1205": {
        "comment": "protobufembedstring ",
        "similar_with": [
            1205
        ]
    },
    "1206": {
        "comment": "protobufembedstring protobufoptionsmarshalfalse ",
        "similar_with": [
            1206
        ]
    },
    "1207": {
        "comment": "protobufoptionsmarshalfalse ",
        "similar_with": [
            1207
        ]
    },
    "1208": {
        "comment": "protobufoptionsmarshalfalse protobufoptionsgogoprotogoproto_stringerfalse ",
        "similar_with": [
            1208
        ]
    },
    "1209": {
        "comment": "protobufoptionsgogoprotogoproto_stringerfalse ",
        "similar_with": [
            1209
        ]
    },
    "1210": {
        "comment": "protobufoptionsgogoprotogoproto_stringerfalse i is the quantity in int64 scaled form if dDec  nil ",
        "similar_with": [
            1210
        ]
    },
    "1211": {
        "comment": "i is the quantity in int64 scaled form if dDec  nil ",
        "similar_with": [
            1211
        ]
    },
    "1212": {
        "comment": "i is the quantity in int64 scaled form if dDec  nil d is the quantity in infDec form if dDec  nil ",
        "similar_with": [
            1212
        ]
    },
    "1213": {
        "comment": "d is the quantity in infDec form if dDec  nil ",
        "similar_with": [
            1213
        ]
    },
    "1214": {
        "comment": "d is the quantity in infDec form if dDec  nil s is the generated value of this quantity to avoid recalculation ",
        "similar_with": [
            1214
        ]
    },
    "1215": {
        "comment": "s is the generated value of this quantity to avoid recalculation ",
        "similar_with": [
            1215
        ]
    },
    "1216": {
        "comment": "s is the generated value of this quantity to avoid recalculation Change Format at will See the comment for Canonicalize for ",
        "similar_with": [
            1216
        ]
    },
    "1217": {
        "comment": "Change Format at will See the comment for Canonicalize for ",
        "similar_with": [
            1217
        ]
    },
    "1218": {
        "comment": "Change Format at will See the comment for Canonicalize for more details ",
        "similar_with": [
            1218
        ]
    },
    "1219": {
        "comment": "more details ",
        "similar_with": [
            1219
        ]
    },
    "1220": {
        "comment": "more details CanonicalValue allows a quantity amount to be converted to a string ",
        "similar_with": [
            1220
        ]
    },
    "1221": {
        "comment": "CanonicalValue allows a quantity amount to be converted to a string ",
        "similar_with": [
            1221
        ]
    },
    "1222": {
        "comment": "CanonicalValue allows a quantity amount to be converted to a string AsCanonicalBytes returns a byte array representing the string representation ",
        "similar_with": [
            1222
        ]
    },
    "1223": {
        "comment": "AsCanonicalBytes returns a byte array representing the string representation ",
        "similar_with": [
            1223
        ]
    },
    "1224": {
        "comment": "AsCanonicalBytes returns a byte array representing the string representation of the value mantissa and an int32 representing its exponent in base10 Callers may ",
        "similar_with": [
            1224
        ]
    },
    "1225": {
        "comment": "of the value mantissa and an int32 representing its exponent in base10 Callers may ",
        "similar_with": [
            1225
        ]
    },
    "1226": {
        "comment": "of the value mantissa and an int32 representing its exponent in base10 Callers may pass a byte slice to the method to avoid allocations ",
        "similar_with": [
            1226
        ]
    },
    "1227": {
        "comment": "pass a byte slice to the method to avoid allocations ",
        "similar_with": [
            1227
        ]
    },
    "1228": {
        "comment": "pass a byte slice to the method to avoid allocations AsCanonicalBase1024Bytes returns a byte array representing the string representation ",
        "similar_with": [
            1228
        ]
    },
    "1229": {
        "comment": "AsCanonicalBase1024Bytes returns a byte array representing the string representation ",
        "similar_with": [
            1229
        ]
    },
    "1230": {
        "comment": "AsCanonicalBase1024Bytes returns a byte array representing the string representation of the value mantissa and an int32 representing its exponent in base1024 Callers ",
        "similar_with": [
            1230
        ]
    },
    "1231": {
        "comment": "of the value mantissa and an int32 representing its exponent in base1024 Callers ",
        "similar_with": [
            1231
        ]
    },
    "1232": {
        "comment": "of the value mantissa and an int32 representing its exponent in base1024 Callers may pass a byte slice to the method to avoid allocations ",
        "similar_with": [
            1232
        ]
    },
    "1233": {
        "comment": "may pass a byte slice to the method to avoid allocations ",
        "similar_with": [
            1233
        ]
    },
    "1234": {
        "comment": "may pass a byte slice to the method to avoid allocations Format lists the three possible formattings of a quantity ",
        "similar_with": [
            1234
        ]
    },
    "1235": {
        "comment": "Format lists the three possible formattings of a quantity ",
        "similar_with": [
            1235
        ]
    },
    "1236": {
        "comment": "Format lists the three possible formattings of a quantity eg 12e6 ",
        "similar_with": [
            1236
        ]
    },
    "1237": {
        "comment": "eg 12e6 ",
        "similar_with": [
            1237
        ]
    },
    "1238": {
        "comment": "eg 12e6 eg 12Mi 12  220 ",
        "similar_with": [
            1238
        ]
    },
    "1239": {
        "comment": "eg 12Mi 12  220 ",
        "similar_with": [
            1239
        ]
    },
    "1240": {
        "comment": "eg 12Mi 12  220 eg 12M  12  106 ",
        "similar_with": [
            1240
        ]
    },
    "1241": {
        "comment": "eg 12M  12  106 ",
        "similar_with": [
            1241
        ]
    },
    "1242": {
        "comment": "eg 12M  12  106 MustParse turns the given string into a quantity or panics for tests ",
        "similar_with": [
            1242
        ]
    },
    "1243": {
        "comment": "MustParse turns the given string into a quantity or panics for tests ",
        "similar_with": [
            1243
        ]
    },
    "1244": {
        "comment": "MustParse turns the given string into a quantity or panics for tests or others cases where you know the string is valid ",
        "similar_with": [
            1244
        ]
    },
    "1245": {
        "comment": "or others cases where you know the string is valid ",
        "similar_with": [
            1245
        ]
    },
    "1246": {
        "comment": "or others cases where you know the string is valid splitREString is used to separate a number from its suffix as such ",
        "similar_with": [
            1246
        ]
    },
    "1247": {
        "comment": "splitREString is used to separate a number from its suffix as such ",
        "similar_with": [
            1247
        ]
    },
    "1248": {
        "comment": "splitREString is used to separate a number from its suffix as such this is overly permissive but thats OK it will be checked later ",
        "similar_with": [
            1248
        ]
    },
    "1249": {
        "comment": "this is overly permissive but thats OK it will be checked later ",
        "similar_with": [
            1249
        ]
    },
    "1250": {
        "comment": "this is overly permissive but thats OK it will be checked later splitRE is used to get the various parts of a number ",
        "similar_with": [
            1250
        ]
    },
    "1251": {
        "comment": "splitRE is used to get the various parts of a number ",
        "similar_with": [
            1251
        ]
    },
    "1252": {
        "comment": "splitRE is used to get the various parts of a number Errors that could happen while parsing a string ",
        "similar_with": [
            1252
        ]
    },
    "1253": {
        "comment": "Errors that could happen while parsing a string ",
        "similar_with": [
            1253
        ]
    },
    "1254": {
        "comment": "Errors that could happen while parsing a string parseQuantityString is a fast scanner for quantity values ",
        "similar_with": [
            1254
        ]
    },
    "1255": {
        "comment": "parseQuantityString is a fast scanner for quantity values ",
        "similar_with": [
            1255
        ]
    },
    "1256": {
        "comment": "parseQuantityString is a fast scanner for quantity values handle leading sign ",
        "similar_with": [
            1256
        ]
    },
    "1257": {
        "comment": "handle leading sign ",
        "similar_with": [
            1257
        ]
    },
    "1258": {
        "comment": "handle leading sign strip leading zeros ",
        "similar_with": [
            1258
        ]
    },
    "1259": {
        "comment": "strip leading zeros ",
        "similar_with": [
            1259
        ]
    },
    "1260": {
        "comment": "strip leading zeros extract the numerator ",
        "similar_with": [
            1260
        ]
    },
    "1261": {
        "comment": "extract the numerator ",
        "similar_with": [
            1261
        ]
    },
    "1262": {
        "comment": "extract the numerator if we stripped all numerator positions always return 0 ",
        "similar_with": [
            1262
        ]
    },
    "1263": {
        "comment": "if we stripped all numerator positions always return 0 ",
        "similar_with": [
            1263
        ]
    },
    "1264": {
        "comment": "if we stripped all numerator positions always return 0 handle a denominator ",
        "similar_with": [
            1264
        ]
    },
    "1265": {
        "comment": "handle a denominator ",
        "similar_with": [
            1265
        ]
    },
    "1266": {
        "comment": "handle a denominator TODO we currently allow 1G but we may not want to in the future ",
        "similar_with": [
            1266
        ]
    },
    "1267": {
        "comment": "TODO we currently allow 1G but we may not want to in the future ",
        "similar_with": [
            1267
        ]
    },
    "1268": {
        "comment": "TODO we currently allow 1G but we may not want to in the future if lendenom  0  ",
        "similar_with": [
            1268
        ]
    },
    "1269": {
        "comment": "if lendenom  0  ",
        "similar_with": [
            1269
        ]
    },
    "1270": {
        "comment": "if lendenom  0  \terr  ErrFormatWrong ",
        "similar_with": [
            1270
        ]
    },
    "1271": {
        "comment": "\terr  ErrFormatWrong ",
        "similar_with": [
            1271
        ]
    },
    "1272": {
        "comment": "\terr  ErrFormatWrong \treturn ",
        "similar_with": [
            1272
        ]
    },
    "1273": {
        "comment": "\treturn ",
        "similar_with": [
            1273
        ]
    },
    "1274": {
        "comment": "\treturn  ",
        "similar_with": [
            1274
        ]
    },
    "1275": {
        "comment": " ",
        "similar_with": [
            1275
        ]
    },
    "1276": {
        "comment": " grab the elements of the suffix ",
        "similar_with": [
            1276
        ]
    },
    "1277": {
        "comment": "grab the elements of the suffix ",
        "similar_with": [
            1277
        ]
    },
    "1278": {
        "comment": "grab the elements of the suffix we encountered a non decimal in the Suffix loop but the last character ",
        "similar_with": [
            1278
        ]
    },
    "1279": {
        "comment": "we encountered a non decimal in the Suffix loop but the last character ",
        "similar_with": [
            1279
        ]
    },
    "1280": {
        "comment": "we encountered a non decimal in the Suffix loop but the last character was not a valid exponent ",
        "similar_with": [
            1280
        ]
    },
    "1281": {
        "comment": "was not a valid exponent ",
        "similar_with": [
            1281
        ]
    },
    "1282": {
        "comment": "was not a valid exponent ParseQuantity turns str into a Quantity or returns an error ",
        "similar_with": [
            1282
        ]
    },
    "1283": {
        "comment": "ParseQuantity turns str into a Quantity or returns an error ",
        "similar_with": [
            1283
        ]
    },
    "1284": {
        "comment": "ParseQuantity turns str into a Quantity or returns an error only handle positive binary numbers with the fast path ",
        "similar_with": [
            1284
        ]
    },
    "1285": {
        "comment": "only handle positive binary numbers with the fast path ",
        "similar_with": [
            1285
        ]
    },
    "1286": {
        "comment": "only handle positive binary numbers with the fast path 1Mi 220 has 6 digits of decimal precision so exponent310 1 is roughly the precision ",
        "similar_with": [
            1286
        ]
    },
    "1287": {
        "comment": "1Mi 220 has 6 digits of decimal precision so exponent310 1 is roughly the precision ",
        "similar_with": [
            1287
        ]
    },
    "1288": {
        "comment": "1Mi 220 has 6 digits of decimal precision so exponent310 1 is roughly the precision if we have a denominator shift the entire value to the left by the number of places in the ",
        "similar_with": [
            1288
        ]
    },
    "1289": {
        "comment": "if we have a denominator shift the entire value to the left by the number of places in the ",
        "similar_with": [
            1289
        ]
    },
    "1290": {
        "comment": "if we have a denominator shift the entire value to the left by the number of places in the denominator ",
        "similar_with": [
            1290
        ]
    },
    "1291": {
        "comment": "denominator ",
        "similar_with": [
            1291
        ]
    },
    "1292": {
        "comment": "denominator if the number is in canonical form reuse the string ",
        "similar_with": [
            1292
        ]
    },
    "1293": {
        "comment": "if the number is in canonical form reuse the string ",
        "similar_with": [
            1293
        ]
    },
    "1294": {
        "comment": "if the number is in canonical form reuse the string So that no one but us has to think about suffixes remove it ",
        "similar_with": [
            1294
        ]
    },
    "1295": {
        "comment": "So that no one but us has to think about suffixes remove it ",
        "similar_with": [
            1295
        ]
    },
    "1296": {
        "comment": "So that no one but us has to think about suffixes remove it numericSuffix  2  exponent ",
        "similar_with": [
            1296
        ]
    },
    "1297": {
        "comment": "numericSuffix  2  exponent ",
        "similar_with": [
            1297
        ]
    },
    "1298": {
        "comment": "numericSuffix  2  exponent Cap at minmax bounds ",
        "similar_with": [
            1298
        ]
    },
    "1299": {
        "comment": "Cap at minmax bounds ",
        "similar_with": [
            1299
        ]
    },
    "1300": {
        "comment": "Cap at minmax bounds This rounds nonzero values up to the minimum representable value under the theory that ",
        "similar_with": [
            1300
        ]
    },
    "1301": {
        "comment": "This rounds nonzero values up to the minimum representable value under the theory that ",
        "similar_with": [
            1301
        ]
    },
    "1302": {
        "comment": "This rounds nonzero values up to the minimum representable value under the theory that if you want some resources you should get some resources even if you asked for way too small ",
        "similar_with": [
            1302
        ]
    },
    "1303": {
        "comment": "if you want some resources you should get some resources even if you asked for way too small ",
        "similar_with": [
            1303
        ]
    },
    "1304": {
        "comment": "if you want some resources you should get some resources even if you asked for way too small of an amount  Arguably this should be infRoundHalfUp normal rounding but that would have ",
        "similar_with": [
            1304
        ]
    },
    "1305": {
        "comment": "of an amount  Arguably this should be infRoundHalfUp normal rounding but that would have ",
        "similar_with": [
            1305
        ]
    },
    "1306": {
        "comment": "of an amount  Arguably this should be infRoundHalfUp normal rounding but that would have the side effect of rounding values  5n to zero ",
        "similar_with": [
            1306
        ]
    },
    "1307": {
        "comment": "the side effect of rounding values  5n to zero ",
        "similar_with": [
            1307
        ]
    },
    "1308": {
        "comment": "the side effect of rounding values  5n to zero The max is just a simple cap ",
        "similar_with": [
            1308
        ]
    },
    "1309": {
        "comment": "The max is just a simple cap ",
        "similar_with": [
            1309
        ]
    },
    "1310": {
        "comment": "The max is just a simple cap TODO this prevents accumulating quantities greater than int64 for instance quota across a cluster ",
        "similar_with": [
            1310
        ]
    },
    "1311": {
        "comment": "TODO this prevents accumulating quantities greater than int64 for instance quota across a cluster ",
        "similar_with": [
            1311
        ]
    },
    "1312": {
        "comment": "TODO this prevents accumulating quantities greater than int64 for instance quota across a cluster This avoids rounding and hopefully confusion too ",
        "similar_with": [
            1312
        ]
    },
    "1313": {
        "comment": "This avoids rounding and hopefully confusion too ",
        "similar_with": [
            1313
        ]
    },
    "1314": {
        "comment": "This avoids rounding and hopefully confusion too CanonicalizeBytes returns the canonical form of q and its suffix see comment on Quantity ",
        "similar_with": [
            1314
        ]
    },
    "1315": {
        "comment": "CanonicalizeBytes returns the canonical form of q and its suffix see comment on Quantity ",
        "similar_with": [
            1315
        ]
    },
    "1316": {
        "comment": "CanonicalizeBytes returns the canonical form of q and its suffix see comment on Quantity Note about BinarySI ",
        "similar_with": [
            1316
        ]
    },
    "1317": {
        "comment": "Note about BinarySI ",
        "similar_with": [
            1317
        ]
    },
    "1318": {
        "comment": "Note about BinarySI If qFormat is set to BinarySI and qAmount represents a nonzero value between ",
        "similar_with": [
            1318
        ]
    },
    "1319": {
        "comment": "If qFormat is set to BinarySI and qAmount represents a nonzero value between ",
        "similar_with": [
            1319
        ]
    },
    "1320": {
        "comment": "If qFormat is set to BinarySI and qAmount represents a nonzero value between 1 and 1 it will be emitted as if qFormat were DecimalSI ",
        "similar_with": [
            1320
        ]
    },
    "1321": {
        "comment": "1 and 1 it will be emitted as if qFormat were DecimalSI ",
        "similar_with": [
            1321
        ]
    },
    "1322": {
        "comment": "1 and 1 it will be emitted as if qFormat were DecimalSI Otherwise if qFormat is set to BinarySI frational parts of qAmount will be ",
        "similar_with": [
            1322
        ]
    },
    "1323": {
        "comment": "Otherwise if qFormat is set to BinarySI frational parts of qAmount will be ",
        "similar_with": [
            1323
        ]
    },
    "1324": {
        "comment": "Otherwise if qFormat is set to BinarySI frational parts of qAmount will be rounded up 11i becomes 2i ",
        "similar_with": [
            1324
        ]
    },
    "1325": {
        "comment": "rounded up 11i becomes 2i ",
        "similar_with": [
            1325
        ]
    },
    "1326": {
        "comment": "rounded up 11i becomes 2i This avoids rounding and hopefully confusion too ",
        "similar_with": [
            1326
        ]
    },
    "1327": {
        "comment": "This avoids rounding and hopefully confusion too ",
        "similar_with": [
            1327
        ]
    },
    "1328": {
        "comment": "This avoids rounding and hopefully confusion too Dont lose precision show as DecimalSI ",
        "similar_with": [
            1328
        ]
    },
    "1329": {
        "comment": "Dont lose precision show as DecimalSI ",
        "similar_with": [
            1329
        ]
    },
    "1330": {
        "comment": "Dont lose precision show as DecimalSI TODO If BinarySI formatting is requested but would cause rounding upgrade to ",
        "similar_with": [
            1330
        ]
    },
    "1331": {
        "comment": "TODO If BinarySI formatting is requested but would cause rounding upgrade to ",
        "similar_with": [
            1331
        ]
    },
    "1332": {
        "comment": "TODO If BinarySI formatting is requested but would cause rounding upgrade to one of the other formats ",
        "similar_with": [
            1332
        ]
    },
    "1333": {
        "comment": "one of the other formats ",
        "similar_with": [
            1333
        ]
    },
    "1334": {
        "comment": "one of the other formats format must be BinarySI ",
        "similar_with": [
            1334
        ]
    },
    "1335": {
        "comment": "format must be BinarySI ",
        "similar_with": [
            1335
        ]
    },
    "1336": {
        "comment": "format must be BinarySI AsInt64 returns a representation of the current value as an int64 if a fast conversion ",
        "similar_with": [
            1336
        ]
    },
    "1337": {
        "comment": "AsInt64 returns a representation of the current value as an int64 if a fast conversion ",
        "similar_with": [
            1337
        ]
    },
    "1338": {
        "comment": "AsInt64 returns a representation of the current value as an int64 if a fast conversion is possible If false is returned callers must use the infDec form of this quantity ",
        "similar_with": [
            1338
        ]
    },
    "1339": {
        "comment": "is possible If false is returned callers must use the infDec form of this quantity ",
        "similar_with": [
            1339
        ]
    },
    "1340": {
        "comment": "is possible If false is returned callers must use the infDec form of this quantity ToDec promotes the quantity in place to use an infDec representation and returns itself ",
        "similar_with": [
            1340
        ]
    },
    "1341": {
        "comment": "ToDec promotes the quantity in place to use an infDec representation and returns itself ",
        "similar_with": [
            1341
        ]
    },
    "1342": {
        "comment": "ToDec promotes the quantity in place to use an infDec representation and returns itself AsDec returns the quantity as represented by a scaled infDec ",
        "similar_with": [
            1342
        ]
    },
    "1343": {
        "comment": "AsDec returns the quantity as represented by a scaled infDec ",
        "similar_with": [
            1343
        ]
    },
    "1344": {
        "comment": "AsDec returns the quantity as represented by a scaled infDec AsCanonicalBytes returns the canonical byte representation of this quantity as a mantissa ",
        "similar_with": [
            1344
        ]
    },
    "1345": {
        "comment": "AsCanonicalBytes returns the canonical byte representation of this quantity as a mantissa ",
        "similar_with": [
            1345
        ]
    },
    "1346": {
        "comment": "AsCanonicalBytes returns the canonical byte representation of this quantity as a mantissa and base 10 exponent The out byte slice may be passed to the method to avoid an extra ",
        "similar_with": [
            1346
        ]
    },
    "1347": {
        "comment": "and base 10 exponent The out byte slice may be passed to the method to avoid an extra ",
        "similar_with": [
            1347
        ]
    },
    "1348": {
        "comment": "and base 10 exponent The out byte slice may be passed to the method to avoid an extra allocation ",
        "similar_with": [
            1348
        ]
    },
    "1349": {
        "comment": "allocation ",
        "similar_with": [
            1349
        ]
    },
    "1350": {
        "comment": "allocation IsZero returns true if the quantity is equal to zero ",
        "similar_with": [
            1350
        ]
    },
    "1351": {
        "comment": "IsZero returns true if the quantity is equal to zero ",
        "similar_with": [
            1351
        ]
    },
    "1352": {
        "comment": "IsZero returns true if the quantity is equal to zero Sign returns 0 if the quantity is zero 1 if the quantity is less than zero or 1 if the ",
        "similar_with": [
            1352
        ]
    },
    "1353": {
        "comment": "Sign returns 0 if the quantity is zero 1 if the quantity is less than zero or 1 if the ",
        "similar_with": [
            1353
        ]
    },
    "1354": {
        "comment": "Sign returns 0 if the quantity is zero 1 if the quantity is less than zero or 1 if the quantity is greater than zero ",
        "similar_with": [
            1354
        ]
    },
    "1355": {
        "comment": "quantity is greater than zero ",
        "similar_with": [
            1355
        ]
    },
    "1356": {
        "comment": "quantity is greater than zero AsScaled returns the current value rounded up to the provided scale and returns ",
        "similar_with": [
            1356
        ]
    },
    "1357": {
        "comment": "AsScaled returns the current value rounded up to the provided scale and returns ",
        "similar_with": [
            1357
        ]
    },
    "1358": {
        "comment": "AsScaled returns the current value rounded up to the provided scale and returns false if the scale resulted in a loss of precision ",
        "similar_with": [
            1358
        ]
    },
    "1359": {
        "comment": "false if the scale resulted in a loss of precision ",
        "similar_with": [
            1359
        ]
    },
    "1360": {
        "comment": "false if the scale resulted in a loss of precision RoundUp updates the quantity to the provided scale ensuring that the value is at ",
        "similar_with": [
            1360
        ]
    },
    "1361": {
        "comment": "RoundUp updates the quantity to the provided scale ensuring that the value is at ",
        "similar_with": [
            1361
        ]
    },
    "1362": {
        "comment": "RoundUp updates the quantity to the provided scale ensuring that the value is at least 1 False is returned if the rounding operation resulted in a loss of precision ",
        "similar_with": [
            1362
        ]
    },
    "1363": {
        "comment": "least 1 False is returned if the rounding operation resulted in a loss of precision ",
        "similar_with": [
            1363
        ]
    },
    "1364": {
        "comment": "least 1 False is returned if the rounding operation resulted in a loss of precision Negative numbers are rounded away from zero 9 scale 1 rounds to 10 ",
        "similar_with": [
            1364
        ]
    },
    "1365": {
        "comment": "Negative numbers are rounded away from zero 9 scale 1 rounds to 10 ",
        "similar_with": [
            1365
        ]
    },
    "1366": {
        "comment": "Negative numbers are rounded away from zero 9 scale 1 rounds to 10 avoid clearing the string value if we have already calculated it ",
        "similar_with": [
            1366
        ]
    },
    "1367": {
        "comment": "avoid clearing the string value if we have already calculated it ",
        "similar_with": [
            1367
        ]
    },
    "1368": {
        "comment": "avoid clearing the string value if we have already calculated it Add adds the provide y quantity to the current value If the current value is zero ",
        "similar_with": [
            1368
        ]
    },
    "1369": {
        "comment": "Add adds the provide y quantity to the current value If the current value is zero ",
        "similar_with": [
            1369
        ]
    },
    "1370": {
        "comment": "Add adds the provide y quantity to the current value If the current value is zero the format of the quantity will be updated to the format of y ",
        "similar_with": [
            1370
        ]
    },
    "1371": {
        "comment": "the format of the quantity will be updated to the format of y ",
        "similar_with": [
            1371
        ]
    },
    "1372": {
        "comment": "the format of the quantity will be updated to the format of y Sub subtracts the provided quantity from the current value in place If the current ",
        "similar_with": [
            1372
        ]
    },
    "1373": {
        "comment": "Sub subtracts the provided quantity from the current value in place If the current ",
        "similar_with": [
            1373
        ]
    },
    "1374": {
        "comment": "Sub subtracts the provided quantity from the current value in place If the current value is zero the format of the quantity will be updated to the format of y ",
        "similar_with": [
            1374
        ]
    },
    "1375": {
        "comment": "value is zero the format of the quantity will be updated to the format of y ",
        "similar_with": [
            1375
        ]
    },
    "1376": {
        "comment": "value is zero the format of the quantity will be updated to the format of y Cmp returns 0 if the quantity is equal to y 1 if the quantity is less than y or 1 if the ",
        "similar_with": [
            1376
        ]
    },
    "1377": {
        "comment": "Cmp returns 0 if the quantity is equal to y 1 if the quantity is less than y or 1 if the ",
        "similar_with": [
            1377
        ]
    },
    "1378": {
        "comment": "Cmp returns 0 if the quantity is equal to y 1 if the quantity is less than y or 1 if the quantity is greater than y ",
        "similar_with": [
            1378
        ]
    },
    "1379": {
        "comment": "quantity is greater than y ",
        "similar_with": [
            1379
        ]
    },
    "1380": {
        "comment": "quantity is greater than y CmpInt64 returns 0 if the quantity is equal to y 1 if the quantity is less than y or 1 if the ",
        "similar_with": [
            1380
        ]
    },
    "1381": {
        "comment": "CmpInt64 returns 0 if the quantity is equal to y 1 if the quantity is less than y or 1 if the ",
        "similar_with": [
            1381
        ]
    },
    "1382": {
        "comment": "CmpInt64 returns 0 if the quantity is equal to y 1 if the quantity is less than y or 1 if the quantity is greater than y ",
        "similar_with": [
            1382
        ]
    },
    "1383": {
        "comment": "quantity is greater than y ",
        "similar_with": [
            1383
        ]
    },
    "1384": {
        "comment": "quantity is greater than y Neg sets quantity to be the negative value of itself ",
        "similar_with": [
            1384
        ]
    },
    "1385": {
        "comment": "Neg sets quantity to be the negative value of itself ",
        "similar_with": [
            1385
        ]
    },
    "1386": {
        "comment": "Neg sets quantity to be the negative value of itself int64QuantityExpectedBytes is the expected width in bytes of the canonical string representation ",
        "similar_with": [
            1386
        ]
    },
    "1387": {
        "comment": "int64QuantityExpectedBytes is the expected width in bytes of the canonical string representation ",
        "similar_with": [
            1387
        ]
    },
    "1388": {
        "comment": "int64QuantityExpectedBytes is the expected width in bytes of the canonical string representation of most Quantity values ",
        "similar_with": [
            1388
        ]
    },
    "1389": {
        "comment": "of most Quantity values ",
        "similar_with": [
            1389
        ]
    },
    "1390": {
        "comment": "of most Quantity values String formats the Quantity as a string caching the result if not calculated ",
        "similar_with": [
            1390
        ]
    },
    "1391": {
        "comment": "String formats the Quantity as a string caching the result if not calculated ",
        "similar_with": [
            1391
        ]
    },
    "1392": {
        "comment": "String formats the Quantity as a string caching the result if not calculated String is an expensive operation and caching this result significantly reduces the cost of ",
        "similar_with": [
            1392
        ]
    },
    "1393": {
        "comment": "String is an expensive operation and caching this result significantly reduces the cost of ",
        "similar_with": [
            1393
        ]
    },
    "1394": {
        "comment": "String is an expensive operation and caching this result significantly reduces the cost of normal parse  marshal operations on Quantity ",
        "similar_with": [
            1394
        ]
    },
    "1395": {
        "comment": "normal parse  marshal operations on Quantity ",
        "similar_with": [
            1395
        ]
    },
    "1396": {
        "comment": "normal parse  marshal operations on Quantity MarshalJSON implements the jsonMarshaller interface ",
        "similar_with": [
            1396
        ]
    },
    "1397": {
        "comment": "MarshalJSON implements the jsonMarshaller interface ",
        "similar_with": [
            1397
        ]
    },
    "1398": {
        "comment": "MarshalJSON implements the jsonMarshaller interface if the same slice was returned to us that we passed in avoid another allocation by copying number into ",
        "similar_with": [
            1398
        ]
    },
    "1399": {
        "comment": "if the same slice was returned to us that we passed in avoid another allocation by copying number into ",
        "similar_with": [
            1399
        ]
    },
    "1400": {
        "comment": "if the same slice was returned to us that we passed in avoid another allocation by copying number into the source slice and returning that ",
        "similar_with": [
            1400
        ]
    },
    "1401": {
        "comment": "the source slice and returning that ",
        "similar_with": [
            1401
        ]
    },
    "1402": {
        "comment": "the source slice and returning that if CanonicalizeBytes needed more space than our slice provided we may need to allocate again so use ",
        "similar_with": [
            1402
        ]
    },
    "1403": {
        "comment": "if CanonicalizeBytes needed more space than our slice provided we may need to allocate again so use ",
        "similar_with": [
            1403
        ]
    },
    "1404": {
        "comment": "if CanonicalizeBytes needed more space than our slice provided we may need to allocate again so use append ",
        "similar_with": [
            1404
        ]
    },
    "1405": {
        "comment": "append ",
        "similar_with": [
            1405
        ]
    },
    "1406": {
        "comment": "append UnmarshalJSON implements the jsonUnmarshaller interface ",
        "similar_with": [
            1406
        ]
    },
    "1407": {
        "comment": "UnmarshalJSON implements the jsonUnmarshaller interface ",
        "similar_with": [
            1407
        ]
    },
    "1408": {
        "comment": "UnmarshalJSON implements the jsonUnmarshaller interface TODO Remove support for leadingtrailing whitespace ",
        "similar_with": [
            1408
        ]
    },
    "1409": {
        "comment": "TODO Remove support for leadingtrailing whitespace ",
        "similar_with": [
            1409
        ]
    },
    "1410": {
        "comment": "TODO Remove support for leadingtrailing whitespace This copy is safe because parsed will not be referred to again ",
        "similar_with": [
            1410
        ]
    },
    "1411": {
        "comment": "This copy is safe because parsed will not be referred to again ",
        "similar_with": [
            1411
        ]
    },
    "1412": {
        "comment": "This copy is safe because parsed will not be referred to again NewQuantity returns a new Quantity representing the given ",
        "similar_with": [
            1412
        ]
    },
    "1413": {
        "comment": "NewQuantity returns a new Quantity representing the given ",
        "similar_with": [
            1413
        ]
    },
    "1414": {
        "comment": "NewQuantity returns a new Quantity representing the given value in the given format ",
        "similar_with": [
            1414
        ]
    },
    "1415": {
        "comment": "value in the given format ",
        "similar_with": [
            1415
        ]
    },
    "1416": {
        "comment": "value in the given format NewMilliQuantity returns a new Quantity representing the given ",
        "similar_with": [
            1416
        ]
    },
    "1417": {
        "comment": "NewMilliQuantity returns a new Quantity representing the given ",
        "similar_with": [
            1417
        ]
    },
    "1418": {
        "comment": "NewMilliQuantity returns a new Quantity representing the given value  11000 in the given format Note that BinarySI formatting ",
        "similar_with": [
            1418
        ]
    },
    "1419": {
        "comment": "value  11000 in the given format Note that BinarySI formatting ",
        "similar_with": [
            1419
        ]
    },
    "1420": {
        "comment": "value  11000 in the given format Note that BinarySI formatting will round fractional values and will be changed to DecimalSI for ",
        "similar_with": [
            1420
        ]
    },
    "1421": {
        "comment": "will round fractional values and will be changed to DecimalSI for ",
        "similar_with": [
            1421
        ]
    },
    "1422": {
        "comment": "will round fractional values and will be changed to DecimalSI for values x where 1  x  1  x  0 ",
        "similar_with": [
            1422
        ]
    },
    "1423": {
        "comment": "values x where 1  x  1  x  0 ",
        "similar_with": [
            1423
        ]
    },
    "1424": {
        "comment": "values x where 1  x  1  x  0 NewScaledQuantity returns a new Quantity representing the given ",
        "similar_with": [
            1424
        ]
    },
    "1425": {
        "comment": "NewScaledQuantity returns a new Quantity representing the given ",
        "similar_with": [
            1425
        ]
    },
    "1426": {
        "comment": "NewScaledQuantity returns a new Quantity representing the given value  10scale in DecimalSI format ",
        "similar_with": [
            1426
        ]
    },
    "1427": {
        "comment": "value  10scale in DecimalSI format ",
        "similar_with": [
            1427
        ]
    },
    "1428": {
        "comment": "value  10scale in DecimalSI format Value returns the value of q any fractional part will be lost ",
        "similar_with": [
            1428
        ]
    },
    "1429": {
        "comment": "Value returns the value of q any fractional part will be lost ",
        "similar_with": [
            1429
        ]
    },
    "1430": {
        "comment": "Value returns the value of q any fractional part will be lost MilliValue returns the value of ceilq  1000 this could overflow an int64 ",
        "similar_with": [
            1430
        ]
    },
    "1431": {
        "comment": "MilliValue returns the value of ceilq  1000 this could overflow an int64 ",
        "similar_with": [
            1431
        ]
    },
    "1432": {
        "comment": "MilliValue returns the value of ceilq  1000 this could overflow an int64 if thats a concern call Value first to verify the number is small enough ",
        "similar_with": [
            1432
        ]
    },
    "1433": {
        "comment": "if thats a concern call Value first to verify the number is small enough ",
        "similar_with": [
            1433
        ]
    },
    "1434": {
        "comment": "if thats a concern call Value first to verify the number is small enough ScaledValue returns the value of ceilq  10scale this could overflow an int64 ",
        "similar_with": [
            1434
        ]
    },
    "1435": {
        "comment": "ScaledValue returns the value of ceilq  10scale this could overflow an int64 ",
        "similar_with": [
            1435
        ]
    },
    "1436": {
        "comment": "ScaledValue returns the value of ceilq  10scale this could overflow an int64 To detect overflow call Value first and verify the expected magnitude ",
        "similar_with": [
            1436
        ]
    },
    "1437": {
        "comment": "To detect overflow call Value first and verify the expected magnitude ",
        "similar_with": [
            1437
        ]
    },
    "1438": {
        "comment": "To detect overflow call Value first and verify the expected magnitude Set sets qs value to be value ",
        "similar_with": [
            1438
        ]
    },
    "1439": {
        "comment": "Set sets qs value to be value ",
        "similar_with": [
            1439
        ]
    },
    "1440": {
        "comment": "Set sets qs value to be value SetMilli sets qs value to be value  11000 ",
        "similar_with": [
            1440
        ]
    },
    "1441": {
        "comment": "SetMilli sets qs value to be value  11000 ",
        "similar_with": [
            1441
        ]
    },
    "1442": {
        "comment": "SetMilli sets qs value to be value  11000 SetScaled sets qs value to be value  10scale ",
        "similar_with": [
            1442
        ]
    },
    "1443": {
        "comment": "SetScaled sets qs value to be value  10scale ",
        "similar_with": [
            1443
        ]
    },
    "1444": {
        "comment": "SetScaled sets qs value to be value  10scale Copy is a convenience function that makes a deep copy for you Nondeep ",
        "similar_with": [
            1444
        ]
    },
    "1445": {
        "comment": "Copy is a convenience function that makes a deep copy for you Nondeep ",
        "similar_with": [
            1445
        ]
    },
    "1446": {
        "comment": "Copy is a convenience function that makes a deep copy for you Nondeep copies of quantities share pointers and you will regret that ",
        "similar_with": [
            1446
        ]
    },
    "1447": {
        "comment": "copies of quantities share pointers and you will regret that ",
        "similar_with": [
            1447
        ]
    },
    "1448": {
        "comment": "copies of quantities share pointers and you will regret that qFlag is a helper type for the Flag function ",
        "similar_with": [
            1448
        ]
    },
    "1449": {
        "comment": "qFlag is a helper type for the Flag function ",
        "similar_with": [
            1449
        ]
    },
    "1450": {
        "comment": "qFlag is a helper type for the Flag function Sets the value of the internal Quantity used by flag  pflag ",
        "similar_with": [
            1450
        ]
    },
    "1451": {
        "comment": "Sets the value of the internal Quantity used by flag  pflag ",
        "similar_with": [
            1451
        ]
    },
    "1452": {
        "comment": "Sets the value of the internal Quantity used by flag  pflag This copy is OK because q will not be referenced again ",
        "similar_with": [
            1452
        ]
    },
    "1453": {
        "comment": "This copy is OK because q will not be referenced again ",
        "similar_with": [
            1453
        ]
    },
    "1454": {
        "comment": "This copy is OK because q will not be referenced again Converts the value of the internal Quantity to a string used by flag  pflag ",
        "similar_with": [
            1454
        ]
    },
    "1455": {
        "comment": "Converts the value of the internal Quantity to a string used by flag  pflag ",
        "similar_with": [
            1455
        ]
    },
    "1456": {
        "comment": "Converts the value of the internal Quantity to a string used by flag  pflag States the type of flag this is Quantity used by pflag ",
        "similar_with": [
            1456
        ]
    },
    "1457": {
        "comment": "States the type of flag this is Quantity used by pflag ",
        "similar_with": [
            1457
        ]
    },
    "1458": {
        "comment": "States the type of flag this is Quantity used by pflag QuantityFlag is a helper that makes a quantity flag using standard flag package ",
        "similar_with": [
            1458
        ]
    },
    "1459": {
        "comment": "QuantityFlag is a helper that makes a quantity flag using standard flag package ",
        "similar_with": [
            1459
        ]
    },
    "1460": {
        "comment": "QuantityFlag is a helper that makes a quantity flag using standard flag package Will panic if defaultValue is not a valid quantity ",
        "similar_with": [
            1460
        ]
    },
    "1461": {
        "comment": "Will panic if defaultValue is not a valid quantity ",
        "similar_with": [
            1461
        ]
    },
    "1462": {
        "comment": "Will panic if defaultValue is not a valid quantity NewQuantityFlagValue returns an object that can be used to back a flag ",
        "similar_with": [
            1462
        ]
    },
    "1463": {
        "comment": "NewQuantityFlagValue returns an object that can be used to back a flag ",
        "similar_with": [
            1463
        ]
    },
    "1464": {
        "comment": "NewQuantityFlagValue returns an object that can be used to back a flag pointing at the given Quantity variable ",
        "similar_with": [
            1464
        ]
    },
    "1465": {
        "comment": "pointing at the given Quantity variable ",
        "similar_with": [
            1465
        ]
    },
    "1466": {
        "comment": "Copyright 2014 The Kubernetes Authors All rights reserved ",
        "similar_with": [
            1466
        ]
    },
    "1467": {
        "comment": "Copyright 2014 The Kubernetes Authors All rights reserved Licensed under the Apache License Version 20 the License ",
        "similar_with": [
            1467
        ]
    },
    "1468": {
        "comment": "Licensed under the Apache License Version 20 the License ",
        "similar_with": [
            1468
        ]
    },
    "1469": {
        "comment": "Licensed under the Apache License Version 20 the License you may not use this file except in compliance with the License ",
        "similar_with": [
            1469
        ]
    },
    "1470": {
        "comment": "you may not use this file except in compliance with the License ",
        "similar_with": [
            1470
        ]
    },
    "1471": {
        "comment": "you may not use this file except in compliance with the License You may obtain a copy of the License at ",
        "similar_with": [
            1471
        ]
    },
    "1472": {
        "comment": "You may obtain a copy of the License at ",
        "similar_with": [
            1472
        ]
    },
    "1473": {
        "comment": "You may obtain a copy of the License at httpwwwapacheorglicensesLICENSE20 ",
        "similar_with": [
            1473
        ]
    },
    "1474": {
        "comment": "httpwwwapacheorglicensesLICENSE20 ",
        "similar_with": [
            1474
        ]
    },
    "1475": {
        "comment": "httpwwwapacheorglicensesLICENSE20 Unless required by applicable law or agreed to in writing software ",
        "similar_with": [
            1475
        ]
    },
    "1476": {
        "comment": "Unless required by applicable law or agreed to in writing software ",
        "similar_with": [
            1476
        ]
    },
    "1477": {
        "comment": "Unless required by applicable law or agreed to in writing software distributed under the License is distributed on an AS IS BASIS ",
        "similar_with": [
            1477
        ]
    },
    "1478": {
        "comment": "distributed under the License is distributed on an AS IS BASIS ",
        "similar_with": [
            1478
        ]
    },
    "1479": {
        "comment": "distributed under the License is distributed on an AS IS BASIS WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND either express or implied ",
        "similar_with": [
            1479
        ]
    },
    "1480": {
        "comment": "WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND either express or implied ",
        "similar_with": [
            1480
        ]
    },
    "1481": {
        "comment": "WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND either express or implied See the License for the specific language governing permissions and ",
        "similar_with": [
            1481
        ]
    },
    "1482": {
        "comment": "See the License for the specific language governing permissions and ",
        "similar_with": [
            1482
        ]
    },
    "1483": {
        "comment": "See the License for the specific language governing permissions and limitations under the License ",
        "similar_with": [
            1483
        ]
    },
    "1484": {
        "comment": "limitations under the License ",
        "similar_with": [
            1484
        ]
    },
    "1485": {
        "comment": "limitations under the License maxInt64Factors is the highest value that will be checked when removing factors of 10 from an int64 ",
        "similar_with": [
            1485
        ]
    },
    "1486": {
        "comment": "maxInt64Factors is the highest value that will be checked when removing factors of 10 from an int64 ",
        "similar_with": [
            1486
        ]
    },
    "1487": {
        "comment": "maxInt64Factors is the highest value that will be checked when removing factors of 10 from an int64 It is also the maximum decimal digits that can be represented with an int64 ",
        "similar_with": [
            1487
        ]
    },
    "1488": {
        "comment": "It is also the maximum decimal digits that can be represented with an int64 ",
        "similar_with": [
            1488
        ]
    },
    "1489": {
        "comment": "It is also the maximum decimal digits that can be represented with an int64 Commonly needed bigInt values treat as read only ",
        "similar_with": [
            1489
        ]
    },
    "1490": {
        "comment": "Commonly needed bigInt values treat as read only ",
        "similar_with": [
            1490
        ]
    },
    "1491": {
        "comment": "Commonly needed bigInt values treat as read only Commonly needed infDec values treat as read only ",
        "similar_with": [
            1491
        ]
    },
    "1492": {
        "comment": "Commonly needed infDec values treat as read only ",
        "similar_with": [
            1492
        ]
    },
    "1493": {
        "comment": "Commonly needed infDec values treat as read only Largest in magnitude number allowed ",
        "similar_with": [
            1493
        ]
    },
    "1494": {
        "comment": "Largest in magnitude number allowed ",
        "similar_with": [
            1494
        ]
    },
    "1495": {
        "comment": "Largest in magnitude number allowed  max int64 ",
        "similar_with": [
            1495
        ]
    },
    "1496": {
        "comment": " max int64 ",
        "similar_with": [
            1496
        ]
    },
    "1497": {
        "comment": " max int64 The maximum value we can represent milliunits for ",
        "similar_with": [
            1497
        ]
    },
    "1498": {
        "comment": "The maximum value we can represent milliunits for ",
        "similar_with": [
            1498
        ]
    },
    "1499": {
        "comment": "The maximum value we can represent milliunits for Compare with the return value of QuantityValue to ",
        "similar_with": [
            1499
        ]
    },
    "1500": {
        "comment": "Compare with the return value of QuantityValue to ",
        "similar_with": [
            1500
        ]
    },
    "1501": {
        "comment": "Compare with the return value of QuantityValue to see if its safe to use QuantityMilliValue ",
        "similar_with": [
            1501
        ]
    },
    "1502": {
        "comment": "see if its safe to use QuantityMilliValue ",
        "similar_with": [
            1502
        ]
    },
    "1503": {
        "comment": "see if its safe to use QuantityMilliValue int64Add returns ab or false if that would overflow int64 ",
        "similar_with": [
            1503
        ]
    },
    "1504": {
        "comment": "int64Add returns ab or false if that would overflow int64 ",
        "similar_with": [
            1504
        ]
    },
    "1505": {
        "comment": "int64Add returns ab or false if that would overflow int64 int64Multiply returns ab or false if that would overflow or underflow int64 ",
        "similar_with": [
            1505
        ]
    },
    "1506": {
        "comment": "int64Multiply returns ab or false if that would overflow or underflow int64 ",
        "similar_with": [
            1506
        ]
    },
    "1507": {
        "comment": "int64Multiply returns ab or false if that would overflow or underflow int64 int64MultiplyScale returns ab assuming b is greater than one or false if that would overflow or underflow int64 ",
        "similar_with": [
            1507
        ]
    },
    "1508": {
        "comment": "int64MultiplyScale returns ab assuming b is greater than one or false if that would overflow or underflow int64 ",
        "similar_with": [
            1508
        ]
    },
    "1509": {
        "comment": "int64MultiplyScale returns ab assuming b is greater than one or false if that would overflow or underflow int64 Use when b is known to be greater than one ",
        "similar_with": [
            1509
        ]
    },
    "1510": {
        "comment": "Use when b is known to be greater than one ",
        "similar_with": [
            1510
        ]
    },
    "1511": {
        "comment": "Use when b is known to be greater than one int64MultiplyScale10 multiplies a by 10 or returns false if that would overflow This method is faster than ",
        "similar_with": [
            1511
        ]
    },
    "1512": {
        "comment": "int64MultiplyScale10 multiplies a by 10 or returns false if that would overflow This method is faster than ",
        "similar_with": [
            1512
        ]
    },
    "1513": {
        "comment": "int64MultiplyScale10 multiplies a by 10 or returns false if that would overflow This method is faster than int64Multiplya 10 because the compiler can optimize constant factor multiplication ",
        "similar_with": [
            1513
        ]
    },
    "1514": {
        "comment": "int64Multiplya 10 because the compiler can optimize constant factor multiplication ",
        "similar_with": [
            1514
        ]
    },
    "1515": {
        "comment": "int64Multiplya 10 because the compiler can optimize constant factor multiplication int64MultiplyScale100 multiplies a by 100 or returns false if that would overflow This method is faster than ",
        "similar_with": [
            1515
        ]
    },
    "1516": {
        "comment": "int64MultiplyScale100 multiplies a by 100 or returns false if that would overflow This method is faster than ",
        "similar_with": [
            1516
        ]
    },
    "1517": {
        "comment": "int64MultiplyScale100 multiplies a by 100 or returns false if that would overflow This method is faster than int64Multiplya 100 because the compiler can optimize constant factor multiplication ",
        "similar_with": [
            1517
        ]
    },
    "1518": {
        "comment": "int64Multiplya 100 because the compiler can optimize constant factor multiplication ",
        "similar_with": [
            1518
        ]
    },
    "1519": {
        "comment": "int64Multiplya 100 because the compiler can optimize constant factor multiplication int64MultiplyScale1000 multiplies a by 1000 or returns false if that would overflow This method is faster than ",
        "similar_with": [
            1519
        ]
    },
    "1520": {
        "comment": "int64MultiplyScale1000 multiplies a by 1000 or returns false if that would overflow This method is faster than ",
        "similar_with": [
            1520
        ]
    },
    "1521": {
        "comment": "int64MultiplyScale1000 multiplies a by 1000 or returns false if that would overflow This method is faster than int64Multiplya 1000 because the compiler can optimize constant factor multiplication ",
        "similar_with": [
            1521
        ]
    },
    "1522": {
        "comment": "int64Multiplya 1000 because the compiler can optimize constant factor multiplication ",
        "similar_with": [
            1522
        ]
    },
    "1523": {
        "comment": "int64Multiplya 1000 because the compiler can optimize constant factor multiplication positiveScaleInt64 multiplies base by 10scale returning false if the ",
        "similar_with": [
            1523
        ]
    },
    "1524": {
        "comment": "positiveScaleInt64 multiplies base by 10scale returning false if the ",
        "similar_with": [
            1524
        ]
    },
    "1525": {
        "comment": "positiveScaleInt64 multiplies base by 10scale returning false if the value overflows Passing a negative scale is undefined ",
        "similar_with": [
            1525
        ]
    },
    "1526": {
        "comment": "value overflows Passing a negative scale is undefined ",
        "similar_with": [
            1526
        ]
    },
    "1527": {
        "comment": "value overflows Passing a negative scale is undefined negativeScaleInt64 reduces base by the provided scale rounding up until the ",
        "similar_with": [
            1527
        ]
    },
    "1528": {
        "comment": "negativeScaleInt64 reduces base by the provided scale rounding up until the ",
        "similar_with": [
            1528
        ]
    },
    "1529": {
        "comment": "negativeScaleInt64 reduces base by the provided scale rounding up until the value is zero or the scale is reached Passing a negative scale is undefined ",
        "similar_with": [
            1529
        ]
    },
    "1530": {
        "comment": "value is zero or the scale is reached Passing a negative scale is undefined ",
        "similar_with": [
            1530
        ]
    },
    "1531": {
        "comment": "value is zero or the scale is reached Passing a negative scale is undefined The value returned if not exact is rounded away from zero ",
        "similar_with": [
            1531
        ]
    },
    "1532": {
        "comment": "The value returned if not exact is rounded away from zero ",
        "similar_with": [
            1532
        ]
    },
    "1533": {
        "comment": "The value returned if not exact is rounded away from zero powInt64 raises a to the bth power Is not overflow aware ",
        "similar_with": [
            1533
        ]
    },
    "1534": {
        "comment": "powInt64 raises a to the bth power Is not overflow aware ",
        "similar_with": [
            1534
        ]
    },
    "1535": {
        "comment": "powInt64 raises a to the bth power Is not overflow aware negativeScaleInt64 returns the result of dividing base by scale  10 and the remainder or ",
        "similar_with": [
            1535
        ]
    },
    "1536": {
        "comment": "negativeScaleInt64 returns the result of dividing base by scale  10 and the remainder or ",
        "similar_with": [
            1536
        ]
    },
    "1537": {
        "comment": "negativeScaleInt64 returns the result of dividing base by scale  10 and the remainder or false if no such division is possible Dividing by negative scales is undefined ",
        "similar_with": [
            1537
        ]
    },
    "1538": {
        "comment": "false if no such division is possible Dividing by negative scales is undefined ",
        "similar_with": [
            1538
        ]
    },
    "1539": {
        "comment": "false if no such division is possible Dividing by negative scales is undefined the max scale representable in base 10 in an int64 is 18 decimal places ",
        "similar_with": [
            1539
        ]
    },
    "1540": {
        "comment": "the max scale representable in base 10 in an int64 is 18 decimal places ",
        "similar_with": [
            1540
        ]
    },
    "1541": {
        "comment": "the max scale representable in base 10 in an int64 is 18 decimal places removeInt64Factors divides in a loop the return values have the property that ",
        "similar_with": [
            1541
        ]
    },
    "1542": {
        "comment": "removeInt64Factors divides in a loop the return values have the property that ",
        "similar_with": [
            1542
        ]
    },
    "1543": {
        "comment": "removeInt64Factors divides in a loop the return values have the property that value  result  base  scale ",
        "similar_with": [
            1543
        ]
    },
    "1544": {
        "comment": "value  result  base  scale ",
        "similar_with": [
            1544
        ]
    },
    "1545": {
        "comment": "value  result  base  scale allow the compiler to optimize the common cases ",
        "similar_with": [
            1545
        ]
    },
    "1546": {
        "comment": "allow the compiler to optimize the common cases ",
        "similar_with": [
            1546
        ]
    },
    "1547": {
        "comment": "allow the compiler to optimize the common cases allow the compiler to optimize the common cases ",
        "similar_with": [
            1547
        ]
    },
    "1548": {
        "comment": "allow the compiler to optimize the common cases ",
        "similar_with": [
            1548
        ]
    },
    "1549": {
        "comment": "allow the compiler to optimize the common cases removeBigIntFactors divides in a loop the return values have the property that ",
        "similar_with": [
            1549
        ]
    },
    "1550": {
        "comment": "removeBigIntFactors divides in a loop the return values have the property that ",
        "similar_with": [
            1550
        ]
    },
    "1551": {
        "comment": "removeBigIntFactors divides in a loop the return values have the property that d  result  factor  times ",
        "similar_with": [
            1551
        ]
    },
    "1552": {
        "comment": "d  result  factor  times ",
        "similar_with": [
            1552
        ]
    },
    "1553": {
        "comment": "d  result  factor  times d may be modified in place ",
        "similar_with": [
            1553
        ]
    },
    "1554": {
        "comment": "d may be modified in place ",
        "similar_with": [
            1554
        ]
    },
    "1555": {
        "comment": "d may be modified in place If d  0 then the return values will be 0 0 ",
        "similar_with": [
            1555
        ]
    },
    "1556": {
        "comment": "If d  0 then the return values will be 0 0 ",
        "similar_with": [
            1556
        ]
    }
}